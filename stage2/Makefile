# Makefile.in generated by automake 1.12.6 from Makefile.am.
# stage2/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2012 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.








am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgincludedir = $(includedir)/grub
pkglibdir = $(libdir)/grub
pkglibexecdir = $(libexecdir)/grub
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i586-poky-linux-uclibc
#EXTRA_PROGRAMS = nbloader.exec$(EXEEXT) \
#	pxeloader.exec$(EXEEXT) \
#	diskless.exec$(EXEEXT)
#noinst_PROGRAMS = pre_stage2.exec$(EXEEXT) \
#	start.exec$(EXEEXT) \
#	start_eltorito.exec$(EXEEXT) \
#	e2fs_stage1_5.exec$(EXEEXT) \
#	fat_stage1_5.exec$(EXEEXT) \
#	ffs_stage1_5.exec$(EXEEXT) \
#	iso9660_stage1_5.exec$(EXEEXT) \
#	jfs_stage1_5.exec$(EXEEXT) \
#	minix_stage1_5.exec$(EXEEXT) \
#	reiserfs_stage1_5.exec$(EXEEXT) \
#	ufs2_stage1_5.exec$(EXEEXT) \
#	vstafs_stage1_5.exec$(EXEEXT) \
#	xfs_stage1_5.exec$(EXEEXT)
##noinst_PROGRAMS = pre_stage2.exec$(EXEEXT) \
##	start.exec$(EXEEXT) \
##	start_eltorito.exec$(EXEEXT) \
##	e2fs_stage1_5.exec$(EXEEXT) \
##	fat_stage1_5.exec$(EXEEXT) \
##	ffs_stage1_5.exec$(EXEEXT) \
##	iso9660_stage1_5.exec$(EXEEXT) \
##	jfs_stage1_5.exec$(EXEEXT) \
##	minix_stage1_5.exec$(EXEEXT) \
##	reiserfs_stage1_5.exec$(EXEEXT) \
##	ufs2_stage1_5.exec$(EXEEXT) \
##	vstafs_stage1_5.exec$(EXEEXT) \
##	xfs_stage1_5.exec$(EXEEXT) \
##	nbloader.exec$(EXEEXT) \
##	pxeloader.exec$(EXEEXT) \
##	diskless.exec$(EXEEXT)
##am__append_1 = ../netboot/libdrivers.a
subdir = stage2
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(top_srcdir)/depcomp \
	$(top_srcdir)/mkinstalldirs
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
libgrub_a_AR = $(AR) $(ARFLAGS)
libgrub_a_LIBADD =
am_libgrub_a_OBJECTS = libgrub_a-boot.$(OBJEXT) \
	libgrub_a-builtins.$(OBJEXT) libgrub_a-char_io.$(OBJEXT) \
	libgrub_a-cmdline.$(OBJEXT) libgrub_a-common.$(OBJEXT) \
	libgrub_a-disk_io.$(OBJEXT) libgrub_a-fsys_ext2fs.$(OBJEXT) \
	libgrub_a-fsys_fat.$(OBJEXT) libgrub_a-fsys_ffs.$(OBJEXT) \
	libgrub_a-fsys_iso9660.$(OBJEXT) libgrub_a-fsys_jfs.$(OBJEXT) \
	libgrub_a-fsys_minix.$(OBJEXT) \
	libgrub_a-fsys_reiserfs.$(OBJEXT) \
	libgrub_a-fsys_ufs2.$(OBJEXT) libgrub_a-fsys_vstafs.$(OBJEXT) \
	libgrub_a-fsys_xfs.$(OBJEXT) libgrub_a-gunzip.$(OBJEXT) \
	libgrub_a-md5.$(OBJEXT) libgrub_a-serial.$(OBJEXT) \
	libgrub_a-sha256crypt.$(OBJEXT) \
	libgrub_a-sha512crypt.$(OBJEXT) libgrub_a-stage2.$(OBJEXT) \
	libgrub_a-terminfo.$(OBJEXT) libgrub_a-tparm.$(OBJEXT) \
	libgrub_a-graphics.$(OBJEXT) libgrub_a-efistubs.$(OBJEXT)
libgrub_a_OBJECTS = $(am_libgrub_a_OBJECTS)
libstage2_a_AR = $(AR) $(ARFLAGS)
libstage2_a_LIBADD =
am_libstage2_a_OBJECTS = libstage2_a-boot.$(OBJEXT) \
	libstage2_a-builtins.$(OBJEXT) libstage2_a-char_io.$(OBJEXT) \
	libstage2_a-cmdline.$(OBJEXT) libstage2_a-common.$(OBJEXT) \
	libstage2_a-disk_io.$(OBJEXT) \
	libstage2_a-fsys_ext2fs.$(OBJEXT) \
	libstage2_a-fsys_fat.$(OBJEXT) libstage2_a-fsys_ffs.$(OBJEXT) \
	libstage2_a-fsys_iso9660.$(OBJEXT) \
	libstage2_a-fsys_jfs.$(OBJEXT) \
	libstage2_a-fsys_minix.$(OBJEXT) \
	libstage2_a-fsys_reiserfs.$(OBJEXT) \
	libstage2_a-fsys_ufs2.$(OBJEXT) \
	libstage2_a-fsys_vstafs.$(OBJEXT) \
	libstage2_a-fsys_xfs.$(OBJEXT) libstage2_a-gunzip.$(OBJEXT) \
	libstage2_a-md5.$(OBJEXT) libstage2_a-serial.$(OBJEXT) \
	libstage2_a-sha256crypt.$(OBJEXT) \
	libstage2_a-sha512crypt.$(OBJEXT) libstage2_a-stage2.$(OBJEXT) \
	libstage2_a-terminfo.$(OBJEXT) libstage2_a-tparm.$(OBJEXT) \
	libstage2_a-efistubs.$(OBJEXT)
libstage2_a_OBJECTS = $(am_libstage2_a_OBJECTS)
PROGRAMS = $(noinst_PROGRAMS)
am__diskless_exec_SOURCES_DIST = asm.S bios.c boot.c builtins.c \
	char_io.c cmdline.c common.c console.c disk_io.c fsys_ext2fs.c \
	fsys_fat.c fsys_ffs.c fsys_iso9660.c fsys_jfs.c fsys_minix.c \
	fsys_reiserfs.c fsys_ufs2.c fsys_vstafs.c fsys_xfs.c gunzip.c \
	hercules.c md5.c serial.c smp-imps.c sha256crypt.c \
	sha512crypt.c stage2.c terminfo.c tparm.c graphics.c
#am__objects_1 = diskless_exec-asm.$(OBJEXT) \
#	diskless_exec-bios.$(OBJEXT) \
#	diskless_exec-boot.$(OBJEXT) \
#	diskless_exec-builtins.$(OBJEXT) \
#	diskless_exec-char_io.$(OBJEXT) \
#	diskless_exec-cmdline.$(OBJEXT) \
#	diskless_exec-common.$(OBJEXT) \
#	diskless_exec-console.$(OBJEXT) \
#	diskless_exec-disk_io.$(OBJEXT) \
#	diskless_exec-fsys_ext2fs.$(OBJEXT) \
#	diskless_exec-fsys_fat.$(OBJEXT) \
#	diskless_exec-fsys_ffs.$(OBJEXT) \
#	diskless_exec-fsys_iso9660.$(OBJEXT) \
#	diskless_exec-fsys_jfs.$(OBJEXT) \
#	diskless_exec-fsys_minix.$(OBJEXT) \
#	diskless_exec-fsys_reiserfs.$(OBJEXT) \
#	diskless_exec-fsys_ufs2.$(OBJEXT) \
#	diskless_exec-fsys_vstafs.$(OBJEXT) \
#	diskless_exec-fsys_xfs.$(OBJEXT) \
#	diskless_exec-gunzip.$(OBJEXT) \
#	diskless_exec-hercules.$(OBJEXT) \
#	diskless_exec-md5.$(OBJEXT) \
#	diskless_exec-serial.$(OBJEXT) \
#	diskless_exec-smp-imps.$(OBJEXT) \
#	diskless_exec-sha256crypt.$(OBJEXT) \
#	diskless_exec-sha512crypt.$(OBJEXT) \
#	diskless_exec-stage2.$(OBJEXT) \
#	diskless_exec-terminfo.$(OBJEXT) \
#	diskless_exec-tparm.$(OBJEXT) \
#	diskless_exec-graphics.$(OBJEXT)
#am_diskless_exec_OBJECTS = $(am__objects_1)
diskless_exec_OBJECTS = $(am_diskless_exec_OBJECTS)
#diskless_exec_DEPENDENCIES =  \
#	../netboot/libdrivers.a
diskless_exec_LINK = $(CCLD) $(diskless_exec_CFLAGS) $(CFLAGS) \
	$(diskless_exec_LDFLAGS) $(LDFLAGS) -o $@
am__e2fs_stage1_5_exec_SOURCES_DIST = start.S asm.S common.c char_io.c \
	disk_io.c stage1_5.c fsys_ext2fs.c bios.c
#am_e2fs_stage1_5_exec_OBJECTS =  \
#	e2fs_stage1_5_exec-start.$(OBJEXT) \
#	e2fs_stage1_5_exec-asm.$(OBJEXT) \
#	e2fs_stage1_5_exec-common.$(OBJEXT) \
#	e2fs_stage1_5_exec-char_io.$(OBJEXT) \
#	e2fs_stage1_5_exec-disk_io.$(OBJEXT) \
#	e2fs_stage1_5_exec-stage1_5.$(OBJEXT) \
#	e2fs_stage1_5_exec-fsys_ext2fs.$(OBJEXT) \
#	e2fs_stage1_5_exec-bios.$(OBJEXT)
e2fs_stage1_5_exec_OBJECTS = $(am_e2fs_stage1_5_exec_OBJECTS)
e2fs_stage1_5_exec_DEPENDENCIES =
e2fs_stage1_5_exec_LINK = $(CCLD) $(e2fs_stage1_5_exec_CFLAGS) \
	$(CFLAGS) $(e2fs_stage1_5_exec_LDFLAGS) $(LDFLAGS) -o $@
am__fat_stage1_5_exec_SOURCES_DIST = start.S asm.S common.c char_io.c \
	disk_io.c stage1_5.c fsys_fat.c bios.c
#am_fat_stage1_5_exec_OBJECTS =  \
#	fat_stage1_5_exec-start.$(OBJEXT) \
#	fat_stage1_5_exec-asm.$(OBJEXT) \
#	fat_stage1_5_exec-common.$(OBJEXT) \
#	fat_stage1_5_exec-char_io.$(OBJEXT) \
#	fat_stage1_5_exec-disk_io.$(OBJEXT) \
#	fat_stage1_5_exec-stage1_5.$(OBJEXT) \
#	fat_stage1_5_exec-fsys_fat.$(OBJEXT) \
#	fat_stage1_5_exec-bios.$(OBJEXT)
fat_stage1_5_exec_OBJECTS = $(am_fat_stage1_5_exec_OBJECTS)
fat_stage1_5_exec_DEPENDENCIES =
fat_stage1_5_exec_LINK = $(CCLD) $(fat_stage1_5_exec_CFLAGS) $(CFLAGS) \
	$(fat_stage1_5_exec_LDFLAGS) $(LDFLAGS) -o $@
am__ffs_stage1_5_exec_SOURCES_DIST = start.S asm.S common.c char_io.c \
	disk_io.c stage1_5.c fsys_ffs.c bios.c
#am_ffs_stage1_5_exec_OBJECTS =  \
#	ffs_stage1_5_exec-start.$(OBJEXT) \
#	ffs_stage1_5_exec-asm.$(OBJEXT) \
#	ffs_stage1_5_exec-common.$(OBJEXT) \
#	ffs_stage1_5_exec-char_io.$(OBJEXT) \
#	ffs_stage1_5_exec-disk_io.$(OBJEXT) \
#	ffs_stage1_5_exec-stage1_5.$(OBJEXT) \
#	ffs_stage1_5_exec-fsys_ffs.$(OBJEXT) \
#	ffs_stage1_5_exec-bios.$(OBJEXT)
ffs_stage1_5_exec_OBJECTS = $(am_ffs_stage1_5_exec_OBJECTS)
ffs_stage1_5_exec_DEPENDENCIES =
ffs_stage1_5_exec_LINK = $(CCLD) $(ffs_stage1_5_exec_CFLAGS) $(CFLAGS) \
	$(ffs_stage1_5_exec_LDFLAGS) $(LDFLAGS) -o $@
am__iso9660_stage1_5_exec_SOURCES_DIST = start_eltorito.S asm.S \
	common.c char_io.c disk_io.c stage1_5.c fsys_iso9660.c bios.c
#am_iso9660_stage1_5_exec_OBJECTS = iso9660_stage1_5_exec-start_eltorito.$(OBJEXT) \
#	iso9660_stage1_5_exec-asm.$(OBJEXT) \
#	iso9660_stage1_5_exec-common.$(OBJEXT) \
#	iso9660_stage1_5_exec-char_io.$(OBJEXT) \
#	iso9660_stage1_5_exec-disk_io.$(OBJEXT) \
#	iso9660_stage1_5_exec-stage1_5.$(OBJEXT) \
#	iso9660_stage1_5_exec-fsys_iso9660.$(OBJEXT) \
#	iso9660_stage1_5_exec-bios.$(OBJEXT)
iso9660_stage1_5_exec_OBJECTS = $(am_iso9660_stage1_5_exec_OBJECTS)
iso9660_stage1_5_exec_DEPENDENCIES =
iso9660_stage1_5_exec_LINK = $(CCLD) $(iso9660_stage1_5_exec_CFLAGS) \
	$(CFLAGS) $(iso9660_stage1_5_exec_LDFLAGS) $(LDFLAGS) -o $@
am__jfs_stage1_5_exec_SOURCES_DIST = start.S asm.S common.c char_io.c \
	disk_io.c stage1_5.c fsys_jfs.c bios.c
#am_jfs_stage1_5_exec_OBJECTS =  \
#	jfs_stage1_5_exec-start.$(OBJEXT) \
#	jfs_stage1_5_exec-asm.$(OBJEXT) \
#	jfs_stage1_5_exec-common.$(OBJEXT) \
#	jfs_stage1_5_exec-char_io.$(OBJEXT) \
#	jfs_stage1_5_exec-disk_io.$(OBJEXT) \
#	jfs_stage1_5_exec-stage1_5.$(OBJEXT) \
#	jfs_stage1_5_exec-fsys_jfs.$(OBJEXT) \
#	jfs_stage1_5_exec-bios.$(OBJEXT)
jfs_stage1_5_exec_OBJECTS = $(am_jfs_stage1_5_exec_OBJECTS)
jfs_stage1_5_exec_DEPENDENCIES =
jfs_stage1_5_exec_LINK = $(CCLD) $(jfs_stage1_5_exec_CFLAGS) $(CFLAGS) \
	$(jfs_stage1_5_exec_LDFLAGS) $(LDFLAGS) -o $@
am__minix_stage1_5_exec_SOURCES_DIST = start.S asm.S common.c \
	char_io.c disk_io.c stage1_5.c fsys_minix.c bios.c
#am_minix_stage1_5_exec_OBJECTS =  \
#	minix_stage1_5_exec-start.$(OBJEXT) \
#	minix_stage1_5_exec-asm.$(OBJEXT) \
#	minix_stage1_5_exec-common.$(OBJEXT) \
#	minix_stage1_5_exec-char_io.$(OBJEXT) \
#	minix_stage1_5_exec-disk_io.$(OBJEXT) \
#	minix_stage1_5_exec-stage1_5.$(OBJEXT) \
#	minix_stage1_5_exec-fsys_minix.$(OBJEXT) \
#	minix_stage1_5_exec-bios.$(OBJEXT)
minix_stage1_5_exec_OBJECTS = $(am_minix_stage1_5_exec_OBJECTS)
minix_stage1_5_exec_DEPENDENCIES =
minix_stage1_5_exec_LINK = $(CCLD) $(minix_stage1_5_exec_CFLAGS) \
	$(CFLAGS) $(minix_stage1_5_exec_LDFLAGS) $(LDFLAGS) -o $@
am__nbloader_exec_SOURCES_DIST = nbloader.S
#am_nbloader_exec_OBJECTS =  \
#	nbloader_exec-nbloader.$(OBJEXT)
nbloader_exec_OBJECTS = $(am_nbloader_exec_OBJECTS)
nbloader_exec_LDADD = $(LDADD)
nbloader_exec_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(nbloader_exec_LDFLAGS) $(LDFLAGS) -o $@
am__pre_stage2_exec_SOURCES_DIST = asm.S bios.c boot.c builtins.c \
	char_io.c cmdline.c common.c console.c disk_io.c fsys_ext2fs.c \
	fsys_fat.c fsys_ffs.c fsys_iso9660.c fsys_jfs.c fsys_minix.c \
	fsys_reiserfs.c fsys_ufs2.c fsys_vstafs.c fsys_xfs.c gunzip.c \
	hercules.c md5.c serial.c smp-imps.c sha256crypt.c \
	sha512crypt.c stage2.c terminfo.c tparm.c graphics.c
#am_pre_stage2_exec_OBJECTS =  \
#	pre_stage2_exec-asm.$(OBJEXT) \
#	pre_stage2_exec-bios.$(OBJEXT) \
#	pre_stage2_exec-boot.$(OBJEXT) \
#	pre_stage2_exec-builtins.$(OBJEXT) \
#	pre_stage2_exec-char_io.$(OBJEXT) \
#	pre_stage2_exec-cmdline.$(OBJEXT) \
#	pre_stage2_exec-common.$(OBJEXT) \
#	pre_stage2_exec-console.$(OBJEXT) \
#	pre_stage2_exec-disk_io.$(OBJEXT) \
#	pre_stage2_exec-fsys_ext2fs.$(OBJEXT) \
#	pre_stage2_exec-fsys_fat.$(OBJEXT) \
#	pre_stage2_exec-fsys_ffs.$(OBJEXT) \
#	pre_stage2_exec-fsys_iso9660.$(OBJEXT) \
#	pre_stage2_exec-fsys_jfs.$(OBJEXT) \
#	pre_stage2_exec-fsys_minix.$(OBJEXT) \
#	pre_stage2_exec-fsys_reiserfs.$(OBJEXT) \
#	pre_stage2_exec-fsys_ufs2.$(OBJEXT) \
#	pre_stage2_exec-fsys_vstafs.$(OBJEXT) \
#	pre_stage2_exec-fsys_xfs.$(OBJEXT) \
#	pre_stage2_exec-gunzip.$(OBJEXT) \
#	pre_stage2_exec-hercules.$(OBJEXT) \
#	pre_stage2_exec-md5.$(OBJEXT) \
#	pre_stage2_exec-serial.$(OBJEXT) \
#	pre_stage2_exec-smp-imps.$(OBJEXT) \
#	pre_stage2_exec-sha256crypt.$(OBJEXT) \
#	pre_stage2_exec-sha512crypt.$(OBJEXT) \
#	pre_stage2_exec-stage2.$(OBJEXT) \
#	pre_stage2_exec-terminfo.$(OBJEXT) \
#	pre_stage2_exec-tparm.$(OBJEXT) \
#	pre_stage2_exec-graphics.$(OBJEXT)
pre_stage2_exec_OBJECTS = $(am_pre_stage2_exec_OBJECTS)
#pre_stage2_exec_DEPENDENCIES = $(am__append_1)
pre_stage2_exec_LINK = $(CCLD) $(pre_stage2_exec_CFLAGS) $(CFLAGS) \
	$(pre_stage2_exec_LDFLAGS) $(LDFLAGS) -o $@
am__pxeloader_exec_SOURCES_DIST = pxeloader.S
#am_pxeloader_exec_OBJECTS =  \
#	pxeloader_exec-pxeloader.$(OBJEXT)
pxeloader_exec_OBJECTS = $(am_pxeloader_exec_OBJECTS)
pxeloader_exec_LDADD = $(LDADD)
pxeloader_exec_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(pxeloader_exec_LDFLAGS) $(LDFLAGS) -o $@
am__reiserfs_stage1_5_exec_SOURCES_DIST = start.S asm.S common.c \
	char_io.c disk_io.c stage1_5.c fsys_reiserfs.c bios.c
#am_reiserfs_stage1_5_exec_OBJECTS =  \
#	reiserfs_stage1_5_exec-start.$(OBJEXT) \
#	reiserfs_stage1_5_exec-asm.$(OBJEXT) \
#	reiserfs_stage1_5_exec-common.$(OBJEXT) \
#	reiserfs_stage1_5_exec-char_io.$(OBJEXT) \
#	reiserfs_stage1_5_exec-disk_io.$(OBJEXT) \
#	reiserfs_stage1_5_exec-stage1_5.$(OBJEXT) \
#	reiserfs_stage1_5_exec-fsys_reiserfs.$(OBJEXT) \
#	reiserfs_stage1_5_exec-bios.$(OBJEXT)
reiserfs_stage1_5_exec_OBJECTS = $(am_reiserfs_stage1_5_exec_OBJECTS)
reiserfs_stage1_5_exec_DEPENDENCIES =
reiserfs_stage1_5_exec_LINK = $(CCLD) $(reiserfs_stage1_5_exec_CFLAGS) \
	$(CFLAGS) $(reiserfs_stage1_5_exec_LDFLAGS) $(LDFLAGS) -o $@
am__start_exec_SOURCES_DIST = start.S
#am_start_exec_OBJECTS =  \
#	start_exec-start.$(OBJEXT)
start_exec_OBJECTS = $(am_start_exec_OBJECTS)
start_exec_DEPENDENCIES =
start_exec_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(start_exec_LDFLAGS) \
	$(LDFLAGS) -o $@
am__start_eltorito_exec_SOURCES_DIST = start_eltorito.S
#am_start_eltorito_exec_OBJECTS = start_eltorito_exec-start_eltorito.$(OBJEXT)
start_eltorito_exec_OBJECTS = $(am_start_eltorito_exec_OBJECTS)
start_eltorito_exec_DEPENDENCIES =
start_eltorito_exec_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(start_eltorito_exec_LDFLAGS) $(LDFLAGS) -o $@
am__ufs2_stage1_5_exec_SOURCES_DIST = start.S asm.S common.c char_io.c \
	disk_io.c stage1_5.c fsys_ufs2.c bios.c
#am_ufs2_stage1_5_exec_OBJECTS =  \
#	ufs2_stage1_5_exec-start.$(OBJEXT) \
#	ufs2_stage1_5_exec-asm.$(OBJEXT) \
#	ufs2_stage1_5_exec-common.$(OBJEXT) \
#	ufs2_stage1_5_exec-char_io.$(OBJEXT) \
#	ufs2_stage1_5_exec-disk_io.$(OBJEXT) \
#	ufs2_stage1_5_exec-stage1_5.$(OBJEXT) \
#	ufs2_stage1_5_exec-fsys_ufs2.$(OBJEXT) \
#	ufs2_stage1_5_exec-bios.$(OBJEXT)
ufs2_stage1_5_exec_OBJECTS = $(am_ufs2_stage1_5_exec_OBJECTS)
ufs2_stage1_5_exec_DEPENDENCIES =
ufs2_stage1_5_exec_LINK = $(CCLD) $(ufs2_stage1_5_exec_CFLAGS) \
	$(CFLAGS) $(ufs2_stage1_5_exec_LDFLAGS) $(LDFLAGS) -o $@
am__vstafs_stage1_5_exec_SOURCES_DIST = start.S asm.S common.c \
	char_io.c disk_io.c stage1_5.c fsys_vstafs.c bios.c
#am_vstafs_stage1_5_exec_OBJECTS =  \
#	vstafs_stage1_5_exec-start.$(OBJEXT) \
#	vstafs_stage1_5_exec-asm.$(OBJEXT) \
#	vstafs_stage1_5_exec-common.$(OBJEXT) \
#	vstafs_stage1_5_exec-char_io.$(OBJEXT) \
#	vstafs_stage1_5_exec-disk_io.$(OBJEXT) \
#	vstafs_stage1_5_exec-stage1_5.$(OBJEXT) \
#	vstafs_stage1_5_exec-fsys_vstafs.$(OBJEXT) \
#	vstafs_stage1_5_exec-bios.$(OBJEXT)
vstafs_stage1_5_exec_OBJECTS = $(am_vstafs_stage1_5_exec_OBJECTS)
vstafs_stage1_5_exec_DEPENDENCIES =
vstafs_stage1_5_exec_LINK = $(CCLD) $(vstafs_stage1_5_exec_CFLAGS) \
	$(CFLAGS) $(vstafs_stage1_5_exec_LDFLAGS) $(LDFLAGS) -o $@
am__xfs_stage1_5_exec_SOURCES_DIST = start.S asm.S common.c char_io.c \
	disk_io.c stage1_5.c fsys_xfs.c bios.c
#am_xfs_stage1_5_exec_OBJECTS =  \
#	xfs_stage1_5_exec-start.$(OBJEXT) \
#	xfs_stage1_5_exec-asm.$(OBJEXT) \
#	xfs_stage1_5_exec-common.$(OBJEXT) \
#	xfs_stage1_5_exec-char_io.$(OBJEXT) \
#	xfs_stage1_5_exec-disk_io.$(OBJEXT) \
#	xfs_stage1_5_exec-stage1_5.$(OBJEXT) \
#	xfs_stage1_5_exec-fsys_xfs.$(OBJEXT) \
#	xfs_stage1_5_exec-bios.$(OBJEXT)
xfs_stage1_5_exec_OBJECTS = $(am_xfs_stage1_5_exec_OBJECTS)
xfs_stage1_5_exec_DEPENDENCIES =
xfs_stage1_5_exec_LINK = $(CCLD) $(xfs_stage1_5_exec_CFLAGS) $(CFLAGS) \
	$(xfs_stage1_5_exec_LDFLAGS) $(LDFLAGS) -o $@
SCRIPTS = $(noinst_SCRIPTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CPPASCOMPILE = $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS)
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libgrub_a_SOURCES) $(libstage2_a_SOURCES) \
	$(diskless_exec_SOURCES) $(e2fs_stage1_5_exec_SOURCES) \
	$(fat_stage1_5_exec_SOURCES) $(ffs_stage1_5_exec_SOURCES) \
	$(iso9660_stage1_5_exec_SOURCES) $(jfs_stage1_5_exec_SOURCES) \
	$(minix_stage1_5_exec_SOURCES) $(nbloader_exec_SOURCES) \
	$(pre_stage2_exec_SOURCES) $(pxeloader_exec_SOURCES) \
	$(reiserfs_stage1_5_exec_SOURCES) $(start_exec_SOURCES) \
	$(start_eltorito_exec_SOURCES) $(ufs2_stage1_5_exec_SOURCES) \
	$(vstafs_stage1_5_exec_SOURCES) $(xfs_stage1_5_exec_SOURCES)
DIST_SOURCES = $(libgrub_a_SOURCES) $(libstage2_a_SOURCES) \
	$(am__diskless_exec_SOURCES_DIST) \
	$(am__e2fs_stage1_5_exec_SOURCES_DIST) \
	$(am__fat_stage1_5_exec_SOURCES_DIST) \
	$(am__ffs_stage1_5_exec_SOURCES_DIST) \
	$(am__iso9660_stage1_5_exec_SOURCES_DIST) \
	$(am__jfs_stage1_5_exec_SOURCES_DIST) \
	$(am__minix_stage1_5_exec_SOURCES_DIST) \
	$(am__nbloader_exec_SOURCES_DIST) \
	$(am__pre_stage2_exec_SOURCES_DIST) \
	$(am__pxeloader_exec_SOURCES_DIST) \
	$(am__reiserfs_stage1_5_exec_SOURCES_DIST) \
	$(am__start_exec_SOURCES_DIST) \
	$(am__start_eltorito_exec_SOURCES_DIST) \
	$(am__ufs2_stage1_5_exec_SOURCES_DIST) \
	$(am__vstafs_stage1_5_exec_SOURCES_DIST) \
	$(am__xfs_stage1_5_exec_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(pkgdatadir)"
DATA = $(noinst_DATA) $(pkgdata_DATA)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = $(am__tty_colors_dummy)
AM_RECURSIVE_TARGETS = buildtest runtest
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

# Stage 2 and Stage 1.5's.
pkgdatadir = $(datadir)/$(PACKAGE)/$(host_cpu)-$(host_vendor)
ACLOCAL = ${SHELL} /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/work/i586-poky-linux-uclibc/grub/0.97+gitAUTOINC+5775f32a6268dead6939d01cbe72f23972f6d3c0-r0/git/missing --run aclocal-1.12
AMTAR = $${TAR-tar}
AUTOCONF = ${SHELL} /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/work/i586-poky-linux-uclibc/grub/0.97+gitAUTOINC+5775f32a6268dead6939d01cbe72f23972f6d3c0-r0/git/missing --run autoconf
AUTOHEADER = ${SHELL} /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/work/i586-poky-linux-uclibc/grub/0.97+gitAUTOINC+5775f32a6268dead6939d01cbe72f23972f6d3c0-r0/git/missing --run autoheader
AUTOMAKE = ${SHELL} /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/work/i586-poky-linux-uclibc/grub/0.97+gitAUTOINC+5775f32a6268dead6939d01cbe72f23972f6d3c0-r0/git/missing --run automake-1.12
AWK = gawk
CC = i586-poky-linux-uclibc-gcc  -m32 -march=i586 --sysroot=/home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/sysroots/clanton
CCAS = i586-poky-linux-uclibc-gcc  -m32 -march=i586 --sysroot=/home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/sysroots/clanton
CCASDEPMODE = depmode=none
CCASFLAGS = $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)
CCDEPMODE = depmode=none
CFLAGS = -O2 -pipe -g -feliminate-unused-debug-types -Os -fno-strict-aliasing -Wall -Werror -Wno-shadow -Wno-unused -Wno-pointer-sign -DINTEL_QUARK_TEST=1 -g
CPP = i586-poky-linux-uclibc-gcc -E --sysroot=/home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/sysroots/clanton  -m32 -march=i586
CPPFLAGS =  -Wall -Wmissing-prototypes -Wunused -Wshadow -Wpointer-arith -falign-jumps=1 -falign-loops=1 -falign-functions=1 -Wundef
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EFI_ARCH = ia32
EGREP = /bin/grep -E
EXEEXT = 
FSYS_CFLAGS =  -DFSYS_EXT2FS=1 -DFSYS_FAT=1 -DFSYS_FFS=1 -DFSYS_UFS2=1 -DFSYS_MINIX=1 -DFSYS_REISERFS=1 -DFSYS_VSTAFS=1 -DFSYS_JFS=1 -DFSYS_XFS=1 -DFSYS_ISO9660=1 -DUSE_MD5_PASSWORDS=1
GNUEFI_CRT0 = /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/sysroots/clanton/usr/lib/crt0-efi-ia32.o
GNUEFI_LDS = /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/sysroots/clanton/usr/lib/elf_ia32_efi.lds
GREP = /bin/grep
GRUB_CFLAGS = 
GRUB_LIBS = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = -Wl,-O1 -Wl,--hash-style=gnu -Wl,--as-needed
LIBEFI = /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/sysroots/clanton/usr/lib/libefi.a
LIBGCC = /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/sysroots/clanton/usr/lib/i586-poky-linux-uclibc/4.7.2/libgcc.a
LIBGNUEFI = /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/sysroots/clanton/usr/lib/libgnuefi.a
LIBOBJS = 
LIBS = 
LOADER_LDFLAGS = -Wl,--build-id=none /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/sysroots/clanton/usr/lib/i586-poky-linux-uclibc/4.7.2/libgcc.a
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/work/i586-poky-linux-uclibc/grub/0.97+gitAUTOINC+5775f32a6268dead6939d01cbe72f23972f6d3c0-r0/git/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NETBOOT_DRIVERS = 
NET_CFLAGS = 
NET_EXTRAFLAGS =  -DCONGESTED=1 -DNE_SCAN=0x280,0x300,0x320,0x340 -DWD_DEFAULT_MEM=0xCC000
OBJCOPY = i586-poky-linux-uclibc-objcopy
OBJEXT = o
PACKAGE = grub
PACKAGE_BUGREPORT = bug-grub@gnu.org
PACKAGE_NAME = GRUB
PACKAGE_STRING = GRUB 0.97
PACKAGE_TARNAME = grub
PACKAGE_URL = 
PACKAGE_VERSION = 0.97
PATH_SEPARATOR = :
PERL = 
RANLIB = i586-poky-linux-uclibc-ranlib
SET_MAKE = 
SHELL = /bin/sh
STAGE1_CFLAGS = 
STAGE2_CFLAGS =  -fno-stack-protector -isystem /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/sysroots/i686-linux/usr/lib/i586-poky-linux-uclibc/gcc/i586-poky-linux-uclibc/4.7.2/include -fpic -fshort-wchar -fno-strict-aliasing -fno-merge-constants
STRIP = i586-poky-linux-uclibc-strip
VERSION = 0.97
abs_builddir = /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/work/i586-poky-linux-uclibc/grub/0.97+gitAUTOINC+5775f32a6268dead6939d01cbe72f23972f6d3c0-r0/git/stage2
abs_srcdir = /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/work/i586-poky-linux-uclibc/grub/0.97+gitAUTOINC+5775f32a6268dead6939d01cbe72f23972f6d3c0-r0/git/stage2
abs_top_builddir = /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/work/i586-poky-linux-uclibc/grub/0.97+gitAUTOINC+5775f32a6268dead6939d01cbe72f23972f6d3c0-r0/git
abs_top_srcdir = /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/work/i586-poky-linux-uclibc/grub/0.97+gitAUTOINC+5775f32a6268dead6939d01cbe72f23972f6d3c0-r0/git
ac_ct_CC = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = /usr/bin
build = i686-pc-linux-gnu
build_alias = i686-linux
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = /usr/share
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = /usr
host = i586-poky-linux-uclibc
host_alias = i586-poky-linux-uclibc
host_cpu = i386
host_os = linux-uclibc
host_vendor = poky
htmldir = ${docdir}
includedir = /usr/include
infodir = /usr/share/info
install_sh = ${SHELL} /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/work/i586-poky-linux-uclibc/grub/0.97+gitAUTOINC+5775f32a6268dead6939d01cbe72f23972f6d3c0-r0/git/install-sh
libdir = /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/sysroots/clanton/usr/lib
libexecdir = /usr/lib/grub
localedir = ${datarootdir}/locale
localstatedir = /var
mandir = /usr/share/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
platform = efi
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = /usr/sbin
sharedstatedir = /com
srcdir = .
sysconfdir = /etc
target_alias = i586-poky-linux-uclibc
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..

# For test target.
TESTS = size_test
noinst_SCRIPTS = $(TESTS)

# For dist target.
noinst_HEADERS = apic.h defs.h dir.h disk_inode.h disk_inode_ffs.h \
        fat.h filesys.h freebsd.h fs.h hercules.h i386-elf.h \
	imgact_aout.h iso9660.h jfs.h mb_header.h mb_info.h md5.h \
	nbi.h pc_slice.h serial.h shared.h smp-imps.h term.h \
	terminfo.h tparm.h nbi.h ufs2.h vstafs.h xfs.h graphics.h gpt.h

EXTRA_DIST = setjmp.S apm.S $(noinst_SCRIPTS)

# For <stage1.h>.
INCLUDES = -I$(top_srcdir)/stage1
#noinst_LIBRARIES = libgrub.a

# The library for /sbin/grub.
noinst_LIBRARIES = libgrub.a libstage2.a
libgrub_a_SOURCES = boot.c builtins.c char_io.c cmdline.c common.c \
	disk_io.c fsys_ext2fs.c fsys_fat.c fsys_ffs.c fsys_iso9660.c \
	fsys_jfs.c fsys_minix.c fsys_reiserfs.c fsys_ufs2.c \
	fsys_vstafs.c fsys_xfs.c gunzip.c md5.c serial.c sha256crypt.c \
	sha512crypt.c stage2.c terminfo.c tparm.c graphics.c efistubs.c

libgrub_a_CFLAGS = $(GRUB_CFLAGS) -I$(top_srcdir)/lib \
	-DGRUB_UTIL=1 -DFSYS_EXT2FS=1 -DFSYS_FAT=1 -DFSYS_FFS=1 \
	-DFSYS_ISO9660=1 -DFSYS_JFS=1 -DFSYS_MINIX=1 -DFSYS_REISERFS=1 \
	-DFSYS_UFS2=1 -DFSYS_VSTAFS=1 -DFSYS_XFS=1 \
	-DUSE_MD5_PASSWORDS=1 -DSUPPORT_SERIAL=1 -DSUPPORT_HERCULES=1

#pkgdata_DATA = stage2 stage2_eltorito e2fs_stage1_5 fat_stage1_5 \
#	ffs_stage1_5 iso9660_stage1_5 jfs_stage1_5 minix_stage1_5 \
#	reiserfs_stage1_5 ufs2_stage1_5 vstafs_stage1_5 xfs_stage1_5

##pkgdata_DATA = stage2 stage2_eltorito e2fs_stage1_5 fat_stage1_5 \
##	ffs_stage1_5 iso9660_stage1_5 jfs_stage1_5 minix_stage1_5 \
##	reiserfs_stage1_5 ufs2_stage1_5 vstafs_stage1_5 xfs_stage1_5 \
##	nbgrub pxegrub

#noinst_DATA = pre_stage2 start start_eltorito
##noinst_DATA = pre_stage2 start start_eltorito nbloader pxeloader diskless
#MOSTLYCLEANFILES = $(noinst_PROGRAMS)
PRE_STAGE2_LINK = -nostdlib -Wl,-N -Wl,-Ttext -Wl,8200 $(LOADER_LDFLAGS)
START_LINK = -nostdlib -Wl,-N -Wl,-Ttext -Wl,8000 $(LOADER_LDFLAGS)
NBLOADER_LINK = -nostdlib -Wl,-N -Wl,-Ttext -Wl,0 $(LOADER_LDFLAGS)
PXELOADER_LINK = -nostdlib -Wl,-N -Wl,-Ttext -Wl,7C00 $(LOADER_LDFLAGS)
START_ELTORITO_LINK = -nostdlib -Wl,-N -Wl,-Ttext -Wl,7C00 $(LOADER_LDFLAGS)
NETBOOT_FLAGS = 
#NETBOOT_FLAGS = -I$(top_srcdir)/netboot -DSUPPORT_NETBOOT=1
#SERIAL_FLAGS = 
SERIAL_FLAGS = -DSUPPORT_SERIAL=1
HERCULES_FLAGS = 
#HERCULES_FLAGS = -DSUPPORT_HERCULES=1
#GRAPHICS_FLAGS = 
GRAPHICS_FLAGS = -DSUPPORT_GRAPHICS=1
STAGE2_COMPILE = $(STAGE2_CFLAGS) -fno-builtin -nostdinc \
	$(NETBOOT_FLAGS) $(SERIAL_FLAGS) $(HERCULES_FLAGS) $(GRAPHICS_FLAGS)

libstage2_a_SOURCES = boot.c builtins.c char_io.c cmdline.c common.c \
	disk_io.c fsys_ext2fs.c fsys_fat.c fsys_ffs.c fsys_iso9660.c \
	fsys_jfs.c fsys_minix.c fsys_reiserfs.c fsys_ufs2.c \
	fsys_vstafs.c fsys_xfs.c gunzip.c md5.c serial.c sha256crypt.c \
	sha512crypt.c stage2.c terminfo.c tparm.c efistubs.c

libstage2_a_CFLAGS = $(STAGE2_COMPILE) $(FSYS_CFLAGS)
#STAGE1_5_LINK = -nostdlib -Wl,-N -Wl,-Ttext -Wl,2000 $(LOADER_LDFLAGS)
#STAGE1_5_COMPILE = $(STAGE2_COMPILE) -DNO_DECOMPRESSION=1 -DSTAGE1_5=1

# For stage2 target.
#pre_stage2_exec_SOURCES = asm.S bios.c boot.c builtins.c char_io.c \
#	cmdline.c common.c console.c disk_io.c fsys_ext2fs.c \
#	fsys_fat.c fsys_ffs.c fsys_iso9660.c fsys_jfs.c fsys_minix.c \
#	fsys_reiserfs.c fsys_ufs2.c fsys_vstafs.c fsys_xfs.c gunzip.c \
#	hercules.c md5.c serial.c smp-imps.c sha256crypt.c sha512crypt.c \
#	stage2.c terminfo.c tparm.c graphics.c

#pre_stage2_exec_CFLAGS = $(STAGE2_COMPILE) $(FSYS_CFLAGS)
#pre_stage2_exec_CCASFLAGS = $(STAGE2_COMPILE) $(FSYS_CFLAGS)
#pre_stage2_exec_LDFLAGS = $(PRE_STAGE2_LINK)
#pre_stage2_exec_LDADD = /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/sysroots/clanton/usr/lib/i586-poky-linux-uclibc/4.7.2/libgcc.a $(am__append_1)
#BUILT_SOURCES = stage2_size.h
##BUILT_SOURCES = stage2_size.h diskless_size.h
#CLEANFILES = $(pkgdata_DATA) $(noinst_DATA) $(BUILT_SOURCES)
#start_exec_SOURCES = start.S
#start_exec_CCASFLAGS = $(STAGE2_COMPILE)
#start_exec_LDFLAGS = $(START_LINK)
#start_exec_LDADD = /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/sysroots/clanton/usr/lib/i586-poky-linux-uclibc/4.7.2/libgcc.a
#start_eltorito_exec_SOURCES = start_eltorito.S
#start_eltorito_exec_CCASFLAGS = $(STAGE2_COMPILE)
#start_eltorito_exec_LDFLAGS = $(START_ELTORITO_LINK)
#start_eltorito_exec_LDADD = /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/sysroots/clanton/usr/lib/i586-poky-linux-uclibc/4.7.2/libgcc.a

# For e2fs_stage1_5 target.
#e2fs_stage1_5_exec_SOURCES = start.S asm.S common.c char_io.c disk_io.c \
#	stage1_5.c fsys_ext2fs.c bios.c

#e2fs_stage1_5_exec_CFLAGS = $(STAGE1_5_COMPILE) -DFSYS_EXT2FS=1 \
#	-DNO_BLOCK_FILES=1

#e2fs_stage1_5_exec_CCASFLAGS = $(STAGE1_5_COMPILE) -DFSYS_EXT2FS=1 \
#	-DNO_BLOCK_FILES=1

#e2fs_stage1_5_exec_LDFLAGS = $(STAGE1_5_LINK)
#e2fs_stage1_5_exec_LDADD = /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/sysroots/clanton/usr/lib/i586-poky-linux-uclibc/4.7.2/libgcc.a

# For fat_stage1_5 target.
#fat_stage1_5_exec_SOURCES = start.S asm.S common.c char_io.c disk_io.c \
#	stage1_5.c fsys_fat.c bios.c

#fat_stage1_5_exec_CFLAGS = $(STAGE1_5_COMPILE) -DFSYS_FAT=1 \
#	-DNO_BLOCK_FILES=1

#fat_stage1_5_exec_CCASFLAGS = $(STAGE1_5_COMPILE) -DFSYS_FAT=1 \
#	-DNO_BLOCK_FILES=1

#fat_stage1_5_exec_LDFLAGS = $(STAGE1_5_LINK)
#fat_stage1_5_exec_LDADD = /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/sysroots/clanton/usr/lib/i586-poky-linux-uclibc/4.7.2/libgcc.a

# For ffs_stage1_5 target.
#ffs_stage1_5_exec_SOURCES = start.S asm.S common.c char_io.c disk_io.c \
#	stage1_5.c fsys_ffs.c bios.c

#ffs_stage1_5_exec_CFLAGS = $(STAGE1_5_COMPILE) -DFSYS_FFS=1 \
#	-DNO_BLOCK_FILES=1

#ffs_stage1_5_exec_CCASFLAGS = $(STAGE1_5_COMPILE) -DFSYS_FFS=1 \
#	-DNO_BLOCK_FILES=1

#ffs_stage1_5_exec_LDFLAGS = $(STAGE1_5_LINK)
#ffs_stage1_5_exec_LDADD = /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/sysroots/clanton/usr/lib/i586-poky-linux-uclibc/4.7.2/libgcc.a

# For ufs2_stage1_5 target.
#ufs2_stage1_5_exec_SOURCES = start.S asm.S common.c char_io.c disk_io.c \
#	stage1_5.c fsys_ufs2.c bios.c

#ufs2_stage1_5_exec_CFLAGS = $(STAGE1_5_COMPILE) -DFSYS_UFS2=1 \
#	-DNO_BLOCK_FILES=1

#ufs2_stage1_5_exec_CCASFLAGS = $(STAGE1_5_COMPILE) -DFSYS_UFS2=1 \
#	-DNO_BLOCK_FILES=1

#ufs2_stage1_5_exec_LDFLAGS = $(STAGE1_5_LINK)
#ufs2_stage1_5_exec_LDADD = /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/sysroots/clanton/usr/lib/i586-poky-linux-uclibc/4.7.2/libgcc.a

# For minix_stage1_5 target.
#minix_stage1_5_exec_SOURCES = start.S asm.S common.c char_io.c disk_io.c \
#	stage1_5.c fsys_minix.c bios.c

#minix_stage1_5_exec_CFLAGS = $(STAGE1_5_COMPILE) -DFSYS_MINIX=1 \
#	-DNO_BLOCK_FILES=1

#minix_stage1_5_exec_CCASFLAGS = $(STAGE1_5_COMPILE) -DFSYS_MINIX=1 \
#	-DNO_BLOCK_FILES=1

#minix_stage1_5_exec_LDFLAGS = $(STAGE1_5_LINK)
#minix_stage1_5_exec_LDADD = /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/sysroots/clanton/usr/lib/i586-poky-linux-uclibc/4.7.2/libgcc.a

# For reiserfs_stage1_5 target.
#reiserfs_stage1_5_exec_SOURCES = start.S asm.S common.c char_io.c \
#	disk_io.c stage1_5.c fsys_reiserfs.c bios.c

#reiserfs_stage1_5_exec_CFLAGS = $(STAGE1_5_COMPILE) -DFSYS_REISERFS=1 \
#	-DNO_BLOCK_FILES=1

#reiserfs_stage1_5_exec_CCASFLAGS = $(STAGE1_5_COMPILE) -DFSYS_REISERFS=1 \
#	-DNO_BLOCK_FILES=1

#reiserfs_stage1_5_exec_LDFLAGS = $(STAGE1_5_LINK)
#reiserfs_stage1_5_exec_LDADD = /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/sysroots/clanton/usr/lib/i586-poky-linux-uclibc/4.7.2/libgcc.a

# For vstafs_stage1_5 target.
#vstafs_stage1_5_exec_SOURCES = start.S asm.S common.c char_io.c \
#	disk_io.c stage1_5.c fsys_vstafs.c bios.c

#vstafs_stage1_5_exec_CFLAGS = $(STAGE1_5_COMPILE) -DFSYS_VSTAFS=1 \
#	-DNO_BLOCK_FILES=1

#vstafs_stage1_5_exec_CCASFLAGS = $(STAGE1_5_COMPILE) -DFSYS_VSTAFS=1 \
#	-DNO_BLOCK_FILES=1

#vstafs_stage1_5_exec_LDFLAGS = $(STAGE1_5_LINK)
#vstafs_stage1_5_exec_LDADD = /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/sysroots/clanton/usr/lib/i586-poky-linux-uclibc/4.7.2/libgcc.a

# For jfs_stage1_5 target.
#jfs_stage1_5_exec_SOURCES = start.S asm.S common.c char_io.c \
#	disk_io.c stage1_5.c fsys_jfs.c bios.c

#jfs_stage1_5_exec_CFLAGS = $(STAGE1_5_COMPILE) -DFSYS_JFS=1 \
#	-DNO_BLOCK_FILES=1

#jfs_stage1_5_exec_CCASFLAGS = $(STAGE1_5_COMPILE) -DFSYS_JFS=1 \
#	-DNO_BLOCK_FILES=1

#jfs_stage1_5_exec_LDFLAGS = $(STAGE1_5_LINK)
#jfs_stage1_5_exec_LDADD = /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/sysroots/clanton/usr/lib/i586-poky-linux-uclibc/4.7.2/libgcc.a

# For xfs_stage1_5 target.
#xfs_stage1_5_exec_SOURCES = start.S asm.S common.c char_io.c \
#	disk_io.c stage1_5.c fsys_xfs.c bios.c

#xfs_stage1_5_exec_CFLAGS = $(STAGE1_5_COMPILE) -DFSYS_XFS=1 \
#	-DNO_BLOCK_FILES=1

#xfs_stage1_5_exec_CCASFLAGS = $(STAGE1_5_COMPILE) -DFSYS_XFS=1 \
#	-DNO_BLOCK_FILES=1

#xfs_stage1_5_exec_LDFLAGS = $(STAGE1_5_LINK)
#xfs_stage1_5_exec_LDADD = /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/sysroots/clanton/usr/lib/i586-poky-linux-uclibc/4.7.2/libgcc.a

# For iso9660_stage1_5 target.
#iso9660_stage1_5_exec_SOURCES = start_eltorito.S asm.S common.c char_io.c \
#	disk_io.c stage1_5.c fsys_iso9660.c bios.c

#iso9660_stage1_5_exec_CFLAGS = $(STAGE1_5_COMPILE) -DFSYS_ISO9660=1 \
#	-DNO_BLOCK_FILES=1

#iso9660_stage1_5_exec_CCASFLAGS = $(STAGE1_5_COMPILE) -DFSYS_ISO9660=1 \
#	-DNO_BLOCK_FILES=1

#iso9660_stage1_5_exec_LDFLAGS = $(STAGE1_5_LINK)
#iso9660_stage1_5_exec_LDADD = /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/sysroots/clanton/usr/lib/i586-poky-linux-uclibc/4.7.2/libgcc.a

# For diskless target.
#diskless_exec_SOURCES = $(pre_stage2_exec_SOURCES)
#diskless_exec_CFLAGS = $(STAGE2_COMPILE) $(FSYS_CFLAGS) \
#	-DSUPPORT_DISKLESS=1

#diskless_exec_CCASFLAGS = $(STAGE2_COMPILE) $(FSYS_CFLAGS) \
#	-DSUPPORT_DISKLESS=1

#diskless_exec_LDFLAGS = $(PRE_STAGE2_LINK)
#diskless_exec_LDADD = ../netboot/libdrivers.a /home/architech/Desktop/install-test2/yocto/meta-clanton_v1.0.1/yocto_build/tmp/sysroots/clanton/usr/lib/i586-poky-linux-uclibc/4.7.2/libgcc.a

# For nbloader target.
#nbloader_exec_SOURCES = nbloader.S
#nbloader_exec_CCASFLAGS = $(STAGE2_COMPILE)
#nbloader_exec_LDFLAGS = $(NBLOADER_LINK)

# For pxeloader target.
#pxeloader_exec_SOURCES = pxeloader.S
#pxeloader_exec_CCASFLAGS = $(STAGE2_COMPILE)
#pxeloader_exec_LDFLAGS = $(PXELOADER_LINK)

# General rule for making a raw binary.
#SUFFIXES = .exec
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .exec .S .c .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign stage2/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign stage2/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libgrub.a: $(libgrub_a_OBJECTS) $(libgrub_a_DEPENDENCIES) $(EXTRA_libgrub_a_DEPENDENCIES) 
	-rm -f libgrub.a
	$(libgrub_a_AR) libgrub.a $(libgrub_a_OBJECTS) $(libgrub_a_LIBADD)
	$(RANLIB) libgrub.a
libstage2.a: $(libstage2_a_OBJECTS) $(libstage2_a_DEPENDENCIES) $(EXTRA_libstage2_a_DEPENDENCIES) 
	-rm -f libstage2.a
	$(libstage2_a_AR) libstage2.a $(libstage2_a_OBJECTS) $(libstage2_a_LIBADD)
	$(RANLIB) libstage2.a

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
diskless.exec$(EXEEXT): $(diskless_exec_OBJECTS) $(diskless_exec_DEPENDENCIES) $(EXTRA_diskless_exec_DEPENDENCIES) 
	@rm -f diskless.exec$(EXEEXT)
	$(diskless_exec_LINK) $(diskless_exec_OBJECTS) $(diskless_exec_LDADD) $(LIBS)
e2fs_stage1_5.exec$(EXEEXT): $(e2fs_stage1_5_exec_OBJECTS) $(e2fs_stage1_5_exec_DEPENDENCIES) $(EXTRA_e2fs_stage1_5_exec_DEPENDENCIES) 
	@rm -f e2fs_stage1_5.exec$(EXEEXT)
	$(e2fs_stage1_5_exec_LINK) $(e2fs_stage1_5_exec_OBJECTS) $(e2fs_stage1_5_exec_LDADD) $(LIBS)
fat_stage1_5.exec$(EXEEXT): $(fat_stage1_5_exec_OBJECTS) $(fat_stage1_5_exec_DEPENDENCIES) $(EXTRA_fat_stage1_5_exec_DEPENDENCIES) 
	@rm -f fat_stage1_5.exec$(EXEEXT)
	$(fat_stage1_5_exec_LINK) $(fat_stage1_5_exec_OBJECTS) $(fat_stage1_5_exec_LDADD) $(LIBS)
ffs_stage1_5.exec$(EXEEXT): $(ffs_stage1_5_exec_OBJECTS) $(ffs_stage1_5_exec_DEPENDENCIES) $(EXTRA_ffs_stage1_5_exec_DEPENDENCIES) 
	@rm -f ffs_stage1_5.exec$(EXEEXT)
	$(ffs_stage1_5_exec_LINK) $(ffs_stage1_5_exec_OBJECTS) $(ffs_stage1_5_exec_LDADD) $(LIBS)
iso9660_stage1_5.exec$(EXEEXT): $(iso9660_stage1_5_exec_OBJECTS) $(iso9660_stage1_5_exec_DEPENDENCIES) $(EXTRA_iso9660_stage1_5_exec_DEPENDENCIES) 
	@rm -f iso9660_stage1_5.exec$(EXEEXT)
	$(iso9660_stage1_5_exec_LINK) $(iso9660_stage1_5_exec_OBJECTS) $(iso9660_stage1_5_exec_LDADD) $(LIBS)
jfs_stage1_5.exec$(EXEEXT): $(jfs_stage1_5_exec_OBJECTS) $(jfs_stage1_5_exec_DEPENDENCIES) $(EXTRA_jfs_stage1_5_exec_DEPENDENCIES) 
	@rm -f jfs_stage1_5.exec$(EXEEXT)
	$(jfs_stage1_5_exec_LINK) $(jfs_stage1_5_exec_OBJECTS) $(jfs_stage1_5_exec_LDADD) $(LIBS)
minix_stage1_5.exec$(EXEEXT): $(minix_stage1_5_exec_OBJECTS) $(minix_stage1_5_exec_DEPENDENCIES) $(EXTRA_minix_stage1_5_exec_DEPENDENCIES) 
	@rm -f minix_stage1_5.exec$(EXEEXT)
	$(minix_stage1_5_exec_LINK) $(minix_stage1_5_exec_OBJECTS) $(minix_stage1_5_exec_LDADD) $(LIBS)
nbloader.exec$(EXEEXT): $(nbloader_exec_OBJECTS) $(nbloader_exec_DEPENDENCIES) $(EXTRA_nbloader_exec_DEPENDENCIES) 
	@rm -f nbloader.exec$(EXEEXT)
	$(nbloader_exec_LINK) $(nbloader_exec_OBJECTS) $(nbloader_exec_LDADD) $(LIBS)
pre_stage2.exec$(EXEEXT): $(pre_stage2_exec_OBJECTS) $(pre_stage2_exec_DEPENDENCIES) $(EXTRA_pre_stage2_exec_DEPENDENCIES) 
	@rm -f pre_stage2.exec$(EXEEXT)
	$(pre_stage2_exec_LINK) $(pre_stage2_exec_OBJECTS) $(pre_stage2_exec_LDADD) $(LIBS)
pxeloader.exec$(EXEEXT): $(pxeloader_exec_OBJECTS) $(pxeloader_exec_DEPENDENCIES) $(EXTRA_pxeloader_exec_DEPENDENCIES) 
	@rm -f pxeloader.exec$(EXEEXT)
	$(pxeloader_exec_LINK) $(pxeloader_exec_OBJECTS) $(pxeloader_exec_LDADD) $(LIBS)
reiserfs_stage1_5.exec$(EXEEXT): $(reiserfs_stage1_5_exec_OBJECTS) $(reiserfs_stage1_5_exec_DEPENDENCIES) $(EXTRA_reiserfs_stage1_5_exec_DEPENDENCIES) 
	@rm -f reiserfs_stage1_5.exec$(EXEEXT)
	$(reiserfs_stage1_5_exec_LINK) $(reiserfs_stage1_5_exec_OBJECTS) $(reiserfs_stage1_5_exec_LDADD) $(LIBS)
start.exec$(EXEEXT): $(start_exec_OBJECTS) $(start_exec_DEPENDENCIES) $(EXTRA_start_exec_DEPENDENCIES) 
	@rm -f start.exec$(EXEEXT)
	$(start_exec_LINK) $(start_exec_OBJECTS) $(start_exec_LDADD) $(LIBS)
start_eltorito.exec$(EXEEXT): $(start_eltorito_exec_OBJECTS) $(start_eltorito_exec_DEPENDENCIES) $(EXTRA_start_eltorito_exec_DEPENDENCIES) 
	@rm -f start_eltorito.exec$(EXEEXT)
	$(start_eltorito_exec_LINK) $(start_eltorito_exec_OBJECTS) $(start_eltorito_exec_LDADD) $(LIBS)
ufs2_stage1_5.exec$(EXEEXT): $(ufs2_stage1_5_exec_OBJECTS) $(ufs2_stage1_5_exec_DEPENDENCIES) $(EXTRA_ufs2_stage1_5_exec_DEPENDENCIES) 
	@rm -f ufs2_stage1_5.exec$(EXEEXT)
	$(ufs2_stage1_5_exec_LINK) $(ufs2_stage1_5_exec_OBJECTS) $(ufs2_stage1_5_exec_LDADD) $(LIBS)
vstafs_stage1_5.exec$(EXEEXT): $(vstafs_stage1_5_exec_OBJECTS) $(vstafs_stage1_5_exec_DEPENDENCIES) $(EXTRA_vstafs_stage1_5_exec_DEPENDENCIES) 
	@rm -f vstafs_stage1_5.exec$(EXEEXT)
	$(vstafs_stage1_5_exec_LINK) $(vstafs_stage1_5_exec_OBJECTS) $(vstafs_stage1_5_exec_LDADD) $(LIBS)
xfs_stage1_5.exec$(EXEEXT): $(xfs_stage1_5_exec_OBJECTS) $(xfs_stage1_5_exec_DEPENDENCIES) $(EXTRA_xfs_stage1_5_exec_DEPENDENCIES) 
	@rm -f xfs_stage1_5.exec$(EXEEXT)
	$(xfs_stage1_5_exec_LINK) $(xfs_stage1_5_exec_OBJECTS) $(xfs_stage1_5_exec_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

#include ./$(DEPDIR)/diskless_exec-asm.Po
#include ./$(DEPDIR)/diskless_exec-bios.Po
#include ./$(DEPDIR)/diskless_exec-boot.Po
#include ./$(DEPDIR)/diskless_exec-builtins.Po
#include ./$(DEPDIR)/diskless_exec-char_io.Po
#include ./$(DEPDIR)/diskless_exec-cmdline.Po
#include ./$(DEPDIR)/diskless_exec-common.Po
#include ./$(DEPDIR)/diskless_exec-console.Po
#include ./$(DEPDIR)/diskless_exec-disk_io.Po
#include ./$(DEPDIR)/diskless_exec-fsys_ext2fs.Po
#include ./$(DEPDIR)/diskless_exec-fsys_fat.Po
#include ./$(DEPDIR)/diskless_exec-fsys_ffs.Po
#include ./$(DEPDIR)/diskless_exec-fsys_iso9660.Po
#include ./$(DEPDIR)/diskless_exec-fsys_jfs.Po
#include ./$(DEPDIR)/diskless_exec-fsys_minix.Po
#include ./$(DEPDIR)/diskless_exec-fsys_reiserfs.Po
#include ./$(DEPDIR)/diskless_exec-fsys_ufs2.Po
#include ./$(DEPDIR)/diskless_exec-fsys_vstafs.Po
#include ./$(DEPDIR)/diskless_exec-fsys_xfs.Po
#include ./$(DEPDIR)/diskless_exec-graphics.Po
#include ./$(DEPDIR)/diskless_exec-gunzip.Po
#include ./$(DEPDIR)/diskless_exec-hercules.Po
#include ./$(DEPDIR)/diskless_exec-md5.Po
#include ./$(DEPDIR)/diskless_exec-serial.Po
#include ./$(DEPDIR)/diskless_exec-sha256crypt.Po
#include ./$(DEPDIR)/diskless_exec-sha512crypt.Po
#include ./$(DEPDIR)/diskless_exec-smp-imps.Po
#include ./$(DEPDIR)/diskless_exec-stage2.Po
#include ./$(DEPDIR)/diskless_exec-terminfo.Po
#include ./$(DEPDIR)/diskless_exec-tparm.Po
#include ./$(DEPDIR)/e2fs_stage1_5_exec-asm.Po
#include ./$(DEPDIR)/e2fs_stage1_5_exec-bios.Po
#include ./$(DEPDIR)/e2fs_stage1_5_exec-char_io.Po
#include ./$(DEPDIR)/e2fs_stage1_5_exec-common.Po
#include ./$(DEPDIR)/e2fs_stage1_5_exec-disk_io.Po
#include ./$(DEPDIR)/e2fs_stage1_5_exec-fsys_ext2fs.Po
#include ./$(DEPDIR)/e2fs_stage1_5_exec-stage1_5.Po
#include ./$(DEPDIR)/e2fs_stage1_5_exec-start.Po
#include ./$(DEPDIR)/fat_stage1_5_exec-asm.Po
#include ./$(DEPDIR)/fat_stage1_5_exec-bios.Po
#include ./$(DEPDIR)/fat_stage1_5_exec-char_io.Po
#include ./$(DEPDIR)/fat_stage1_5_exec-common.Po
#include ./$(DEPDIR)/fat_stage1_5_exec-disk_io.Po
#include ./$(DEPDIR)/fat_stage1_5_exec-fsys_fat.Po
#include ./$(DEPDIR)/fat_stage1_5_exec-stage1_5.Po
#include ./$(DEPDIR)/fat_stage1_5_exec-start.Po
#include ./$(DEPDIR)/ffs_stage1_5_exec-asm.Po
#include ./$(DEPDIR)/ffs_stage1_5_exec-bios.Po
#include ./$(DEPDIR)/ffs_stage1_5_exec-char_io.Po
#include ./$(DEPDIR)/ffs_stage1_5_exec-common.Po
#include ./$(DEPDIR)/ffs_stage1_5_exec-disk_io.Po
#include ./$(DEPDIR)/ffs_stage1_5_exec-fsys_ffs.Po
#include ./$(DEPDIR)/ffs_stage1_5_exec-stage1_5.Po
#include ./$(DEPDIR)/ffs_stage1_5_exec-start.Po
#include ./$(DEPDIR)/iso9660_stage1_5_exec-asm.Po
#include ./$(DEPDIR)/iso9660_stage1_5_exec-bios.Po
#include ./$(DEPDIR)/iso9660_stage1_5_exec-char_io.Po
#include ./$(DEPDIR)/iso9660_stage1_5_exec-common.Po
#include ./$(DEPDIR)/iso9660_stage1_5_exec-disk_io.Po
#include ./$(DEPDIR)/iso9660_stage1_5_exec-fsys_iso9660.Po
#include ./$(DEPDIR)/iso9660_stage1_5_exec-stage1_5.Po
#include ./$(DEPDIR)/iso9660_stage1_5_exec-start_eltorito.Po
#include ./$(DEPDIR)/jfs_stage1_5_exec-asm.Po
#include ./$(DEPDIR)/jfs_stage1_5_exec-bios.Po
#include ./$(DEPDIR)/jfs_stage1_5_exec-char_io.Po
#include ./$(DEPDIR)/jfs_stage1_5_exec-common.Po
#include ./$(DEPDIR)/jfs_stage1_5_exec-disk_io.Po
#include ./$(DEPDIR)/jfs_stage1_5_exec-fsys_jfs.Po
#include ./$(DEPDIR)/jfs_stage1_5_exec-stage1_5.Po
#include ./$(DEPDIR)/jfs_stage1_5_exec-start.Po
#include ./$(DEPDIR)/libgrub_a-boot.Po
#include ./$(DEPDIR)/libgrub_a-builtins.Po
#include ./$(DEPDIR)/libgrub_a-char_io.Po
#include ./$(DEPDIR)/libgrub_a-cmdline.Po
#include ./$(DEPDIR)/libgrub_a-common.Po
#include ./$(DEPDIR)/libgrub_a-disk_io.Po
#include ./$(DEPDIR)/libgrub_a-efistubs.Po
#include ./$(DEPDIR)/libgrub_a-fsys_ext2fs.Po
#include ./$(DEPDIR)/libgrub_a-fsys_fat.Po
#include ./$(DEPDIR)/libgrub_a-fsys_ffs.Po
#include ./$(DEPDIR)/libgrub_a-fsys_iso9660.Po
#include ./$(DEPDIR)/libgrub_a-fsys_jfs.Po
#include ./$(DEPDIR)/libgrub_a-fsys_minix.Po
#include ./$(DEPDIR)/libgrub_a-fsys_reiserfs.Po
#include ./$(DEPDIR)/libgrub_a-fsys_ufs2.Po
#include ./$(DEPDIR)/libgrub_a-fsys_vstafs.Po
#include ./$(DEPDIR)/libgrub_a-fsys_xfs.Po
#include ./$(DEPDIR)/libgrub_a-graphics.Po
#include ./$(DEPDIR)/libgrub_a-gunzip.Po
#include ./$(DEPDIR)/libgrub_a-md5.Po
#include ./$(DEPDIR)/libgrub_a-serial.Po
#include ./$(DEPDIR)/libgrub_a-sha256crypt.Po
#include ./$(DEPDIR)/libgrub_a-sha512crypt.Po
#include ./$(DEPDIR)/libgrub_a-stage2.Po
#include ./$(DEPDIR)/libgrub_a-terminfo.Po
#include ./$(DEPDIR)/libgrub_a-tparm.Po
#include ./$(DEPDIR)/libstage2_a-boot.Po
#include ./$(DEPDIR)/libstage2_a-builtins.Po
#include ./$(DEPDIR)/libstage2_a-char_io.Po
#include ./$(DEPDIR)/libstage2_a-cmdline.Po
#include ./$(DEPDIR)/libstage2_a-common.Po
#include ./$(DEPDIR)/libstage2_a-disk_io.Po
#include ./$(DEPDIR)/libstage2_a-efistubs.Po
#include ./$(DEPDIR)/libstage2_a-fsys_ext2fs.Po
#include ./$(DEPDIR)/libstage2_a-fsys_fat.Po
#include ./$(DEPDIR)/libstage2_a-fsys_ffs.Po
#include ./$(DEPDIR)/libstage2_a-fsys_iso9660.Po
#include ./$(DEPDIR)/libstage2_a-fsys_jfs.Po
#include ./$(DEPDIR)/libstage2_a-fsys_minix.Po
#include ./$(DEPDIR)/libstage2_a-fsys_reiserfs.Po
#include ./$(DEPDIR)/libstage2_a-fsys_ufs2.Po
#include ./$(DEPDIR)/libstage2_a-fsys_vstafs.Po
#include ./$(DEPDIR)/libstage2_a-fsys_xfs.Po
#include ./$(DEPDIR)/libstage2_a-gunzip.Po
#include ./$(DEPDIR)/libstage2_a-md5.Po
#include ./$(DEPDIR)/libstage2_a-serial.Po
#include ./$(DEPDIR)/libstage2_a-sha256crypt.Po
#include ./$(DEPDIR)/libstage2_a-sha512crypt.Po
#include ./$(DEPDIR)/libstage2_a-stage2.Po
#include ./$(DEPDIR)/libstage2_a-terminfo.Po
#include ./$(DEPDIR)/libstage2_a-tparm.Po
#include ./$(DEPDIR)/minix_stage1_5_exec-asm.Po
#include ./$(DEPDIR)/minix_stage1_5_exec-bios.Po
#include ./$(DEPDIR)/minix_stage1_5_exec-char_io.Po
#include ./$(DEPDIR)/minix_stage1_5_exec-common.Po
#include ./$(DEPDIR)/minix_stage1_5_exec-disk_io.Po
#include ./$(DEPDIR)/minix_stage1_5_exec-fsys_minix.Po
#include ./$(DEPDIR)/minix_stage1_5_exec-stage1_5.Po
#include ./$(DEPDIR)/minix_stage1_5_exec-start.Po
#include ./$(DEPDIR)/nbloader_exec-nbloader.Po
#include ./$(DEPDIR)/pre_stage2_exec-asm.Po
#include ./$(DEPDIR)/pre_stage2_exec-bios.Po
#include ./$(DEPDIR)/pre_stage2_exec-boot.Po
#include ./$(DEPDIR)/pre_stage2_exec-builtins.Po
#include ./$(DEPDIR)/pre_stage2_exec-char_io.Po
#include ./$(DEPDIR)/pre_stage2_exec-cmdline.Po
#include ./$(DEPDIR)/pre_stage2_exec-common.Po
#include ./$(DEPDIR)/pre_stage2_exec-console.Po
#include ./$(DEPDIR)/pre_stage2_exec-disk_io.Po
#include ./$(DEPDIR)/pre_stage2_exec-fsys_ext2fs.Po
#include ./$(DEPDIR)/pre_stage2_exec-fsys_fat.Po
#include ./$(DEPDIR)/pre_stage2_exec-fsys_ffs.Po
#include ./$(DEPDIR)/pre_stage2_exec-fsys_iso9660.Po
#include ./$(DEPDIR)/pre_stage2_exec-fsys_jfs.Po
#include ./$(DEPDIR)/pre_stage2_exec-fsys_minix.Po
#include ./$(DEPDIR)/pre_stage2_exec-fsys_reiserfs.Po
#include ./$(DEPDIR)/pre_stage2_exec-fsys_ufs2.Po
#include ./$(DEPDIR)/pre_stage2_exec-fsys_vstafs.Po
#include ./$(DEPDIR)/pre_stage2_exec-fsys_xfs.Po
#include ./$(DEPDIR)/pre_stage2_exec-graphics.Po
#include ./$(DEPDIR)/pre_stage2_exec-gunzip.Po
#include ./$(DEPDIR)/pre_stage2_exec-hercules.Po
#include ./$(DEPDIR)/pre_stage2_exec-md5.Po
#include ./$(DEPDIR)/pre_stage2_exec-serial.Po
#include ./$(DEPDIR)/pre_stage2_exec-sha256crypt.Po
#include ./$(DEPDIR)/pre_stage2_exec-sha512crypt.Po
#include ./$(DEPDIR)/pre_stage2_exec-smp-imps.Po
#include ./$(DEPDIR)/pre_stage2_exec-stage2.Po
#include ./$(DEPDIR)/pre_stage2_exec-terminfo.Po
#include ./$(DEPDIR)/pre_stage2_exec-tparm.Po
#include ./$(DEPDIR)/pxeloader_exec-pxeloader.Po
#include ./$(DEPDIR)/reiserfs_stage1_5_exec-asm.Po
#include ./$(DEPDIR)/reiserfs_stage1_5_exec-bios.Po
#include ./$(DEPDIR)/reiserfs_stage1_5_exec-char_io.Po
#include ./$(DEPDIR)/reiserfs_stage1_5_exec-common.Po
#include ./$(DEPDIR)/reiserfs_stage1_5_exec-disk_io.Po
#include ./$(DEPDIR)/reiserfs_stage1_5_exec-fsys_reiserfs.Po
#include ./$(DEPDIR)/reiserfs_stage1_5_exec-stage1_5.Po
#include ./$(DEPDIR)/reiserfs_stage1_5_exec-start.Po
#include ./$(DEPDIR)/start_eltorito_exec-start_eltorito.Po
#include ./$(DEPDIR)/start_exec-start.Po
#include ./$(DEPDIR)/ufs2_stage1_5_exec-asm.Po
#include ./$(DEPDIR)/ufs2_stage1_5_exec-bios.Po
#include ./$(DEPDIR)/ufs2_stage1_5_exec-char_io.Po
#include ./$(DEPDIR)/ufs2_stage1_5_exec-common.Po
#include ./$(DEPDIR)/ufs2_stage1_5_exec-disk_io.Po
#include ./$(DEPDIR)/ufs2_stage1_5_exec-fsys_ufs2.Po
#include ./$(DEPDIR)/ufs2_stage1_5_exec-stage1_5.Po
#include ./$(DEPDIR)/ufs2_stage1_5_exec-start.Po
#include ./$(DEPDIR)/vstafs_stage1_5_exec-asm.Po
#include ./$(DEPDIR)/vstafs_stage1_5_exec-bios.Po
#include ./$(DEPDIR)/vstafs_stage1_5_exec-char_io.Po
#include ./$(DEPDIR)/vstafs_stage1_5_exec-common.Po
#include ./$(DEPDIR)/vstafs_stage1_5_exec-disk_io.Po
#include ./$(DEPDIR)/vstafs_stage1_5_exec-fsys_vstafs.Po
#include ./$(DEPDIR)/vstafs_stage1_5_exec-stage1_5.Po
#include ./$(DEPDIR)/vstafs_stage1_5_exec-start.Po
#include ./$(DEPDIR)/xfs_stage1_5_exec-asm.Po
#include ./$(DEPDIR)/xfs_stage1_5_exec-bios.Po
#include ./$(DEPDIR)/xfs_stage1_5_exec-char_io.Po
#include ./$(DEPDIR)/xfs_stage1_5_exec-common.Po
#include ./$(DEPDIR)/xfs_stage1_5_exec-disk_io.Po
#include ./$(DEPDIR)/xfs_stage1_5_exec-fsys_xfs.Po
#include ./$(DEPDIR)/xfs_stage1_5_exec-stage1_5.Po
#include ./$(DEPDIR)/xfs_stage1_5_exec-start.Po

.S.o:
#	$(CPPASCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CPPASCOMPILE) -c -o $@ $<

.S.obj:
#	$(CPPASCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
#	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CPPASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

diskless_exec-asm.o: asm.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CCASFLAGS) $(CCASFLAGS) -MT diskless_exec-asm.o -MD -MP -MF $(DEPDIR)/diskless_exec-asm.Tpo -c -o diskless_exec-asm.o `test -f 'asm.S' || echo '$(srcdir)/'`asm.S
#	$(am__mv) $(DEPDIR)/diskless_exec-asm.Tpo $(DEPDIR)/diskless_exec-asm.Po
#	source='asm.S' object='diskless_exec-asm.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CCASFLAGS) $(CCASFLAGS) -c -o diskless_exec-asm.o `test -f 'asm.S' || echo '$(srcdir)/'`asm.S

diskless_exec-asm.obj: asm.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CCASFLAGS) $(CCASFLAGS) -MT diskless_exec-asm.obj -MD -MP -MF $(DEPDIR)/diskless_exec-asm.Tpo -c -o diskless_exec-asm.obj `if test -f 'asm.S'; then $(CYGPATH_W) 'asm.S'; else $(CYGPATH_W) '$(srcdir)/asm.S'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-asm.Tpo $(DEPDIR)/diskless_exec-asm.Po
#	source='asm.S' object='diskless_exec-asm.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CCASFLAGS) $(CCASFLAGS) -c -o diskless_exec-asm.obj `if test -f 'asm.S'; then $(CYGPATH_W) 'asm.S'; else $(CYGPATH_W) '$(srcdir)/asm.S'; fi`

e2fs_stage1_5_exec-start.o: start.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT e2fs_stage1_5_exec-start.o -MD -MP -MF $(DEPDIR)/e2fs_stage1_5_exec-start.Tpo -c -o e2fs_stage1_5_exec-start.o `test -f 'start.S' || echo '$(srcdir)/'`start.S
#	$(am__mv) $(DEPDIR)/e2fs_stage1_5_exec-start.Tpo $(DEPDIR)/e2fs_stage1_5_exec-start.Po
#	source='start.S' object='e2fs_stage1_5_exec-start.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o e2fs_stage1_5_exec-start.o `test -f 'start.S' || echo '$(srcdir)/'`start.S

e2fs_stage1_5_exec-start.obj: start.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT e2fs_stage1_5_exec-start.obj -MD -MP -MF $(DEPDIR)/e2fs_stage1_5_exec-start.Tpo -c -o e2fs_stage1_5_exec-start.obj `if test -f 'start.S'; then $(CYGPATH_W) 'start.S'; else $(CYGPATH_W) '$(srcdir)/start.S'; fi`
#	$(am__mv) $(DEPDIR)/e2fs_stage1_5_exec-start.Tpo $(DEPDIR)/e2fs_stage1_5_exec-start.Po
#	source='start.S' object='e2fs_stage1_5_exec-start.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o e2fs_stage1_5_exec-start.obj `if test -f 'start.S'; then $(CYGPATH_W) 'start.S'; else $(CYGPATH_W) '$(srcdir)/start.S'; fi`

e2fs_stage1_5_exec-asm.o: asm.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT e2fs_stage1_5_exec-asm.o -MD -MP -MF $(DEPDIR)/e2fs_stage1_5_exec-asm.Tpo -c -o e2fs_stage1_5_exec-asm.o `test -f 'asm.S' || echo '$(srcdir)/'`asm.S
#	$(am__mv) $(DEPDIR)/e2fs_stage1_5_exec-asm.Tpo $(DEPDIR)/e2fs_stage1_5_exec-asm.Po
#	source='asm.S' object='e2fs_stage1_5_exec-asm.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o e2fs_stage1_5_exec-asm.o `test -f 'asm.S' || echo '$(srcdir)/'`asm.S

e2fs_stage1_5_exec-asm.obj: asm.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT e2fs_stage1_5_exec-asm.obj -MD -MP -MF $(DEPDIR)/e2fs_stage1_5_exec-asm.Tpo -c -o e2fs_stage1_5_exec-asm.obj `if test -f 'asm.S'; then $(CYGPATH_W) 'asm.S'; else $(CYGPATH_W) '$(srcdir)/asm.S'; fi`
#	$(am__mv) $(DEPDIR)/e2fs_stage1_5_exec-asm.Tpo $(DEPDIR)/e2fs_stage1_5_exec-asm.Po
#	source='asm.S' object='e2fs_stage1_5_exec-asm.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o e2fs_stage1_5_exec-asm.obj `if test -f 'asm.S'; then $(CYGPATH_W) 'asm.S'; else $(CYGPATH_W) '$(srcdir)/asm.S'; fi`

fat_stage1_5_exec-start.o: start.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT fat_stage1_5_exec-start.o -MD -MP -MF $(DEPDIR)/fat_stage1_5_exec-start.Tpo -c -o fat_stage1_5_exec-start.o `test -f 'start.S' || echo '$(srcdir)/'`start.S
#	$(am__mv) $(DEPDIR)/fat_stage1_5_exec-start.Tpo $(DEPDIR)/fat_stage1_5_exec-start.Po
#	source='start.S' object='fat_stage1_5_exec-start.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o fat_stage1_5_exec-start.o `test -f 'start.S' || echo '$(srcdir)/'`start.S

fat_stage1_5_exec-start.obj: start.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT fat_stage1_5_exec-start.obj -MD -MP -MF $(DEPDIR)/fat_stage1_5_exec-start.Tpo -c -o fat_stage1_5_exec-start.obj `if test -f 'start.S'; then $(CYGPATH_W) 'start.S'; else $(CYGPATH_W) '$(srcdir)/start.S'; fi`
#	$(am__mv) $(DEPDIR)/fat_stage1_5_exec-start.Tpo $(DEPDIR)/fat_stage1_5_exec-start.Po
#	source='start.S' object='fat_stage1_5_exec-start.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o fat_stage1_5_exec-start.obj `if test -f 'start.S'; then $(CYGPATH_W) 'start.S'; else $(CYGPATH_W) '$(srcdir)/start.S'; fi`

fat_stage1_5_exec-asm.o: asm.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT fat_stage1_5_exec-asm.o -MD -MP -MF $(DEPDIR)/fat_stage1_5_exec-asm.Tpo -c -o fat_stage1_5_exec-asm.o `test -f 'asm.S' || echo '$(srcdir)/'`asm.S
#	$(am__mv) $(DEPDIR)/fat_stage1_5_exec-asm.Tpo $(DEPDIR)/fat_stage1_5_exec-asm.Po
#	source='asm.S' object='fat_stage1_5_exec-asm.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o fat_stage1_5_exec-asm.o `test -f 'asm.S' || echo '$(srcdir)/'`asm.S

fat_stage1_5_exec-asm.obj: asm.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT fat_stage1_5_exec-asm.obj -MD -MP -MF $(DEPDIR)/fat_stage1_5_exec-asm.Tpo -c -o fat_stage1_5_exec-asm.obj `if test -f 'asm.S'; then $(CYGPATH_W) 'asm.S'; else $(CYGPATH_W) '$(srcdir)/asm.S'; fi`
#	$(am__mv) $(DEPDIR)/fat_stage1_5_exec-asm.Tpo $(DEPDIR)/fat_stage1_5_exec-asm.Po
#	source='asm.S' object='fat_stage1_5_exec-asm.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o fat_stage1_5_exec-asm.obj `if test -f 'asm.S'; then $(CYGPATH_W) 'asm.S'; else $(CYGPATH_W) '$(srcdir)/asm.S'; fi`

ffs_stage1_5_exec-start.o: start.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT ffs_stage1_5_exec-start.o -MD -MP -MF $(DEPDIR)/ffs_stage1_5_exec-start.Tpo -c -o ffs_stage1_5_exec-start.o `test -f 'start.S' || echo '$(srcdir)/'`start.S
#	$(am__mv) $(DEPDIR)/ffs_stage1_5_exec-start.Tpo $(DEPDIR)/ffs_stage1_5_exec-start.Po
#	source='start.S' object='ffs_stage1_5_exec-start.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o ffs_stage1_5_exec-start.o `test -f 'start.S' || echo '$(srcdir)/'`start.S

ffs_stage1_5_exec-start.obj: start.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT ffs_stage1_5_exec-start.obj -MD -MP -MF $(DEPDIR)/ffs_stage1_5_exec-start.Tpo -c -o ffs_stage1_5_exec-start.obj `if test -f 'start.S'; then $(CYGPATH_W) 'start.S'; else $(CYGPATH_W) '$(srcdir)/start.S'; fi`
#	$(am__mv) $(DEPDIR)/ffs_stage1_5_exec-start.Tpo $(DEPDIR)/ffs_stage1_5_exec-start.Po
#	source='start.S' object='ffs_stage1_5_exec-start.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o ffs_stage1_5_exec-start.obj `if test -f 'start.S'; then $(CYGPATH_W) 'start.S'; else $(CYGPATH_W) '$(srcdir)/start.S'; fi`

ffs_stage1_5_exec-asm.o: asm.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT ffs_stage1_5_exec-asm.o -MD -MP -MF $(DEPDIR)/ffs_stage1_5_exec-asm.Tpo -c -o ffs_stage1_5_exec-asm.o `test -f 'asm.S' || echo '$(srcdir)/'`asm.S
#	$(am__mv) $(DEPDIR)/ffs_stage1_5_exec-asm.Tpo $(DEPDIR)/ffs_stage1_5_exec-asm.Po
#	source='asm.S' object='ffs_stage1_5_exec-asm.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o ffs_stage1_5_exec-asm.o `test -f 'asm.S' || echo '$(srcdir)/'`asm.S

ffs_stage1_5_exec-asm.obj: asm.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT ffs_stage1_5_exec-asm.obj -MD -MP -MF $(DEPDIR)/ffs_stage1_5_exec-asm.Tpo -c -o ffs_stage1_5_exec-asm.obj `if test -f 'asm.S'; then $(CYGPATH_W) 'asm.S'; else $(CYGPATH_W) '$(srcdir)/asm.S'; fi`
#	$(am__mv) $(DEPDIR)/ffs_stage1_5_exec-asm.Tpo $(DEPDIR)/ffs_stage1_5_exec-asm.Po
#	source='asm.S' object='ffs_stage1_5_exec-asm.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o ffs_stage1_5_exec-asm.obj `if test -f 'asm.S'; then $(CYGPATH_W) 'asm.S'; else $(CYGPATH_W) '$(srcdir)/asm.S'; fi`

iso9660_stage1_5_exec-start_eltorito.o: start_eltorito.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT iso9660_stage1_5_exec-start_eltorito.o -MD -MP -MF $(DEPDIR)/iso9660_stage1_5_exec-start_eltorito.Tpo -c -o iso9660_stage1_5_exec-start_eltorito.o `test -f 'start_eltorito.S' || echo '$(srcdir)/'`start_eltorito.S
#	$(am__mv) $(DEPDIR)/iso9660_stage1_5_exec-start_eltorito.Tpo $(DEPDIR)/iso9660_stage1_5_exec-start_eltorito.Po
#	source='start_eltorito.S' object='iso9660_stage1_5_exec-start_eltorito.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o iso9660_stage1_5_exec-start_eltorito.o `test -f 'start_eltorito.S' || echo '$(srcdir)/'`start_eltorito.S

iso9660_stage1_5_exec-start_eltorito.obj: start_eltorito.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT iso9660_stage1_5_exec-start_eltorito.obj -MD -MP -MF $(DEPDIR)/iso9660_stage1_5_exec-start_eltorito.Tpo -c -o iso9660_stage1_5_exec-start_eltorito.obj `if test -f 'start_eltorito.S'; then $(CYGPATH_W) 'start_eltorito.S'; else $(CYGPATH_W) '$(srcdir)/start_eltorito.S'; fi`
#	$(am__mv) $(DEPDIR)/iso9660_stage1_5_exec-start_eltorito.Tpo $(DEPDIR)/iso9660_stage1_5_exec-start_eltorito.Po
#	source='start_eltorito.S' object='iso9660_stage1_5_exec-start_eltorito.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o iso9660_stage1_5_exec-start_eltorito.obj `if test -f 'start_eltorito.S'; then $(CYGPATH_W) 'start_eltorito.S'; else $(CYGPATH_W) '$(srcdir)/start_eltorito.S'; fi`

iso9660_stage1_5_exec-asm.o: asm.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT iso9660_stage1_5_exec-asm.o -MD -MP -MF $(DEPDIR)/iso9660_stage1_5_exec-asm.Tpo -c -o iso9660_stage1_5_exec-asm.o `test -f 'asm.S' || echo '$(srcdir)/'`asm.S
#	$(am__mv) $(DEPDIR)/iso9660_stage1_5_exec-asm.Tpo $(DEPDIR)/iso9660_stage1_5_exec-asm.Po
#	source='asm.S' object='iso9660_stage1_5_exec-asm.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o iso9660_stage1_5_exec-asm.o `test -f 'asm.S' || echo '$(srcdir)/'`asm.S

iso9660_stage1_5_exec-asm.obj: asm.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT iso9660_stage1_5_exec-asm.obj -MD -MP -MF $(DEPDIR)/iso9660_stage1_5_exec-asm.Tpo -c -o iso9660_stage1_5_exec-asm.obj `if test -f 'asm.S'; then $(CYGPATH_W) 'asm.S'; else $(CYGPATH_W) '$(srcdir)/asm.S'; fi`
#	$(am__mv) $(DEPDIR)/iso9660_stage1_5_exec-asm.Tpo $(DEPDIR)/iso9660_stage1_5_exec-asm.Po
#	source='asm.S' object='iso9660_stage1_5_exec-asm.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o iso9660_stage1_5_exec-asm.obj `if test -f 'asm.S'; then $(CYGPATH_W) 'asm.S'; else $(CYGPATH_W) '$(srcdir)/asm.S'; fi`

jfs_stage1_5_exec-start.o: start.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT jfs_stage1_5_exec-start.o -MD -MP -MF $(DEPDIR)/jfs_stage1_5_exec-start.Tpo -c -o jfs_stage1_5_exec-start.o `test -f 'start.S' || echo '$(srcdir)/'`start.S
#	$(am__mv) $(DEPDIR)/jfs_stage1_5_exec-start.Tpo $(DEPDIR)/jfs_stage1_5_exec-start.Po
#	source='start.S' object='jfs_stage1_5_exec-start.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o jfs_stage1_5_exec-start.o `test -f 'start.S' || echo '$(srcdir)/'`start.S

jfs_stage1_5_exec-start.obj: start.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT jfs_stage1_5_exec-start.obj -MD -MP -MF $(DEPDIR)/jfs_stage1_5_exec-start.Tpo -c -o jfs_stage1_5_exec-start.obj `if test -f 'start.S'; then $(CYGPATH_W) 'start.S'; else $(CYGPATH_W) '$(srcdir)/start.S'; fi`
#	$(am__mv) $(DEPDIR)/jfs_stage1_5_exec-start.Tpo $(DEPDIR)/jfs_stage1_5_exec-start.Po
#	source='start.S' object='jfs_stage1_5_exec-start.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o jfs_stage1_5_exec-start.obj `if test -f 'start.S'; then $(CYGPATH_W) 'start.S'; else $(CYGPATH_W) '$(srcdir)/start.S'; fi`

jfs_stage1_5_exec-asm.o: asm.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT jfs_stage1_5_exec-asm.o -MD -MP -MF $(DEPDIR)/jfs_stage1_5_exec-asm.Tpo -c -o jfs_stage1_5_exec-asm.o `test -f 'asm.S' || echo '$(srcdir)/'`asm.S
#	$(am__mv) $(DEPDIR)/jfs_stage1_5_exec-asm.Tpo $(DEPDIR)/jfs_stage1_5_exec-asm.Po
#	source='asm.S' object='jfs_stage1_5_exec-asm.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o jfs_stage1_5_exec-asm.o `test -f 'asm.S' || echo '$(srcdir)/'`asm.S

jfs_stage1_5_exec-asm.obj: asm.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT jfs_stage1_5_exec-asm.obj -MD -MP -MF $(DEPDIR)/jfs_stage1_5_exec-asm.Tpo -c -o jfs_stage1_5_exec-asm.obj `if test -f 'asm.S'; then $(CYGPATH_W) 'asm.S'; else $(CYGPATH_W) '$(srcdir)/asm.S'; fi`
#	$(am__mv) $(DEPDIR)/jfs_stage1_5_exec-asm.Tpo $(DEPDIR)/jfs_stage1_5_exec-asm.Po
#	source='asm.S' object='jfs_stage1_5_exec-asm.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o jfs_stage1_5_exec-asm.obj `if test -f 'asm.S'; then $(CYGPATH_W) 'asm.S'; else $(CYGPATH_W) '$(srcdir)/asm.S'; fi`

minix_stage1_5_exec-start.o: start.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT minix_stage1_5_exec-start.o -MD -MP -MF $(DEPDIR)/minix_stage1_5_exec-start.Tpo -c -o minix_stage1_5_exec-start.o `test -f 'start.S' || echo '$(srcdir)/'`start.S
#	$(am__mv) $(DEPDIR)/minix_stage1_5_exec-start.Tpo $(DEPDIR)/minix_stage1_5_exec-start.Po
#	source='start.S' object='minix_stage1_5_exec-start.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o minix_stage1_5_exec-start.o `test -f 'start.S' || echo '$(srcdir)/'`start.S

minix_stage1_5_exec-start.obj: start.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT minix_stage1_5_exec-start.obj -MD -MP -MF $(DEPDIR)/minix_stage1_5_exec-start.Tpo -c -o minix_stage1_5_exec-start.obj `if test -f 'start.S'; then $(CYGPATH_W) 'start.S'; else $(CYGPATH_W) '$(srcdir)/start.S'; fi`
#	$(am__mv) $(DEPDIR)/minix_stage1_5_exec-start.Tpo $(DEPDIR)/minix_stage1_5_exec-start.Po
#	source='start.S' object='minix_stage1_5_exec-start.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o minix_stage1_5_exec-start.obj `if test -f 'start.S'; then $(CYGPATH_W) 'start.S'; else $(CYGPATH_W) '$(srcdir)/start.S'; fi`

minix_stage1_5_exec-asm.o: asm.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT minix_stage1_5_exec-asm.o -MD -MP -MF $(DEPDIR)/minix_stage1_5_exec-asm.Tpo -c -o minix_stage1_5_exec-asm.o `test -f 'asm.S' || echo '$(srcdir)/'`asm.S
#	$(am__mv) $(DEPDIR)/minix_stage1_5_exec-asm.Tpo $(DEPDIR)/minix_stage1_5_exec-asm.Po
#	source='asm.S' object='minix_stage1_5_exec-asm.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o minix_stage1_5_exec-asm.o `test -f 'asm.S' || echo '$(srcdir)/'`asm.S

minix_stage1_5_exec-asm.obj: asm.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT minix_stage1_5_exec-asm.obj -MD -MP -MF $(DEPDIR)/minix_stage1_5_exec-asm.Tpo -c -o minix_stage1_5_exec-asm.obj `if test -f 'asm.S'; then $(CYGPATH_W) 'asm.S'; else $(CYGPATH_W) '$(srcdir)/asm.S'; fi`
#	$(am__mv) $(DEPDIR)/minix_stage1_5_exec-asm.Tpo $(DEPDIR)/minix_stage1_5_exec-asm.Po
#	source='asm.S' object='minix_stage1_5_exec-asm.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o minix_stage1_5_exec-asm.obj `if test -f 'asm.S'; then $(CYGPATH_W) 'asm.S'; else $(CYGPATH_W) '$(srcdir)/asm.S'; fi`

nbloader_exec-nbloader.o: nbloader.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nbloader_exec_CCASFLAGS) $(CCASFLAGS) -MT nbloader_exec-nbloader.o -MD -MP -MF $(DEPDIR)/nbloader_exec-nbloader.Tpo -c -o nbloader_exec-nbloader.o `test -f 'nbloader.S' || echo '$(srcdir)/'`nbloader.S
#	$(am__mv) $(DEPDIR)/nbloader_exec-nbloader.Tpo $(DEPDIR)/nbloader_exec-nbloader.Po
#	source='nbloader.S' object='nbloader_exec-nbloader.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nbloader_exec_CCASFLAGS) $(CCASFLAGS) -c -o nbloader_exec-nbloader.o `test -f 'nbloader.S' || echo '$(srcdir)/'`nbloader.S

nbloader_exec-nbloader.obj: nbloader.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nbloader_exec_CCASFLAGS) $(CCASFLAGS) -MT nbloader_exec-nbloader.obj -MD -MP -MF $(DEPDIR)/nbloader_exec-nbloader.Tpo -c -o nbloader_exec-nbloader.obj `if test -f 'nbloader.S'; then $(CYGPATH_W) 'nbloader.S'; else $(CYGPATH_W) '$(srcdir)/nbloader.S'; fi`
#	$(am__mv) $(DEPDIR)/nbloader_exec-nbloader.Tpo $(DEPDIR)/nbloader_exec-nbloader.Po
#	source='nbloader.S' object='nbloader_exec-nbloader.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nbloader_exec_CCASFLAGS) $(CCASFLAGS) -c -o nbloader_exec-nbloader.obj `if test -f 'nbloader.S'; then $(CYGPATH_W) 'nbloader.S'; else $(CYGPATH_W) '$(srcdir)/nbloader.S'; fi`

pre_stage2_exec-asm.o: asm.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CCASFLAGS) $(CCASFLAGS) -MT pre_stage2_exec-asm.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-asm.Tpo -c -o pre_stage2_exec-asm.o `test -f 'asm.S' || echo '$(srcdir)/'`asm.S
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-asm.Tpo $(DEPDIR)/pre_stage2_exec-asm.Po
#	source='asm.S' object='pre_stage2_exec-asm.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CCASFLAGS) $(CCASFLAGS) -c -o pre_stage2_exec-asm.o `test -f 'asm.S' || echo '$(srcdir)/'`asm.S

pre_stage2_exec-asm.obj: asm.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CCASFLAGS) $(CCASFLAGS) -MT pre_stage2_exec-asm.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-asm.Tpo -c -o pre_stage2_exec-asm.obj `if test -f 'asm.S'; then $(CYGPATH_W) 'asm.S'; else $(CYGPATH_W) '$(srcdir)/asm.S'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-asm.Tpo $(DEPDIR)/pre_stage2_exec-asm.Po
#	source='asm.S' object='pre_stage2_exec-asm.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CCASFLAGS) $(CCASFLAGS) -c -o pre_stage2_exec-asm.obj `if test -f 'asm.S'; then $(CYGPATH_W) 'asm.S'; else $(CYGPATH_W) '$(srcdir)/asm.S'; fi`

pxeloader_exec-pxeloader.o: pxeloader.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pxeloader_exec_CCASFLAGS) $(CCASFLAGS) -MT pxeloader_exec-pxeloader.o -MD -MP -MF $(DEPDIR)/pxeloader_exec-pxeloader.Tpo -c -o pxeloader_exec-pxeloader.o `test -f 'pxeloader.S' || echo '$(srcdir)/'`pxeloader.S
#	$(am__mv) $(DEPDIR)/pxeloader_exec-pxeloader.Tpo $(DEPDIR)/pxeloader_exec-pxeloader.Po
#	source='pxeloader.S' object='pxeloader_exec-pxeloader.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pxeloader_exec_CCASFLAGS) $(CCASFLAGS) -c -o pxeloader_exec-pxeloader.o `test -f 'pxeloader.S' || echo '$(srcdir)/'`pxeloader.S

pxeloader_exec-pxeloader.obj: pxeloader.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pxeloader_exec_CCASFLAGS) $(CCASFLAGS) -MT pxeloader_exec-pxeloader.obj -MD -MP -MF $(DEPDIR)/pxeloader_exec-pxeloader.Tpo -c -o pxeloader_exec-pxeloader.obj `if test -f 'pxeloader.S'; then $(CYGPATH_W) 'pxeloader.S'; else $(CYGPATH_W) '$(srcdir)/pxeloader.S'; fi`
#	$(am__mv) $(DEPDIR)/pxeloader_exec-pxeloader.Tpo $(DEPDIR)/pxeloader_exec-pxeloader.Po
#	source='pxeloader.S' object='pxeloader_exec-pxeloader.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pxeloader_exec_CCASFLAGS) $(CCASFLAGS) -c -o pxeloader_exec-pxeloader.obj `if test -f 'pxeloader.S'; then $(CYGPATH_W) 'pxeloader.S'; else $(CYGPATH_W) '$(srcdir)/pxeloader.S'; fi`

reiserfs_stage1_5_exec-start.o: start.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT reiserfs_stage1_5_exec-start.o -MD -MP -MF $(DEPDIR)/reiserfs_stage1_5_exec-start.Tpo -c -o reiserfs_stage1_5_exec-start.o `test -f 'start.S' || echo '$(srcdir)/'`start.S
#	$(am__mv) $(DEPDIR)/reiserfs_stage1_5_exec-start.Tpo $(DEPDIR)/reiserfs_stage1_5_exec-start.Po
#	source='start.S' object='reiserfs_stage1_5_exec-start.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o reiserfs_stage1_5_exec-start.o `test -f 'start.S' || echo '$(srcdir)/'`start.S

reiserfs_stage1_5_exec-start.obj: start.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT reiserfs_stage1_5_exec-start.obj -MD -MP -MF $(DEPDIR)/reiserfs_stage1_5_exec-start.Tpo -c -o reiserfs_stage1_5_exec-start.obj `if test -f 'start.S'; then $(CYGPATH_W) 'start.S'; else $(CYGPATH_W) '$(srcdir)/start.S'; fi`
#	$(am__mv) $(DEPDIR)/reiserfs_stage1_5_exec-start.Tpo $(DEPDIR)/reiserfs_stage1_5_exec-start.Po
#	source='start.S' object='reiserfs_stage1_5_exec-start.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o reiserfs_stage1_5_exec-start.obj `if test -f 'start.S'; then $(CYGPATH_W) 'start.S'; else $(CYGPATH_W) '$(srcdir)/start.S'; fi`

reiserfs_stage1_5_exec-asm.o: asm.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT reiserfs_stage1_5_exec-asm.o -MD -MP -MF $(DEPDIR)/reiserfs_stage1_5_exec-asm.Tpo -c -o reiserfs_stage1_5_exec-asm.o `test -f 'asm.S' || echo '$(srcdir)/'`asm.S
#	$(am__mv) $(DEPDIR)/reiserfs_stage1_5_exec-asm.Tpo $(DEPDIR)/reiserfs_stage1_5_exec-asm.Po
#	source='asm.S' object='reiserfs_stage1_5_exec-asm.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o reiserfs_stage1_5_exec-asm.o `test -f 'asm.S' || echo '$(srcdir)/'`asm.S

reiserfs_stage1_5_exec-asm.obj: asm.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT reiserfs_stage1_5_exec-asm.obj -MD -MP -MF $(DEPDIR)/reiserfs_stage1_5_exec-asm.Tpo -c -o reiserfs_stage1_5_exec-asm.obj `if test -f 'asm.S'; then $(CYGPATH_W) 'asm.S'; else $(CYGPATH_W) '$(srcdir)/asm.S'; fi`
#	$(am__mv) $(DEPDIR)/reiserfs_stage1_5_exec-asm.Tpo $(DEPDIR)/reiserfs_stage1_5_exec-asm.Po
#	source='asm.S' object='reiserfs_stage1_5_exec-asm.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o reiserfs_stage1_5_exec-asm.obj `if test -f 'asm.S'; then $(CYGPATH_W) 'asm.S'; else $(CYGPATH_W) '$(srcdir)/asm.S'; fi`

start_exec-start.o: start.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(start_exec_CCASFLAGS) $(CCASFLAGS) -MT start_exec-start.o -MD -MP -MF $(DEPDIR)/start_exec-start.Tpo -c -o start_exec-start.o `test -f 'start.S' || echo '$(srcdir)/'`start.S
#	$(am__mv) $(DEPDIR)/start_exec-start.Tpo $(DEPDIR)/start_exec-start.Po
#	source='start.S' object='start_exec-start.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(start_exec_CCASFLAGS) $(CCASFLAGS) -c -o start_exec-start.o `test -f 'start.S' || echo '$(srcdir)/'`start.S

start_exec-start.obj: start.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(start_exec_CCASFLAGS) $(CCASFLAGS) -MT start_exec-start.obj -MD -MP -MF $(DEPDIR)/start_exec-start.Tpo -c -o start_exec-start.obj `if test -f 'start.S'; then $(CYGPATH_W) 'start.S'; else $(CYGPATH_W) '$(srcdir)/start.S'; fi`
#	$(am__mv) $(DEPDIR)/start_exec-start.Tpo $(DEPDIR)/start_exec-start.Po
#	source='start.S' object='start_exec-start.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(start_exec_CCASFLAGS) $(CCASFLAGS) -c -o start_exec-start.obj `if test -f 'start.S'; then $(CYGPATH_W) 'start.S'; else $(CYGPATH_W) '$(srcdir)/start.S'; fi`

start_eltorito_exec-start_eltorito.o: start_eltorito.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(start_eltorito_exec_CCASFLAGS) $(CCASFLAGS) -MT start_eltorito_exec-start_eltorito.o -MD -MP -MF $(DEPDIR)/start_eltorito_exec-start_eltorito.Tpo -c -o start_eltorito_exec-start_eltorito.o `test -f 'start_eltorito.S' || echo '$(srcdir)/'`start_eltorito.S
#	$(am__mv) $(DEPDIR)/start_eltorito_exec-start_eltorito.Tpo $(DEPDIR)/start_eltorito_exec-start_eltorito.Po
#	source='start_eltorito.S' object='start_eltorito_exec-start_eltorito.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(start_eltorito_exec_CCASFLAGS) $(CCASFLAGS) -c -o start_eltorito_exec-start_eltorito.o `test -f 'start_eltorito.S' || echo '$(srcdir)/'`start_eltorito.S

start_eltorito_exec-start_eltorito.obj: start_eltorito.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(start_eltorito_exec_CCASFLAGS) $(CCASFLAGS) -MT start_eltorito_exec-start_eltorito.obj -MD -MP -MF $(DEPDIR)/start_eltorito_exec-start_eltorito.Tpo -c -o start_eltorito_exec-start_eltorito.obj `if test -f 'start_eltorito.S'; then $(CYGPATH_W) 'start_eltorito.S'; else $(CYGPATH_W) '$(srcdir)/start_eltorito.S'; fi`
#	$(am__mv) $(DEPDIR)/start_eltorito_exec-start_eltorito.Tpo $(DEPDIR)/start_eltorito_exec-start_eltorito.Po
#	source='start_eltorito.S' object='start_eltorito_exec-start_eltorito.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(start_eltorito_exec_CCASFLAGS) $(CCASFLAGS) -c -o start_eltorito_exec-start_eltorito.obj `if test -f 'start_eltorito.S'; then $(CYGPATH_W) 'start_eltorito.S'; else $(CYGPATH_W) '$(srcdir)/start_eltorito.S'; fi`

ufs2_stage1_5_exec-start.o: start.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT ufs2_stage1_5_exec-start.o -MD -MP -MF $(DEPDIR)/ufs2_stage1_5_exec-start.Tpo -c -o ufs2_stage1_5_exec-start.o `test -f 'start.S' || echo '$(srcdir)/'`start.S
#	$(am__mv) $(DEPDIR)/ufs2_stage1_5_exec-start.Tpo $(DEPDIR)/ufs2_stage1_5_exec-start.Po
#	source='start.S' object='ufs2_stage1_5_exec-start.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o ufs2_stage1_5_exec-start.o `test -f 'start.S' || echo '$(srcdir)/'`start.S

ufs2_stage1_5_exec-start.obj: start.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT ufs2_stage1_5_exec-start.obj -MD -MP -MF $(DEPDIR)/ufs2_stage1_5_exec-start.Tpo -c -o ufs2_stage1_5_exec-start.obj `if test -f 'start.S'; then $(CYGPATH_W) 'start.S'; else $(CYGPATH_W) '$(srcdir)/start.S'; fi`
#	$(am__mv) $(DEPDIR)/ufs2_stage1_5_exec-start.Tpo $(DEPDIR)/ufs2_stage1_5_exec-start.Po
#	source='start.S' object='ufs2_stage1_5_exec-start.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o ufs2_stage1_5_exec-start.obj `if test -f 'start.S'; then $(CYGPATH_W) 'start.S'; else $(CYGPATH_W) '$(srcdir)/start.S'; fi`

ufs2_stage1_5_exec-asm.o: asm.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT ufs2_stage1_5_exec-asm.o -MD -MP -MF $(DEPDIR)/ufs2_stage1_5_exec-asm.Tpo -c -o ufs2_stage1_5_exec-asm.o `test -f 'asm.S' || echo '$(srcdir)/'`asm.S
#	$(am__mv) $(DEPDIR)/ufs2_stage1_5_exec-asm.Tpo $(DEPDIR)/ufs2_stage1_5_exec-asm.Po
#	source='asm.S' object='ufs2_stage1_5_exec-asm.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o ufs2_stage1_5_exec-asm.o `test -f 'asm.S' || echo '$(srcdir)/'`asm.S

ufs2_stage1_5_exec-asm.obj: asm.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT ufs2_stage1_5_exec-asm.obj -MD -MP -MF $(DEPDIR)/ufs2_stage1_5_exec-asm.Tpo -c -o ufs2_stage1_5_exec-asm.obj `if test -f 'asm.S'; then $(CYGPATH_W) 'asm.S'; else $(CYGPATH_W) '$(srcdir)/asm.S'; fi`
#	$(am__mv) $(DEPDIR)/ufs2_stage1_5_exec-asm.Tpo $(DEPDIR)/ufs2_stage1_5_exec-asm.Po
#	source='asm.S' object='ufs2_stage1_5_exec-asm.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o ufs2_stage1_5_exec-asm.obj `if test -f 'asm.S'; then $(CYGPATH_W) 'asm.S'; else $(CYGPATH_W) '$(srcdir)/asm.S'; fi`

vstafs_stage1_5_exec-start.o: start.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT vstafs_stage1_5_exec-start.o -MD -MP -MF $(DEPDIR)/vstafs_stage1_5_exec-start.Tpo -c -o vstafs_stage1_5_exec-start.o `test -f 'start.S' || echo '$(srcdir)/'`start.S
#	$(am__mv) $(DEPDIR)/vstafs_stage1_5_exec-start.Tpo $(DEPDIR)/vstafs_stage1_5_exec-start.Po
#	source='start.S' object='vstafs_stage1_5_exec-start.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o vstafs_stage1_5_exec-start.o `test -f 'start.S' || echo '$(srcdir)/'`start.S

vstafs_stage1_5_exec-start.obj: start.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT vstafs_stage1_5_exec-start.obj -MD -MP -MF $(DEPDIR)/vstafs_stage1_5_exec-start.Tpo -c -o vstafs_stage1_5_exec-start.obj `if test -f 'start.S'; then $(CYGPATH_W) 'start.S'; else $(CYGPATH_W) '$(srcdir)/start.S'; fi`
#	$(am__mv) $(DEPDIR)/vstafs_stage1_5_exec-start.Tpo $(DEPDIR)/vstafs_stage1_5_exec-start.Po
#	source='start.S' object='vstafs_stage1_5_exec-start.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o vstafs_stage1_5_exec-start.obj `if test -f 'start.S'; then $(CYGPATH_W) 'start.S'; else $(CYGPATH_W) '$(srcdir)/start.S'; fi`

vstafs_stage1_5_exec-asm.o: asm.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT vstafs_stage1_5_exec-asm.o -MD -MP -MF $(DEPDIR)/vstafs_stage1_5_exec-asm.Tpo -c -o vstafs_stage1_5_exec-asm.o `test -f 'asm.S' || echo '$(srcdir)/'`asm.S
#	$(am__mv) $(DEPDIR)/vstafs_stage1_5_exec-asm.Tpo $(DEPDIR)/vstafs_stage1_5_exec-asm.Po
#	source='asm.S' object='vstafs_stage1_5_exec-asm.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o vstafs_stage1_5_exec-asm.o `test -f 'asm.S' || echo '$(srcdir)/'`asm.S

vstafs_stage1_5_exec-asm.obj: asm.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT vstafs_stage1_5_exec-asm.obj -MD -MP -MF $(DEPDIR)/vstafs_stage1_5_exec-asm.Tpo -c -o vstafs_stage1_5_exec-asm.obj `if test -f 'asm.S'; then $(CYGPATH_W) 'asm.S'; else $(CYGPATH_W) '$(srcdir)/asm.S'; fi`
#	$(am__mv) $(DEPDIR)/vstafs_stage1_5_exec-asm.Tpo $(DEPDIR)/vstafs_stage1_5_exec-asm.Po
#	source='asm.S' object='vstafs_stage1_5_exec-asm.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o vstafs_stage1_5_exec-asm.obj `if test -f 'asm.S'; then $(CYGPATH_W) 'asm.S'; else $(CYGPATH_W) '$(srcdir)/asm.S'; fi`

xfs_stage1_5_exec-start.o: start.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT xfs_stage1_5_exec-start.o -MD -MP -MF $(DEPDIR)/xfs_stage1_5_exec-start.Tpo -c -o xfs_stage1_5_exec-start.o `test -f 'start.S' || echo '$(srcdir)/'`start.S
#	$(am__mv) $(DEPDIR)/xfs_stage1_5_exec-start.Tpo $(DEPDIR)/xfs_stage1_5_exec-start.Po
#	source='start.S' object='xfs_stage1_5_exec-start.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o xfs_stage1_5_exec-start.o `test -f 'start.S' || echo '$(srcdir)/'`start.S

xfs_stage1_5_exec-start.obj: start.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT xfs_stage1_5_exec-start.obj -MD -MP -MF $(DEPDIR)/xfs_stage1_5_exec-start.Tpo -c -o xfs_stage1_5_exec-start.obj `if test -f 'start.S'; then $(CYGPATH_W) 'start.S'; else $(CYGPATH_W) '$(srcdir)/start.S'; fi`
#	$(am__mv) $(DEPDIR)/xfs_stage1_5_exec-start.Tpo $(DEPDIR)/xfs_stage1_5_exec-start.Po
#	source='start.S' object='xfs_stage1_5_exec-start.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o xfs_stage1_5_exec-start.obj `if test -f 'start.S'; then $(CYGPATH_W) 'start.S'; else $(CYGPATH_W) '$(srcdir)/start.S'; fi`

xfs_stage1_5_exec-asm.o: asm.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT xfs_stage1_5_exec-asm.o -MD -MP -MF $(DEPDIR)/xfs_stage1_5_exec-asm.Tpo -c -o xfs_stage1_5_exec-asm.o `test -f 'asm.S' || echo '$(srcdir)/'`asm.S
#	$(am__mv) $(DEPDIR)/xfs_stage1_5_exec-asm.Tpo $(DEPDIR)/xfs_stage1_5_exec-asm.Po
#	source='asm.S' object='xfs_stage1_5_exec-asm.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o xfs_stage1_5_exec-asm.o `test -f 'asm.S' || echo '$(srcdir)/'`asm.S

xfs_stage1_5_exec-asm.obj: asm.S
#	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -MT xfs_stage1_5_exec-asm.obj -MD -MP -MF $(DEPDIR)/xfs_stage1_5_exec-asm.Tpo -c -o xfs_stage1_5_exec-asm.obj `if test -f 'asm.S'; then $(CYGPATH_W) 'asm.S'; else $(CYGPATH_W) '$(srcdir)/asm.S'; fi`
#	$(am__mv) $(DEPDIR)/xfs_stage1_5_exec-asm.Tpo $(DEPDIR)/xfs_stage1_5_exec-asm.Po
#	source='asm.S' object='xfs_stage1_5_exec-asm.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) 
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CCASFLAGS) $(CCASFLAGS) -c -o xfs_stage1_5_exec-asm.obj `if test -f 'asm.S'; then $(CYGPATH_W) 'asm.S'; else $(CYGPATH_W) '$(srcdir)/asm.S'; fi`

.c.o:
#	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(COMPILE) -c $<

.c.obj:
#	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
#	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(COMPILE) -c `$(CYGPATH_W) '$<'`

libgrub_a-boot.o: boot.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-boot.o -MD -MP -MF $(DEPDIR)/libgrub_a-boot.Tpo -c -o libgrub_a-boot.o `test -f 'boot.c' || echo '$(srcdir)/'`boot.c
#	$(am__mv) $(DEPDIR)/libgrub_a-boot.Tpo $(DEPDIR)/libgrub_a-boot.Po
#	source='boot.c' object='libgrub_a-boot.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-boot.o `test -f 'boot.c' || echo '$(srcdir)/'`boot.c

libgrub_a-boot.obj: boot.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-boot.obj -MD -MP -MF $(DEPDIR)/libgrub_a-boot.Tpo -c -o libgrub_a-boot.obj `if test -f 'boot.c'; then $(CYGPATH_W) 'boot.c'; else $(CYGPATH_W) '$(srcdir)/boot.c'; fi`
#	$(am__mv) $(DEPDIR)/libgrub_a-boot.Tpo $(DEPDIR)/libgrub_a-boot.Po
#	source='boot.c' object='libgrub_a-boot.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-boot.obj `if test -f 'boot.c'; then $(CYGPATH_W) 'boot.c'; else $(CYGPATH_W) '$(srcdir)/boot.c'; fi`

libgrub_a-builtins.o: builtins.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-builtins.o -MD -MP -MF $(DEPDIR)/libgrub_a-builtins.Tpo -c -o libgrub_a-builtins.o `test -f 'builtins.c' || echo '$(srcdir)/'`builtins.c
#	$(am__mv) $(DEPDIR)/libgrub_a-builtins.Tpo $(DEPDIR)/libgrub_a-builtins.Po
#	source='builtins.c' object='libgrub_a-builtins.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-builtins.o `test -f 'builtins.c' || echo '$(srcdir)/'`builtins.c

libgrub_a-builtins.obj: builtins.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-builtins.obj -MD -MP -MF $(DEPDIR)/libgrub_a-builtins.Tpo -c -o libgrub_a-builtins.obj `if test -f 'builtins.c'; then $(CYGPATH_W) 'builtins.c'; else $(CYGPATH_W) '$(srcdir)/builtins.c'; fi`
#	$(am__mv) $(DEPDIR)/libgrub_a-builtins.Tpo $(DEPDIR)/libgrub_a-builtins.Po
#	source='builtins.c' object='libgrub_a-builtins.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-builtins.obj `if test -f 'builtins.c'; then $(CYGPATH_W) 'builtins.c'; else $(CYGPATH_W) '$(srcdir)/builtins.c'; fi`

libgrub_a-char_io.o: char_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-char_io.o -MD -MP -MF $(DEPDIR)/libgrub_a-char_io.Tpo -c -o libgrub_a-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c
#	$(am__mv) $(DEPDIR)/libgrub_a-char_io.Tpo $(DEPDIR)/libgrub_a-char_io.Po
#	source='char_io.c' object='libgrub_a-char_io.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c

libgrub_a-char_io.obj: char_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-char_io.obj -MD -MP -MF $(DEPDIR)/libgrub_a-char_io.Tpo -c -o libgrub_a-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`
#	$(am__mv) $(DEPDIR)/libgrub_a-char_io.Tpo $(DEPDIR)/libgrub_a-char_io.Po
#	source='char_io.c' object='libgrub_a-char_io.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`

libgrub_a-cmdline.o: cmdline.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-cmdline.o -MD -MP -MF $(DEPDIR)/libgrub_a-cmdline.Tpo -c -o libgrub_a-cmdline.o `test -f 'cmdline.c' || echo '$(srcdir)/'`cmdline.c
#	$(am__mv) $(DEPDIR)/libgrub_a-cmdline.Tpo $(DEPDIR)/libgrub_a-cmdline.Po
#	source='cmdline.c' object='libgrub_a-cmdline.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-cmdline.o `test -f 'cmdline.c' || echo '$(srcdir)/'`cmdline.c

libgrub_a-cmdline.obj: cmdline.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-cmdline.obj -MD -MP -MF $(DEPDIR)/libgrub_a-cmdline.Tpo -c -o libgrub_a-cmdline.obj `if test -f 'cmdline.c'; then $(CYGPATH_W) 'cmdline.c'; else $(CYGPATH_W) '$(srcdir)/cmdline.c'; fi`
#	$(am__mv) $(DEPDIR)/libgrub_a-cmdline.Tpo $(DEPDIR)/libgrub_a-cmdline.Po
#	source='cmdline.c' object='libgrub_a-cmdline.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-cmdline.obj `if test -f 'cmdline.c'; then $(CYGPATH_W) 'cmdline.c'; else $(CYGPATH_W) '$(srcdir)/cmdline.c'; fi`

libgrub_a-common.o: common.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-common.o -MD -MP -MF $(DEPDIR)/libgrub_a-common.Tpo -c -o libgrub_a-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c
#	$(am__mv) $(DEPDIR)/libgrub_a-common.Tpo $(DEPDIR)/libgrub_a-common.Po
#	source='common.c' object='libgrub_a-common.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c

libgrub_a-common.obj: common.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-common.obj -MD -MP -MF $(DEPDIR)/libgrub_a-common.Tpo -c -o libgrub_a-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`
#	$(am__mv) $(DEPDIR)/libgrub_a-common.Tpo $(DEPDIR)/libgrub_a-common.Po
#	source='common.c' object='libgrub_a-common.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`

libgrub_a-disk_io.o: disk_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-disk_io.o -MD -MP -MF $(DEPDIR)/libgrub_a-disk_io.Tpo -c -o libgrub_a-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c
#	$(am__mv) $(DEPDIR)/libgrub_a-disk_io.Tpo $(DEPDIR)/libgrub_a-disk_io.Po
#	source='disk_io.c' object='libgrub_a-disk_io.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c

libgrub_a-disk_io.obj: disk_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-disk_io.obj -MD -MP -MF $(DEPDIR)/libgrub_a-disk_io.Tpo -c -o libgrub_a-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`
#	$(am__mv) $(DEPDIR)/libgrub_a-disk_io.Tpo $(DEPDIR)/libgrub_a-disk_io.Po
#	source='disk_io.c' object='libgrub_a-disk_io.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`

libgrub_a-fsys_ext2fs.o: fsys_ext2fs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-fsys_ext2fs.o -MD -MP -MF $(DEPDIR)/libgrub_a-fsys_ext2fs.Tpo -c -o libgrub_a-fsys_ext2fs.o `test -f 'fsys_ext2fs.c' || echo '$(srcdir)/'`fsys_ext2fs.c
#	$(am__mv) $(DEPDIR)/libgrub_a-fsys_ext2fs.Tpo $(DEPDIR)/libgrub_a-fsys_ext2fs.Po
#	source='fsys_ext2fs.c' object='libgrub_a-fsys_ext2fs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-fsys_ext2fs.o `test -f 'fsys_ext2fs.c' || echo '$(srcdir)/'`fsys_ext2fs.c

libgrub_a-fsys_ext2fs.obj: fsys_ext2fs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-fsys_ext2fs.obj -MD -MP -MF $(DEPDIR)/libgrub_a-fsys_ext2fs.Tpo -c -o libgrub_a-fsys_ext2fs.obj `if test -f 'fsys_ext2fs.c'; then $(CYGPATH_W) 'fsys_ext2fs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ext2fs.c'; fi`
#	$(am__mv) $(DEPDIR)/libgrub_a-fsys_ext2fs.Tpo $(DEPDIR)/libgrub_a-fsys_ext2fs.Po
#	source='fsys_ext2fs.c' object='libgrub_a-fsys_ext2fs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-fsys_ext2fs.obj `if test -f 'fsys_ext2fs.c'; then $(CYGPATH_W) 'fsys_ext2fs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ext2fs.c'; fi`

libgrub_a-fsys_fat.o: fsys_fat.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-fsys_fat.o -MD -MP -MF $(DEPDIR)/libgrub_a-fsys_fat.Tpo -c -o libgrub_a-fsys_fat.o `test -f 'fsys_fat.c' || echo '$(srcdir)/'`fsys_fat.c
#	$(am__mv) $(DEPDIR)/libgrub_a-fsys_fat.Tpo $(DEPDIR)/libgrub_a-fsys_fat.Po
#	source='fsys_fat.c' object='libgrub_a-fsys_fat.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-fsys_fat.o `test -f 'fsys_fat.c' || echo '$(srcdir)/'`fsys_fat.c

libgrub_a-fsys_fat.obj: fsys_fat.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-fsys_fat.obj -MD -MP -MF $(DEPDIR)/libgrub_a-fsys_fat.Tpo -c -o libgrub_a-fsys_fat.obj `if test -f 'fsys_fat.c'; then $(CYGPATH_W) 'fsys_fat.c'; else $(CYGPATH_W) '$(srcdir)/fsys_fat.c'; fi`
#	$(am__mv) $(DEPDIR)/libgrub_a-fsys_fat.Tpo $(DEPDIR)/libgrub_a-fsys_fat.Po
#	source='fsys_fat.c' object='libgrub_a-fsys_fat.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-fsys_fat.obj `if test -f 'fsys_fat.c'; then $(CYGPATH_W) 'fsys_fat.c'; else $(CYGPATH_W) '$(srcdir)/fsys_fat.c'; fi`

libgrub_a-fsys_ffs.o: fsys_ffs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-fsys_ffs.o -MD -MP -MF $(DEPDIR)/libgrub_a-fsys_ffs.Tpo -c -o libgrub_a-fsys_ffs.o `test -f 'fsys_ffs.c' || echo '$(srcdir)/'`fsys_ffs.c
#	$(am__mv) $(DEPDIR)/libgrub_a-fsys_ffs.Tpo $(DEPDIR)/libgrub_a-fsys_ffs.Po
#	source='fsys_ffs.c' object='libgrub_a-fsys_ffs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-fsys_ffs.o `test -f 'fsys_ffs.c' || echo '$(srcdir)/'`fsys_ffs.c

libgrub_a-fsys_ffs.obj: fsys_ffs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-fsys_ffs.obj -MD -MP -MF $(DEPDIR)/libgrub_a-fsys_ffs.Tpo -c -o libgrub_a-fsys_ffs.obj `if test -f 'fsys_ffs.c'; then $(CYGPATH_W) 'fsys_ffs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ffs.c'; fi`
#	$(am__mv) $(DEPDIR)/libgrub_a-fsys_ffs.Tpo $(DEPDIR)/libgrub_a-fsys_ffs.Po
#	source='fsys_ffs.c' object='libgrub_a-fsys_ffs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-fsys_ffs.obj `if test -f 'fsys_ffs.c'; then $(CYGPATH_W) 'fsys_ffs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ffs.c'; fi`

libgrub_a-fsys_iso9660.o: fsys_iso9660.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-fsys_iso9660.o -MD -MP -MF $(DEPDIR)/libgrub_a-fsys_iso9660.Tpo -c -o libgrub_a-fsys_iso9660.o `test -f 'fsys_iso9660.c' || echo '$(srcdir)/'`fsys_iso9660.c
#	$(am__mv) $(DEPDIR)/libgrub_a-fsys_iso9660.Tpo $(DEPDIR)/libgrub_a-fsys_iso9660.Po
#	source='fsys_iso9660.c' object='libgrub_a-fsys_iso9660.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-fsys_iso9660.o `test -f 'fsys_iso9660.c' || echo '$(srcdir)/'`fsys_iso9660.c

libgrub_a-fsys_iso9660.obj: fsys_iso9660.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-fsys_iso9660.obj -MD -MP -MF $(DEPDIR)/libgrub_a-fsys_iso9660.Tpo -c -o libgrub_a-fsys_iso9660.obj `if test -f 'fsys_iso9660.c'; then $(CYGPATH_W) 'fsys_iso9660.c'; else $(CYGPATH_W) '$(srcdir)/fsys_iso9660.c'; fi`
#	$(am__mv) $(DEPDIR)/libgrub_a-fsys_iso9660.Tpo $(DEPDIR)/libgrub_a-fsys_iso9660.Po
#	source='fsys_iso9660.c' object='libgrub_a-fsys_iso9660.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-fsys_iso9660.obj `if test -f 'fsys_iso9660.c'; then $(CYGPATH_W) 'fsys_iso9660.c'; else $(CYGPATH_W) '$(srcdir)/fsys_iso9660.c'; fi`

libgrub_a-fsys_jfs.o: fsys_jfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-fsys_jfs.o -MD -MP -MF $(DEPDIR)/libgrub_a-fsys_jfs.Tpo -c -o libgrub_a-fsys_jfs.o `test -f 'fsys_jfs.c' || echo '$(srcdir)/'`fsys_jfs.c
#	$(am__mv) $(DEPDIR)/libgrub_a-fsys_jfs.Tpo $(DEPDIR)/libgrub_a-fsys_jfs.Po
#	source='fsys_jfs.c' object='libgrub_a-fsys_jfs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-fsys_jfs.o `test -f 'fsys_jfs.c' || echo '$(srcdir)/'`fsys_jfs.c

libgrub_a-fsys_jfs.obj: fsys_jfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-fsys_jfs.obj -MD -MP -MF $(DEPDIR)/libgrub_a-fsys_jfs.Tpo -c -o libgrub_a-fsys_jfs.obj `if test -f 'fsys_jfs.c'; then $(CYGPATH_W) 'fsys_jfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_jfs.c'; fi`
#	$(am__mv) $(DEPDIR)/libgrub_a-fsys_jfs.Tpo $(DEPDIR)/libgrub_a-fsys_jfs.Po
#	source='fsys_jfs.c' object='libgrub_a-fsys_jfs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-fsys_jfs.obj `if test -f 'fsys_jfs.c'; then $(CYGPATH_W) 'fsys_jfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_jfs.c'; fi`

libgrub_a-fsys_minix.o: fsys_minix.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-fsys_minix.o -MD -MP -MF $(DEPDIR)/libgrub_a-fsys_minix.Tpo -c -o libgrub_a-fsys_minix.o `test -f 'fsys_minix.c' || echo '$(srcdir)/'`fsys_minix.c
#	$(am__mv) $(DEPDIR)/libgrub_a-fsys_minix.Tpo $(DEPDIR)/libgrub_a-fsys_minix.Po
#	source='fsys_minix.c' object='libgrub_a-fsys_minix.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-fsys_minix.o `test -f 'fsys_minix.c' || echo '$(srcdir)/'`fsys_minix.c

libgrub_a-fsys_minix.obj: fsys_minix.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-fsys_minix.obj -MD -MP -MF $(DEPDIR)/libgrub_a-fsys_minix.Tpo -c -o libgrub_a-fsys_minix.obj `if test -f 'fsys_minix.c'; then $(CYGPATH_W) 'fsys_minix.c'; else $(CYGPATH_W) '$(srcdir)/fsys_minix.c'; fi`
#	$(am__mv) $(DEPDIR)/libgrub_a-fsys_minix.Tpo $(DEPDIR)/libgrub_a-fsys_minix.Po
#	source='fsys_minix.c' object='libgrub_a-fsys_minix.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-fsys_minix.obj `if test -f 'fsys_minix.c'; then $(CYGPATH_W) 'fsys_minix.c'; else $(CYGPATH_W) '$(srcdir)/fsys_minix.c'; fi`

libgrub_a-fsys_reiserfs.o: fsys_reiserfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-fsys_reiserfs.o -MD -MP -MF $(DEPDIR)/libgrub_a-fsys_reiserfs.Tpo -c -o libgrub_a-fsys_reiserfs.o `test -f 'fsys_reiserfs.c' || echo '$(srcdir)/'`fsys_reiserfs.c
#	$(am__mv) $(DEPDIR)/libgrub_a-fsys_reiserfs.Tpo $(DEPDIR)/libgrub_a-fsys_reiserfs.Po
#	source='fsys_reiserfs.c' object='libgrub_a-fsys_reiserfs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-fsys_reiserfs.o `test -f 'fsys_reiserfs.c' || echo '$(srcdir)/'`fsys_reiserfs.c

libgrub_a-fsys_reiserfs.obj: fsys_reiserfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-fsys_reiserfs.obj -MD -MP -MF $(DEPDIR)/libgrub_a-fsys_reiserfs.Tpo -c -o libgrub_a-fsys_reiserfs.obj `if test -f 'fsys_reiserfs.c'; then $(CYGPATH_W) 'fsys_reiserfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_reiserfs.c'; fi`
#	$(am__mv) $(DEPDIR)/libgrub_a-fsys_reiserfs.Tpo $(DEPDIR)/libgrub_a-fsys_reiserfs.Po
#	source='fsys_reiserfs.c' object='libgrub_a-fsys_reiserfs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-fsys_reiserfs.obj `if test -f 'fsys_reiserfs.c'; then $(CYGPATH_W) 'fsys_reiserfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_reiserfs.c'; fi`

libgrub_a-fsys_ufs2.o: fsys_ufs2.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-fsys_ufs2.o -MD -MP -MF $(DEPDIR)/libgrub_a-fsys_ufs2.Tpo -c -o libgrub_a-fsys_ufs2.o `test -f 'fsys_ufs2.c' || echo '$(srcdir)/'`fsys_ufs2.c
#	$(am__mv) $(DEPDIR)/libgrub_a-fsys_ufs2.Tpo $(DEPDIR)/libgrub_a-fsys_ufs2.Po
#	source='fsys_ufs2.c' object='libgrub_a-fsys_ufs2.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-fsys_ufs2.o `test -f 'fsys_ufs2.c' || echo '$(srcdir)/'`fsys_ufs2.c

libgrub_a-fsys_ufs2.obj: fsys_ufs2.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-fsys_ufs2.obj -MD -MP -MF $(DEPDIR)/libgrub_a-fsys_ufs2.Tpo -c -o libgrub_a-fsys_ufs2.obj `if test -f 'fsys_ufs2.c'; then $(CYGPATH_W) 'fsys_ufs2.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ufs2.c'; fi`
#	$(am__mv) $(DEPDIR)/libgrub_a-fsys_ufs2.Tpo $(DEPDIR)/libgrub_a-fsys_ufs2.Po
#	source='fsys_ufs2.c' object='libgrub_a-fsys_ufs2.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-fsys_ufs2.obj `if test -f 'fsys_ufs2.c'; then $(CYGPATH_W) 'fsys_ufs2.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ufs2.c'; fi`

libgrub_a-fsys_vstafs.o: fsys_vstafs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-fsys_vstafs.o -MD -MP -MF $(DEPDIR)/libgrub_a-fsys_vstafs.Tpo -c -o libgrub_a-fsys_vstafs.o `test -f 'fsys_vstafs.c' || echo '$(srcdir)/'`fsys_vstafs.c
#	$(am__mv) $(DEPDIR)/libgrub_a-fsys_vstafs.Tpo $(DEPDIR)/libgrub_a-fsys_vstafs.Po
#	source='fsys_vstafs.c' object='libgrub_a-fsys_vstafs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-fsys_vstafs.o `test -f 'fsys_vstafs.c' || echo '$(srcdir)/'`fsys_vstafs.c

libgrub_a-fsys_vstafs.obj: fsys_vstafs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-fsys_vstafs.obj -MD -MP -MF $(DEPDIR)/libgrub_a-fsys_vstafs.Tpo -c -o libgrub_a-fsys_vstafs.obj `if test -f 'fsys_vstafs.c'; then $(CYGPATH_W) 'fsys_vstafs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_vstafs.c'; fi`
#	$(am__mv) $(DEPDIR)/libgrub_a-fsys_vstafs.Tpo $(DEPDIR)/libgrub_a-fsys_vstafs.Po
#	source='fsys_vstafs.c' object='libgrub_a-fsys_vstafs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-fsys_vstafs.obj `if test -f 'fsys_vstafs.c'; then $(CYGPATH_W) 'fsys_vstafs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_vstafs.c'; fi`

libgrub_a-fsys_xfs.o: fsys_xfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-fsys_xfs.o -MD -MP -MF $(DEPDIR)/libgrub_a-fsys_xfs.Tpo -c -o libgrub_a-fsys_xfs.o `test -f 'fsys_xfs.c' || echo '$(srcdir)/'`fsys_xfs.c
#	$(am__mv) $(DEPDIR)/libgrub_a-fsys_xfs.Tpo $(DEPDIR)/libgrub_a-fsys_xfs.Po
#	source='fsys_xfs.c' object='libgrub_a-fsys_xfs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-fsys_xfs.o `test -f 'fsys_xfs.c' || echo '$(srcdir)/'`fsys_xfs.c

libgrub_a-fsys_xfs.obj: fsys_xfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-fsys_xfs.obj -MD -MP -MF $(DEPDIR)/libgrub_a-fsys_xfs.Tpo -c -o libgrub_a-fsys_xfs.obj `if test -f 'fsys_xfs.c'; then $(CYGPATH_W) 'fsys_xfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_xfs.c'; fi`
#	$(am__mv) $(DEPDIR)/libgrub_a-fsys_xfs.Tpo $(DEPDIR)/libgrub_a-fsys_xfs.Po
#	source='fsys_xfs.c' object='libgrub_a-fsys_xfs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-fsys_xfs.obj `if test -f 'fsys_xfs.c'; then $(CYGPATH_W) 'fsys_xfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_xfs.c'; fi`

libgrub_a-gunzip.o: gunzip.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-gunzip.o -MD -MP -MF $(DEPDIR)/libgrub_a-gunzip.Tpo -c -o libgrub_a-gunzip.o `test -f 'gunzip.c' || echo '$(srcdir)/'`gunzip.c
#	$(am__mv) $(DEPDIR)/libgrub_a-gunzip.Tpo $(DEPDIR)/libgrub_a-gunzip.Po
#	source='gunzip.c' object='libgrub_a-gunzip.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-gunzip.o `test -f 'gunzip.c' || echo '$(srcdir)/'`gunzip.c

libgrub_a-gunzip.obj: gunzip.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-gunzip.obj -MD -MP -MF $(DEPDIR)/libgrub_a-gunzip.Tpo -c -o libgrub_a-gunzip.obj `if test -f 'gunzip.c'; then $(CYGPATH_W) 'gunzip.c'; else $(CYGPATH_W) '$(srcdir)/gunzip.c'; fi`
#	$(am__mv) $(DEPDIR)/libgrub_a-gunzip.Tpo $(DEPDIR)/libgrub_a-gunzip.Po
#	source='gunzip.c' object='libgrub_a-gunzip.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-gunzip.obj `if test -f 'gunzip.c'; then $(CYGPATH_W) 'gunzip.c'; else $(CYGPATH_W) '$(srcdir)/gunzip.c'; fi`

libgrub_a-md5.o: md5.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-md5.o -MD -MP -MF $(DEPDIR)/libgrub_a-md5.Tpo -c -o libgrub_a-md5.o `test -f 'md5.c' || echo '$(srcdir)/'`md5.c
#	$(am__mv) $(DEPDIR)/libgrub_a-md5.Tpo $(DEPDIR)/libgrub_a-md5.Po
#	source='md5.c' object='libgrub_a-md5.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-md5.o `test -f 'md5.c' || echo '$(srcdir)/'`md5.c

libgrub_a-md5.obj: md5.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-md5.obj -MD -MP -MF $(DEPDIR)/libgrub_a-md5.Tpo -c -o libgrub_a-md5.obj `if test -f 'md5.c'; then $(CYGPATH_W) 'md5.c'; else $(CYGPATH_W) '$(srcdir)/md5.c'; fi`
#	$(am__mv) $(DEPDIR)/libgrub_a-md5.Tpo $(DEPDIR)/libgrub_a-md5.Po
#	source='md5.c' object='libgrub_a-md5.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-md5.obj `if test -f 'md5.c'; then $(CYGPATH_W) 'md5.c'; else $(CYGPATH_W) '$(srcdir)/md5.c'; fi`

libgrub_a-serial.o: serial.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-serial.o -MD -MP -MF $(DEPDIR)/libgrub_a-serial.Tpo -c -o libgrub_a-serial.o `test -f 'serial.c' || echo '$(srcdir)/'`serial.c
#	$(am__mv) $(DEPDIR)/libgrub_a-serial.Tpo $(DEPDIR)/libgrub_a-serial.Po
#	source='serial.c' object='libgrub_a-serial.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-serial.o `test -f 'serial.c' || echo '$(srcdir)/'`serial.c

libgrub_a-serial.obj: serial.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-serial.obj -MD -MP -MF $(DEPDIR)/libgrub_a-serial.Tpo -c -o libgrub_a-serial.obj `if test -f 'serial.c'; then $(CYGPATH_W) 'serial.c'; else $(CYGPATH_W) '$(srcdir)/serial.c'; fi`
#	$(am__mv) $(DEPDIR)/libgrub_a-serial.Tpo $(DEPDIR)/libgrub_a-serial.Po
#	source='serial.c' object='libgrub_a-serial.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-serial.obj `if test -f 'serial.c'; then $(CYGPATH_W) 'serial.c'; else $(CYGPATH_W) '$(srcdir)/serial.c'; fi`

libgrub_a-sha256crypt.o: sha256crypt.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-sha256crypt.o -MD -MP -MF $(DEPDIR)/libgrub_a-sha256crypt.Tpo -c -o libgrub_a-sha256crypt.o `test -f 'sha256crypt.c' || echo '$(srcdir)/'`sha256crypt.c
#	$(am__mv) $(DEPDIR)/libgrub_a-sha256crypt.Tpo $(DEPDIR)/libgrub_a-sha256crypt.Po
#	source='sha256crypt.c' object='libgrub_a-sha256crypt.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-sha256crypt.o `test -f 'sha256crypt.c' || echo '$(srcdir)/'`sha256crypt.c

libgrub_a-sha256crypt.obj: sha256crypt.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-sha256crypt.obj -MD -MP -MF $(DEPDIR)/libgrub_a-sha256crypt.Tpo -c -o libgrub_a-sha256crypt.obj `if test -f 'sha256crypt.c'; then $(CYGPATH_W) 'sha256crypt.c'; else $(CYGPATH_W) '$(srcdir)/sha256crypt.c'; fi`
#	$(am__mv) $(DEPDIR)/libgrub_a-sha256crypt.Tpo $(DEPDIR)/libgrub_a-sha256crypt.Po
#	source='sha256crypt.c' object='libgrub_a-sha256crypt.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-sha256crypt.obj `if test -f 'sha256crypt.c'; then $(CYGPATH_W) 'sha256crypt.c'; else $(CYGPATH_W) '$(srcdir)/sha256crypt.c'; fi`

libgrub_a-sha512crypt.o: sha512crypt.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-sha512crypt.o -MD -MP -MF $(DEPDIR)/libgrub_a-sha512crypt.Tpo -c -o libgrub_a-sha512crypt.o `test -f 'sha512crypt.c' || echo '$(srcdir)/'`sha512crypt.c
#	$(am__mv) $(DEPDIR)/libgrub_a-sha512crypt.Tpo $(DEPDIR)/libgrub_a-sha512crypt.Po
#	source='sha512crypt.c' object='libgrub_a-sha512crypt.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-sha512crypt.o `test -f 'sha512crypt.c' || echo '$(srcdir)/'`sha512crypt.c

libgrub_a-sha512crypt.obj: sha512crypt.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-sha512crypt.obj -MD -MP -MF $(DEPDIR)/libgrub_a-sha512crypt.Tpo -c -o libgrub_a-sha512crypt.obj `if test -f 'sha512crypt.c'; then $(CYGPATH_W) 'sha512crypt.c'; else $(CYGPATH_W) '$(srcdir)/sha512crypt.c'; fi`
#	$(am__mv) $(DEPDIR)/libgrub_a-sha512crypt.Tpo $(DEPDIR)/libgrub_a-sha512crypt.Po
#	source='sha512crypt.c' object='libgrub_a-sha512crypt.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-sha512crypt.obj `if test -f 'sha512crypt.c'; then $(CYGPATH_W) 'sha512crypt.c'; else $(CYGPATH_W) '$(srcdir)/sha512crypt.c'; fi`

libgrub_a-stage2.o: stage2.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-stage2.o -MD -MP -MF $(DEPDIR)/libgrub_a-stage2.Tpo -c -o libgrub_a-stage2.o `test -f 'stage2.c' || echo '$(srcdir)/'`stage2.c
#	$(am__mv) $(DEPDIR)/libgrub_a-stage2.Tpo $(DEPDIR)/libgrub_a-stage2.Po
#	source='stage2.c' object='libgrub_a-stage2.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-stage2.o `test -f 'stage2.c' || echo '$(srcdir)/'`stage2.c

libgrub_a-stage2.obj: stage2.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-stage2.obj -MD -MP -MF $(DEPDIR)/libgrub_a-stage2.Tpo -c -o libgrub_a-stage2.obj `if test -f 'stage2.c'; then $(CYGPATH_W) 'stage2.c'; else $(CYGPATH_W) '$(srcdir)/stage2.c'; fi`
#	$(am__mv) $(DEPDIR)/libgrub_a-stage2.Tpo $(DEPDIR)/libgrub_a-stage2.Po
#	source='stage2.c' object='libgrub_a-stage2.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-stage2.obj `if test -f 'stage2.c'; then $(CYGPATH_W) 'stage2.c'; else $(CYGPATH_W) '$(srcdir)/stage2.c'; fi`

libgrub_a-terminfo.o: terminfo.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-terminfo.o -MD -MP -MF $(DEPDIR)/libgrub_a-terminfo.Tpo -c -o libgrub_a-terminfo.o `test -f 'terminfo.c' || echo '$(srcdir)/'`terminfo.c
#	$(am__mv) $(DEPDIR)/libgrub_a-terminfo.Tpo $(DEPDIR)/libgrub_a-terminfo.Po
#	source='terminfo.c' object='libgrub_a-terminfo.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-terminfo.o `test -f 'terminfo.c' || echo '$(srcdir)/'`terminfo.c

libgrub_a-terminfo.obj: terminfo.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-terminfo.obj -MD -MP -MF $(DEPDIR)/libgrub_a-terminfo.Tpo -c -o libgrub_a-terminfo.obj `if test -f 'terminfo.c'; then $(CYGPATH_W) 'terminfo.c'; else $(CYGPATH_W) '$(srcdir)/terminfo.c'; fi`
#	$(am__mv) $(DEPDIR)/libgrub_a-terminfo.Tpo $(DEPDIR)/libgrub_a-terminfo.Po
#	source='terminfo.c' object='libgrub_a-terminfo.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-terminfo.obj `if test -f 'terminfo.c'; then $(CYGPATH_W) 'terminfo.c'; else $(CYGPATH_W) '$(srcdir)/terminfo.c'; fi`

libgrub_a-tparm.o: tparm.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-tparm.o -MD -MP -MF $(DEPDIR)/libgrub_a-tparm.Tpo -c -o libgrub_a-tparm.o `test -f 'tparm.c' || echo '$(srcdir)/'`tparm.c
#	$(am__mv) $(DEPDIR)/libgrub_a-tparm.Tpo $(DEPDIR)/libgrub_a-tparm.Po
#	source='tparm.c' object='libgrub_a-tparm.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-tparm.o `test -f 'tparm.c' || echo '$(srcdir)/'`tparm.c

libgrub_a-tparm.obj: tparm.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-tparm.obj -MD -MP -MF $(DEPDIR)/libgrub_a-tparm.Tpo -c -o libgrub_a-tparm.obj `if test -f 'tparm.c'; then $(CYGPATH_W) 'tparm.c'; else $(CYGPATH_W) '$(srcdir)/tparm.c'; fi`
#	$(am__mv) $(DEPDIR)/libgrub_a-tparm.Tpo $(DEPDIR)/libgrub_a-tparm.Po
#	source='tparm.c' object='libgrub_a-tparm.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-tparm.obj `if test -f 'tparm.c'; then $(CYGPATH_W) 'tparm.c'; else $(CYGPATH_W) '$(srcdir)/tparm.c'; fi`

libgrub_a-graphics.o: graphics.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-graphics.o -MD -MP -MF $(DEPDIR)/libgrub_a-graphics.Tpo -c -o libgrub_a-graphics.o `test -f 'graphics.c' || echo '$(srcdir)/'`graphics.c
#	$(am__mv) $(DEPDIR)/libgrub_a-graphics.Tpo $(DEPDIR)/libgrub_a-graphics.Po
#	source='graphics.c' object='libgrub_a-graphics.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-graphics.o `test -f 'graphics.c' || echo '$(srcdir)/'`graphics.c

libgrub_a-graphics.obj: graphics.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-graphics.obj -MD -MP -MF $(DEPDIR)/libgrub_a-graphics.Tpo -c -o libgrub_a-graphics.obj `if test -f 'graphics.c'; then $(CYGPATH_W) 'graphics.c'; else $(CYGPATH_W) '$(srcdir)/graphics.c'; fi`
#	$(am__mv) $(DEPDIR)/libgrub_a-graphics.Tpo $(DEPDIR)/libgrub_a-graphics.Po
#	source='graphics.c' object='libgrub_a-graphics.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-graphics.obj `if test -f 'graphics.c'; then $(CYGPATH_W) 'graphics.c'; else $(CYGPATH_W) '$(srcdir)/graphics.c'; fi`

libgrub_a-efistubs.o: efistubs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-efistubs.o -MD -MP -MF $(DEPDIR)/libgrub_a-efistubs.Tpo -c -o libgrub_a-efistubs.o `test -f 'efistubs.c' || echo '$(srcdir)/'`efistubs.c
#	$(am__mv) $(DEPDIR)/libgrub_a-efistubs.Tpo $(DEPDIR)/libgrub_a-efistubs.Po
#	source='efistubs.c' object='libgrub_a-efistubs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-efistubs.o `test -f 'efistubs.c' || echo '$(srcdir)/'`efistubs.c

libgrub_a-efistubs.obj: efistubs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -MT libgrub_a-efistubs.obj -MD -MP -MF $(DEPDIR)/libgrub_a-efistubs.Tpo -c -o libgrub_a-efistubs.obj `if test -f 'efistubs.c'; then $(CYGPATH_W) 'efistubs.c'; else $(CYGPATH_W) '$(srcdir)/efistubs.c'; fi`
#	$(am__mv) $(DEPDIR)/libgrub_a-efistubs.Tpo $(DEPDIR)/libgrub_a-efistubs.Po
#	source='efistubs.c' object='libgrub_a-efistubs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgrub_a_CFLAGS) $(CFLAGS) -c -o libgrub_a-efistubs.obj `if test -f 'efistubs.c'; then $(CYGPATH_W) 'efistubs.c'; else $(CYGPATH_W) '$(srcdir)/efistubs.c'; fi`

libstage2_a-boot.o: boot.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-boot.o -MD -MP -MF $(DEPDIR)/libstage2_a-boot.Tpo -c -o libstage2_a-boot.o `test -f 'boot.c' || echo '$(srcdir)/'`boot.c
#	$(am__mv) $(DEPDIR)/libstage2_a-boot.Tpo $(DEPDIR)/libstage2_a-boot.Po
#	source='boot.c' object='libstage2_a-boot.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-boot.o `test -f 'boot.c' || echo '$(srcdir)/'`boot.c

libstage2_a-boot.obj: boot.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-boot.obj -MD -MP -MF $(DEPDIR)/libstage2_a-boot.Tpo -c -o libstage2_a-boot.obj `if test -f 'boot.c'; then $(CYGPATH_W) 'boot.c'; else $(CYGPATH_W) '$(srcdir)/boot.c'; fi`
#	$(am__mv) $(DEPDIR)/libstage2_a-boot.Tpo $(DEPDIR)/libstage2_a-boot.Po
#	source='boot.c' object='libstage2_a-boot.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-boot.obj `if test -f 'boot.c'; then $(CYGPATH_W) 'boot.c'; else $(CYGPATH_W) '$(srcdir)/boot.c'; fi`

libstage2_a-builtins.o: builtins.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-builtins.o -MD -MP -MF $(DEPDIR)/libstage2_a-builtins.Tpo -c -o libstage2_a-builtins.o `test -f 'builtins.c' || echo '$(srcdir)/'`builtins.c
#	$(am__mv) $(DEPDIR)/libstage2_a-builtins.Tpo $(DEPDIR)/libstage2_a-builtins.Po
#	source='builtins.c' object='libstage2_a-builtins.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-builtins.o `test -f 'builtins.c' || echo '$(srcdir)/'`builtins.c

libstage2_a-builtins.obj: builtins.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-builtins.obj -MD -MP -MF $(DEPDIR)/libstage2_a-builtins.Tpo -c -o libstage2_a-builtins.obj `if test -f 'builtins.c'; then $(CYGPATH_W) 'builtins.c'; else $(CYGPATH_W) '$(srcdir)/builtins.c'; fi`
#	$(am__mv) $(DEPDIR)/libstage2_a-builtins.Tpo $(DEPDIR)/libstage2_a-builtins.Po
#	source='builtins.c' object='libstage2_a-builtins.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-builtins.obj `if test -f 'builtins.c'; then $(CYGPATH_W) 'builtins.c'; else $(CYGPATH_W) '$(srcdir)/builtins.c'; fi`

libstage2_a-char_io.o: char_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-char_io.o -MD -MP -MF $(DEPDIR)/libstage2_a-char_io.Tpo -c -o libstage2_a-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c
#	$(am__mv) $(DEPDIR)/libstage2_a-char_io.Tpo $(DEPDIR)/libstage2_a-char_io.Po
#	source='char_io.c' object='libstage2_a-char_io.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c

libstage2_a-char_io.obj: char_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-char_io.obj -MD -MP -MF $(DEPDIR)/libstage2_a-char_io.Tpo -c -o libstage2_a-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`
#	$(am__mv) $(DEPDIR)/libstage2_a-char_io.Tpo $(DEPDIR)/libstage2_a-char_io.Po
#	source='char_io.c' object='libstage2_a-char_io.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`

libstage2_a-cmdline.o: cmdline.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-cmdline.o -MD -MP -MF $(DEPDIR)/libstage2_a-cmdline.Tpo -c -o libstage2_a-cmdline.o `test -f 'cmdline.c' || echo '$(srcdir)/'`cmdline.c
#	$(am__mv) $(DEPDIR)/libstage2_a-cmdline.Tpo $(DEPDIR)/libstage2_a-cmdline.Po
#	source='cmdline.c' object='libstage2_a-cmdline.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-cmdline.o `test -f 'cmdline.c' || echo '$(srcdir)/'`cmdline.c

libstage2_a-cmdline.obj: cmdline.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-cmdline.obj -MD -MP -MF $(DEPDIR)/libstage2_a-cmdline.Tpo -c -o libstage2_a-cmdline.obj `if test -f 'cmdline.c'; then $(CYGPATH_W) 'cmdline.c'; else $(CYGPATH_W) '$(srcdir)/cmdline.c'; fi`
#	$(am__mv) $(DEPDIR)/libstage2_a-cmdline.Tpo $(DEPDIR)/libstage2_a-cmdline.Po
#	source='cmdline.c' object='libstage2_a-cmdline.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-cmdline.obj `if test -f 'cmdline.c'; then $(CYGPATH_W) 'cmdline.c'; else $(CYGPATH_W) '$(srcdir)/cmdline.c'; fi`

libstage2_a-common.o: common.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-common.o -MD -MP -MF $(DEPDIR)/libstage2_a-common.Tpo -c -o libstage2_a-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c
#	$(am__mv) $(DEPDIR)/libstage2_a-common.Tpo $(DEPDIR)/libstage2_a-common.Po
#	source='common.c' object='libstage2_a-common.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c

libstage2_a-common.obj: common.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-common.obj -MD -MP -MF $(DEPDIR)/libstage2_a-common.Tpo -c -o libstage2_a-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`
#	$(am__mv) $(DEPDIR)/libstage2_a-common.Tpo $(DEPDIR)/libstage2_a-common.Po
#	source='common.c' object='libstage2_a-common.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`

libstage2_a-disk_io.o: disk_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-disk_io.o -MD -MP -MF $(DEPDIR)/libstage2_a-disk_io.Tpo -c -o libstage2_a-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c
#	$(am__mv) $(DEPDIR)/libstage2_a-disk_io.Tpo $(DEPDIR)/libstage2_a-disk_io.Po
#	source='disk_io.c' object='libstage2_a-disk_io.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c

libstage2_a-disk_io.obj: disk_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-disk_io.obj -MD -MP -MF $(DEPDIR)/libstage2_a-disk_io.Tpo -c -o libstage2_a-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`
#	$(am__mv) $(DEPDIR)/libstage2_a-disk_io.Tpo $(DEPDIR)/libstage2_a-disk_io.Po
#	source='disk_io.c' object='libstage2_a-disk_io.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`

libstage2_a-fsys_ext2fs.o: fsys_ext2fs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-fsys_ext2fs.o -MD -MP -MF $(DEPDIR)/libstage2_a-fsys_ext2fs.Tpo -c -o libstage2_a-fsys_ext2fs.o `test -f 'fsys_ext2fs.c' || echo '$(srcdir)/'`fsys_ext2fs.c
#	$(am__mv) $(DEPDIR)/libstage2_a-fsys_ext2fs.Tpo $(DEPDIR)/libstage2_a-fsys_ext2fs.Po
#	source='fsys_ext2fs.c' object='libstage2_a-fsys_ext2fs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-fsys_ext2fs.o `test -f 'fsys_ext2fs.c' || echo '$(srcdir)/'`fsys_ext2fs.c

libstage2_a-fsys_ext2fs.obj: fsys_ext2fs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-fsys_ext2fs.obj -MD -MP -MF $(DEPDIR)/libstage2_a-fsys_ext2fs.Tpo -c -o libstage2_a-fsys_ext2fs.obj `if test -f 'fsys_ext2fs.c'; then $(CYGPATH_W) 'fsys_ext2fs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ext2fs.c'; fi`
#	$(am__mv) $(DEPDIR)/libstage2_a-fsys_ext2fs.Tpo $(DEPDIR)/libstage2_a-fsys_ext2fs.Po
#	source='fsys_ext2fs.c' object='libstage2_a-fsys_ext2fs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-fsys_ext2fs.obj `if test -f 'fsys_ext2fs.c'; then $(CYGPATH_W) 'fsys_ext2fs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ext2fs.c'; fi`

libstage2_a-fsys_fat.o: fsys_fat.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-fsys_fat.o -MD -MP -MF $(DEPDIR)/libstage2_a-fsys_fat.Tpo -c -o libstage2_a-fsys_fat.o `test -f 'fsys_fat.c' || echo '$(srcdir)/'`fsys_fat.c
#	$(am__mv) $(DEPDIR)/libstage2_a-fsys_fat.Tpo $(DEPDIR)/libstage2_a-fsys_fat.Po
#	source='fsys_fat.c' object='libstage2_a-fsys_fat.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-fsys_fat.o `test -f 'fsys_fat.c' || echo '$(srcdir)/'`fsys_fat.c

libstage2_a-fsys_fat.obj: fsys_fat.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-fsys_fat.obj -MD -MP -MF $(DEPDIR)/libstage2_a-fsys_fat.Tpo -c -o libstage2_a-fsys_fat.obj `if test -f 'fsys_fat.c'; then $(CYGPATH_W) 'fsys_fat.c'; else $(CYGPATH_W) '$(srcdir)/fsys_fat.c'; fi`
#	$(am__mv) $(DEPDIR)/libstage2_a-fsys_fat.Tpo $(DEPDIR)/libstage2_a-fsys_fat.Po
#	source='fsys_fat.c' object='libstage2_a-fsys_fat.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-fsys_fat.obj `if test -f 'fsys_fat.c'; then $(CYGPATH_W) 'fsys_fat.c'; else $(CYGPATH_W) '$(srcdir)/fsys_fat.c'; fi`

libstage2_a-fsys_ffs.o: fsys_ffs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-fsys_ffs.o -MD -MP -MF $(DEPDIR)/libstage2_a-fsys_ffs.Tpo -c -o libstage2_a-fsys_ffs.o `test -f 'fsys_ffs.c' || echo '$(srcdir)/'`fsys_ffs.c
#	$(am__mv) $(DEPDIR)/libstage2_a-fsys_ffs.Tpo $(DEPDIR)/libstage2_a-fsys_ffs.Po
#	source='fsys_ffs.c' object='libstage2_a-fsys_ffs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-fsys_ffs.o `test -f 'fsys_ffs.c' || echo '$(srcdir)/'`fsys_ffs.c

libstage2_a-fsys_ffs.obj: fsys_ffs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-fsys_ffs.obj -MD -MP -MF $(DEPDIR)/libstage2_a-fsys_ffs.Tpo -c -o libstage2_a-fsys_ffs.obj `if test -f 'fsys_ffs.c'; then $(CYGPATH_W) 'fsys_ffs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ffs.c'; fi`
#	$(am__mv) $(DEPDIR)/libstage2_a-fsys_ffs.Tpo $(DEPDIR)/libstage2_a-fsys_ffs.Po
#	source='fsys_ffs.c' object='libstage2_a-fsys_ffs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-fsys_ffs.obj `if test -f 'fsys_ffs.c'; then $(CYGPATH_W) 'fsys_ffs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ffs.c'; fi`

libstage2_a-fsys_iso9660.o: fsys_iso9660.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-fsys_iso9660.o -MD -MP -MF $(DEPDIR)/libstage2_a-fsys_iso9660.Tpo -c -o libstage2_a-fsys_iso9660.o `test -f 'fsys_iso9660.c' || echo '$(srcdir)/'`fsys_iso9660.c
#	$(am__mv) $(DEPDIR)/libstage2_a-fsys_iso9660.Tpo $(DEPDIR)/libstage2_a-fsys_iso9660.Po
#	source='fsys_iso9660.c' object='libstage2_a-fsys_iso9660.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-fsys_iso9660.o `test -f 'fsys_iso9660.c' || echo '$(srcdir)/'`fsys_iso9660.c

libstage2_a-fsys_iso9660.obj: fsys_iso9660.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-fsys_iso9660.obj -MD -MP -MF $(DEPDIR)/libstage2_a-fsys_iso9660.Tpo -c -o libstage2_a-fsys_iso9660.obj `if test -f 'fsys_iso9660.c'; then $(CYGPATH_W) 'fsys_iso9660.c'; else $(CYGPATH_W) '$(srcdir)/fsys_iso9660.c'; fi`
#	$(am__mv) $(DEPDIR)/libstage2_a-fsys_iso9660.Tpo $(DEPDIR)/libstage2_a-fsys_iso9660.Po
#	source='fsys_iso9660.c' object='libstage2_a-fsys_iso9660.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-fsys_iso9660.obj `if test -f 'fsys_iso9660.c'; then $(CYGPATH_W) 'fsys_iso9660.c'; else $(CYGPATH_W) '$(srcdir)/fsys_iso9660.c'; fi`

libstage2_a-fsys_jfs.o: fsys_jfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-fsys_jfs.o -MD -MP -MF $(DEPDIR)/libstage2_a-fsys_jfs.Tpo -c -o libstage2_a-fsys_jfs.o `test -f 'fsys_jfs.c' || echo '$(srcdir)/'`fsys_jfs.c
#	$(am__mv) $(DEPDIR)/libstage2_a-fsys_jfs.Tpo $(DEPDIR)/libstage2_a-fsys_jfs.Po
#	source='fsys_jfs.c' object='libstage2_a-fsys_jfs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-fsys_jfs.o `test -f 'fsys_jfs.c' || echo '$(srcdir)/'`fsys_jfs.c

libstage2_a-fsys_jfs.obj: fsys_jfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-fsys_jfs.obj -MD -MP -MF $(DEPDIR)/libstage2_a-fsys_jfs.Tpo -c -o libstage2_a-fsys_jfs.obj `if test -f 'fsys_jfs.c'; then $(CYGPATH_W) 'fsys_jfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_jfs.c'; fi`
#	$(am__mv) $(DEPDIR)/libstage2_a-fsys_jfs.Tpo $(DEPDIR)/libstage2_a-fsys_jfs.Po
#	source='fsys_jfs.c' object='libstage2_a-fsys_jfs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-fsys_jfs.obj `if test -f 'fsys_jfs.c'; then $(CYGPATH_W) 'fsys_jfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_jfs.c'; fi`

libstage2_a-fsys_minix.o: fsys_minix.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-fsys_minix.o -MD -MP -MF $(DEPDIR)/libstage2_a-fsys_minix.Tpo -c -o libstage2_a-fsys_minix.o `test -f 'fsys_minix.c' || echo '$(srcdir)/'`fsys_minix.c
#	$(am__mv) $(DEPDIR)/libstage2_a-fsys_minix.Tpo $(DEPDIR)/libstage2_a-fsys_minix.Po
#	source='fsys_minix.c' object='libstage2_a-fsys_minix.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-fsys_minix.o `test -f 'fsys_minix.c' || echo '$(srcdir)/'`fsys_minix.c

libstage2_a-fsys_minix.obj: fsys_minix.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-fsys_minix.obj -MD -MP -MF $(DEPDIR)/libstage2_a-fsys_minix.Tpo -c -o libstage2_a-fsys_minix.obj `if test -f 'fsys_minix.c'; then $(CYGPATH_W) 'fsys_minix.c'; else $(CYGPATH_W) '$(srcdir)/fsys_minix.c'; fi`
#	$(am__mv) $(DEPDIR)/libstage2_a-fsys_minix.Tpo $(DEPDIR)/libstage2_a-fsys_minix.Po
#	source='fsys_minix.c' object='libstage2_a-fsys_minix.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-fsys_minix.obj `if test -f 'fsys_minix.c'; then $(CYGPATH_W) 'fsys_minix.c'; else $(CYGPATH_W) '$(srcdir)/fsys_minix.c'; fi`

libstage2_a-fsys_reiserfs.o: fsys_reiserfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-fsys_reiserfs.o -MD -MP -MF $(DEPDIR)/libstage2_a-fsys_reiserfs.Tpo -c -o libstage2_a-fsys_reiserfs.o `test -f 'fsys_reiserfs.c' || echo '$(srcdir)/'`fsys_reiserfs.c
#	$(am__mv) $(DEPDIR)/libstage2_a-fsys_reiserfs.Tpo $(DEPDIR)/libstage2_a-fsys_reiserfs.Po
#	source='fsys_reiserfs.c' object='libstage2_a-fsys_reiserfs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-fsys_reiserfs.o `test -f 'fsys_reiserfs.c' || echo '$(srcdir)/'`fsys_reiserfs.c

libstage2_a-fsys_reiserfs.obj: fsys_reiserfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-fsys_reiserfs.obj -MD -MP -MF $(DEPDIR)/libstage2_a-fsys_reiserfs.Tpo -c -o libstage2_a-fsys_reiserfs.obj `if test -f 'fsys_reiserfs.c'; then $(CYGPATH_W) 'fsys_reiserfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_reiserfs.c'; fi`
#	$(am__mv) $(DEPDIR)/libstage2_a-fsys_reiserfs.Tpo $(DEPDIR)/libstage2_a-fsys_reiserfs.Po
#	source='fsys_reiserfs.c' object='libstage2_a-fsys_reiserfs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-fsys_reiserfs.obj `if test -f 'fsys_reiserfs.c'; then $(CYGPATH_W) 'fsys_reiserfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_reiserfs.c'; fi`

libstage2_a-fsys_ufs2.o: fsys_ufs2.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-fsys_ufs2.o -MD -MP -MF $(DEPDIR)/libstage2_a-fsys_ufs2.Tpo -c -o libstage2_a-fsys_ufs2.o `test -f 'fsys_ufs2.c' || echo '$(srcdir)/'`fsys_ufs2.c
#	$(am__mv) $(DEPDIR)/libstage2_a-fsys_ufs2.Tpo $(DEPDIR)/libstage2_a-fsys_ufs2.Po
#	source='fsys_ufs2.c' object='libstage2_a-fsys_ufs2.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-fsys_ufs2.o `test -f 'fsys_ufs2.c' || echo '$(srcdir)/'`fsys_ufs2.c

libstage2_a-fsys_ufs2.obj: fsys_ufs2.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-fsys_ufs2.obj -MD -MP -MF $(DEPDIR)/libstage2_a-fsys_ufs2.Tpo -c -o libstage2_a-fsys_ufs2.obj `if test -f 'fsys_ufs2.c'; then $(CYGPATH_W) 'fsys_ufs2.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ufs2.c'; fi`
#	$(am__mv) $(DEPDIR)/libstage2_a-fsys_ufs2.Tpo $(DEPDIR)/libstage2_a-fsys_ufs2.Po
#	source='fsys_ufs2.c' object='libstage2_a-fsys_ufs2.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-fsys_ufs2.obj `if test -f 'fsys_ufs2.c'; then $(CYGPATH_W) 'fsys_ufs2.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ufs2.c'; fi`

libstage2_a-fsys_vstafs.o: fsys_vstafs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-fsys_vstafs.o -MD -MP -MF $(DEPDIR)/libstage2_a-fsys_vstafs.Tpo -c -o libstage2_a-fsys_vstafs.o `test -f 'fsys_vstafs.c' || echo '$(srcdir)/'`fsys_vstafs.c
#	$(am__mv) $(DEPDIR)/libstage2_a-fsys_vstafs.Tpo $(DEPDIR)/libstage2_a-fsys_vstafs.Po
#	source='fsys_vstafs.c' object='libstage2_a-fsys_vstafs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-fsys_vstafs.o `test -f 'fsys_vstafs.c' || echo '$(srcdir)/'`fsys_vstafs.c

libstage2_a-fsys_vstafs.obj: fsys_vstafs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-fsys_vstafs.obj -MD -MP -MF $(DEPDIR)/libstage2_a-fsys_vstafs.Tpo -c -o libstage2_a-fsys_vstafs.obj `if test -f 'fsys_vstafs.c'; then $(CYGPATH_W) 'fsys_vstafs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_vstafs.c'; fi`
#	$(am__mv) $(DEPDIR)/libstage2_a-fsys_vstafs.Tpo $(DEPDIR)/libstage2_a-fsys_vstafs.Po
#	source='fsys_vstafs.c' object='libstage2_a-fsys_vstafs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-fsys_vstafs.obj `if test -f 'fsys_vstafs.c'; then $(CYGPATH_W) 'fsys_vstafs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_vstafs.c'; fi`

libstage2_a-fsys_xfs.o: fsys_xfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-fsys_xfs.o -MD -MP -MF $(DEPDIR)/libstage2_a-fsys_xfs.Tpo -c -o libstage2_a-fsys_xfs.o `test -f 'fsys_xfs.c' || echo '$(srcdir)/'`fsys_xfs.c
#	$(am__mv) $(DEPDIR)/libstage2_a-fsys_xfs.Tpo $(DEPDIR)/libstage2_a-fsys_xfs.Po
#	source='fsys_xfs.c' object='libstage2_a-fsys_xfs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-fsys_xfs.o `test -f 'fsys_xfs.c' || echo '$(srcdir)/'`fsys_xfs.c

libstage2_a-fsys_xfs.obj: fsys_xfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-fsys_xfs.obj -MD -MP -MF $(DEPDIR)/libstage2_a-fsys_xfs.Tpo -c -o libstage2_a-fsys_xfs.obj `if test -f 'fsys_xfs.c'; then $(CYGPATH_W) 'fsys_xfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_xfs.c'; fi`
#	$(am__mv) $(DEPDIR)/libstage2_a-fsys_xfs.Tpo $(DEPDIR)/libstage2_a-fsys_xfs.Po
#	source='fsys_xfs.c' object='libstage2_a-fsys_xfs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-fsys_xfs.obj `if test -f 'fsys_xfs.c'; then $(CYGPATH_W) 'fsys_xfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_xfs.c'; fi`

libstage2_a-gunzip.o: gunzip.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-gunzip.o -MD -MP -MF $(DEPDIR)/libstage2_a-gunzip.Tpo -c -o libstage2_a-gunzip.o `test -f 'gunzip.c' || echo '$(srcdir)/'`gunzip.c
#	$(am__mv) $(DEPDIR)/libstage2_a-gunzip.Tpo $(DEPDIR)/libstage2_a-gunzip.Po
#	source='gunzip.c' object='libstage2_a-gunzip.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-gunzip.o `test -f 'gunzip.c' || echo '$(srcdir)/'`gunzip.c

libstage2_a-gunzip.obj: gunzip.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-gunzip.obj -MD -MP -MF $(DEPDIR)/libstage2_a-gunzip.Tpo -c -o libstage2_a-gunzip.obj `if test -f 'gunzip.c'; then $(CYGPATH_W) 'gunzip.c'; else $(CYGPATH_W) '$(srcdir)/gunzip.c'; fi`
#	$(am__mv) $(DEPDIR)/libstage2_a-gunzip.Tpo $(DEPDIR)/libstage2_a-gunzip.Po
#	source='gunzip.c' object='libstage2_a-gunzip.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-gunzip.obj `if test -f 'gunzip.c'; then $(CYGPATH_W) 'gunzip.c'; else $(CYGPATH_W) '$(srcdir)/gunzip.c'; fi`

libstage2_a-md5.o: md5.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-md5.o -MD -MP -MF $(DEPDIR)/libstage2_a-md5.Tpo -c -o libstage2_a-md5.o `test -f 'md5.c' || echo '$(srcdir)/'`md5.c
#	$(am__mv) $(DEPDIR)/libstage2_a-md5.Tpo $(DEPDIR)/libstage2_a-md5.Po
#	source='md5.c' object='libstage2_a-md5.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-md5.o `test -f 'md5.c' || echo '$(srcdir)/'`md5.c

libstage2_a-md5.obj: md5.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-md5.obj -MD -MP -MF $(DEPDIR)/libstage2_a-md5.Tpo -c -o libstage2_a-md5.obj `if test -f 'md5.c'; then $(CYGPATH_W) 'md5.c'; else $(CYGPATH_W) '$(srcdir)/md5.c'; fi`
#	$(am__mv) $(DEPDIR)/libstage2_a-md5.Tpo $(DEPDIR)/libstage2_a-md5.Po
#	source='md5.c' object='libstage2_a-md5.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-md5.obj `if test -f 'md5.c'; then $(CYGPATH_W) 'md5.c'; else $(CYGPATH_W) '$(srcdir)/md5.c'; fi`

libstage2_a-serial.o: serial.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-serial.o -MD -MP -MF $(DEPDIR)/libstage2_a-serial.Tpo -c -o libstage2_a-serial.o `test -f 'serial.c' || echo '$(srcdir)/'`serial.c
#	$(am__mv) $(DEPDIR)/libstage2_a-serial.Tpo $(DEPDIR)/libstage2_a-serial.Po
#	source='serial.c' object='libstage2_a-serial.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-serial.o `test -f 'serial.c' || echo '$(srcdir)/'`serial.c

libstage2_a-serial.obj: serial.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-serial.obj -MD -MP -MF $(DEPDIR)/libstage2_a-serial.Tpo -c -o libstage2_a-serial.obj `if test -f 'serial.c'; then $(CYGPATH_W) 'serial.c'; else $(CYGPATH_W) '$(srcdir)/serial.c'; fi`
#	$(am__mv) $(DEPDIR)/libstage2_a-serial.Tpo $(DEPDIR)/libstage2_a-serial.Po
#	source='serial.c' object='libstage2_a-serial.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-serial.obj `if test -f 'serial.c'; then $(CYGPATH_W) 'serial.c'; else $(CYGPATH_W) '$(srcdir)/serial.c'; fi`

libstage2_a-sha256crypt.o: sha256crypt.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-sha256crypt.o -MD -MP -MF $(DEPDIR)/libstage2_a-sha256crypt.Tpo -c -o libstage2_a-sha256crypt.o `test -f 'sha256crypt.c' || echo '$(srcdir)/'`sha256crypt.c
#	$(am__mv) $(DEPDIR)/libstage2_a-sha256crypt.Tpo $(DEPDIR)/libstage2_a-sha256crypt.Po
#	source='sha256crypt.c' object='libstage2_a-sha256crypt.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-sha256crypt.o `test -f 'sha256crypt.c' || echo '$(srcdir)/'`sha256crypt.c

libstage2_a-sha256crypt.obj: sha256crypt.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-sha256crypt.obj -MD -MP -MF $(DEPDIR)/libstage2_a-sha256crypt.Tpo -c -o libstage2_a-sha256crypt.obj `if test -f 'sha256crypt.c'; then $(CYGPATH_W) 'sha256crypt.c'; else $(CYGPATH_W) '$(srcdir)/sha256crypt.c'; fi`
#	$(am__mv) $(DEPDIR)/libstage2_a-sha256crypt.Tpo $(DEPDIR)/libstage2_a-sha256crypt.Po
#	source='sha256crypt.c' object='libstage2_a-sha256crypt.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-sha256crypt.obj `if test -f 'sha256crypt.c'; then $(CYGPATH_W) 'sha256crypt.c'; else $(CYGPATH_W) '$(srcdir)/sha256crypt.c'; fi`

libstage2_a-sha512crypt.o: sha512crypt.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-sha512crypt.o -MD -MP -MF $(DEPDIR)/libstage2_a-sha512crypt.Tpo -c -o libstage2_a-sha512crypt.o `test -f 'sha512crypt.c' || echo '$(srcdir)/'`sha512crypt.c
#	$(am__mv) $(DEPDIR)/libstage2_a-sha512crypt.Tpo $(DEPDIR)/libstage2_a-sha512crypt.Po
#	source='sha512crypt.c' object='libstage2_a-sha512crypt.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-sha512crypt.o `test -f 'sha512crypt.c' || echo '$(srcdir)/'`sha512crypt.c

libstage2_a-sha512crypt.obj: sha512crypt.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-sha512crypt.obj -MD -MP -MF $(DEPDIR)/libstage2_a-sha512crypt.Tpo -c -o libstage2_a-sha512crypt.obj `if test -f 'sha512crypt.c'; then $(CYGPATH_W) 'sha512crypt.c'; else $(CYGPATH_W) '$(srcdir)/sha512crypt.c'; fi`
#	$(am__mv) $(DEPDIR)/libstage2_a-sha512crypt.Tpo $(DEPDIR)/libstage2_a-sha512crypt.Po
#	source='sha512crypt.c' object='libstage2_a-sha512crypt.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-sha512crypt.obj `if test -f 'sha512crypt.c'; then $(CYGPATH_W) 'sha512crypt.c'; else $(CYGPATH_W) '$(srcdir)/sha512crypt.c'; fi`

libstage2_a-stage2.o: stage2.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-stage2.o -MD -MP -MF $(DEPDIR)/libstage2_a-stage2.Tpo -c -o libstage2_a-stage2.o `test -f 'stage2.c' || echo '$(srcdir)/'`stage2.c
#	$(am__mv) $(DEPDIR)/libstage2_a-stage2.Tpo $(DEPDIR)/libstage2_a-stage2.Po
#	source='stage2.c' object='libstage2_a-stage2.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-stage2.o `test -f 'stage2.c' || echo '$(srcdir)/'`stage2.c

libstage2_a-stage2.obj: stage2.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-stage2.obj -MD -MP -MF $(DEPDIR)/libstage2_a-stage2.Tpo -c -o libstage2_a-stage2.obj `if test -f 'stage2.c'; then $(CYGPATH_W) 'stage2.c'; else $(CYGPATH_W) '$(srcdir)/stage2.c'; fi`
#	$(am__mv) $(DEPDIR)/libstage2_a-stage2.Tpo $(DEPDIR)/libstage2_a-stage2.Po
#	source='stage2.c' object='libstage2_a-stage2.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-stage2.obj `if test -f 'stage2.c'; then $(CYGPATH_W) 'stage2.c'; else $(CYGPATH_W) '$(srcdir)/stage2.c'; fi`

libstage2_a-terminfo.o: terminfo.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-terminfo.o -MD -MP -MF $(DEPDIR)/libstage2_a-terminfo.Tpo -c -o libstage2_a-terminfo.o `test -f 'terminfo.c' || echo '$(srcdir)/'`terminfo.c
#	$(am__mv) $(DEPDIR)/libstage2_a-terminfo.Tpo $(DEPDIR)/libstage2_a-terminfo.Po
#	source='terminfo.c' object='libstage2_a-terminfo.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-terminfo.o `test -f 'terminfo.c' || echo '$(srcdir)/'`terminfo.c

libstage2_a-terminfo.obj: terminfo.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-terminfo.obj -MD -MP -MF $(DEPDIR)/libstage2_a-terminfo.Tpo -c -o libstage2_a-terminfo.obj `if test -f 'terminfo.c'; then $(CYGPATH_W) 'terminfo.c'; else $(CYGPATH_W) '$(srcdir)/terminfo.c'; fi`
#	$(am__mv) $(DEPDIR)/libstage2_a-terminfo.Tpo $(DEPDIR)/libstage2_a-terminfo.Po
#	source='terminfo.c' object='libstage2_a-terminfo.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-terminfo.obj `if test -f 'terminfo.c'; then $(CYGPATH_W) 'terminfo.c'; else $(CYGPATH_W) '$(srcdir)/terminfo.c'; fi`

libstage2_a-tparm.o: tparm.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-tparm.o -MD -MP -MF $(DEPDIR)/libstage2_a-tparm.Tpo -c -o libstage2_a-tparm.o `test -f 'tparm.c' || echo '$(srcdir)/'`tparm.c
#	$(am__mv) $(DEPDIR)/libstage2_a-tparm.Tpo $(DEPDIR)/libstage2_a-tparm.Po
#	source='tparm.c' object='libstage2_a-tparm.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-tparm.o `test -f 'tparm.c' || echo '$(srcdir)/'`tparm.c

libstage2_a-tparm.obj: tparm.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-tparm.obj -MD -MP -MF $(DEPDIR)/libstage2_a-tparm.Tpo -c -o libstage2_a-tparm.obj `if test -f 'tparm.c'; then $(CYGPATH_W) 'tparm.c'; else $(CYGPATH_W) '$(srcdir)/tparm.c'; fi`
#	$(am__mv) $(DEPDIR)/libstage2_a-tparm.Tpo $(DEPDIR)/libstage2_a-tparm.Po
#	source='tparm.c' object='libstage2_a-tparm.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-tparm.obj `if test -f 'tparm.c'; then $(CYGPATH_W) 'tparm.c'; else $(CYGPATH_W) '$(srcdir)/tparm.c'; fi`

libstage2_a-efistubs.o: efistubs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-efistubs.o -MD -MP -MF $(DEPDIR)/libstage2_a-efistubs.Tpo -c -o libstage2_a-efistubs.o `test -f 'efistubs.c' || echo '$(srcdir)/'`efistubs.c
#	$(am__mv) $(DEPDIR)/libstage2_a-efistubs.Tpo $(DEPDIR)/libstage2_a-efistubs.Po
#	source='efistubs.c' object='libstage2_a-efistubs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-efistubs.o `test -f 'efistubs.c' || echo '$(srcdir)/'`efistubs.c

libstage2_a-efistubs.obj: efistubs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -MT libstage2_a-efistubs.obj -MD -MP -MF $(DEPDIR)/libstage2_a-efistubs.Tpo -c -o libstage2_a-efistubs.obj `if test -f 'efistubs.c'; then $(CYGPATH_W) 'efistubs.c'; else $(CYGPATH_W) '$(srcdir)/efistubs.c'; fi`
#	$(am__mv) $(DEPDIR)/libstage2_a-efistubs.Tpo $(DEPDIR)/libstage2_a-efistubs.Po
#	source='efistubs.c' object='libstage2_a-efistubs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstage2_a_CFLAGS) $(CFLAGS) -c -o libstage2_a-efistubs.obj `if test -f 'efistubs.c'; then $(CYGPATH_W) 'efistubs.c'; else $(CYGPATH_W) '$(srcdir)/efistubs.c'; fi`

diskless_exec-bios.o: bios.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-bios.o -MD -MP -MF $(DEPDIR)/diskless_exec-bios.Tpo -c -o diskless_exec-bios.o `test -f 'bios.c' || echo '$(srcdir)/'`bios.c
#	$(am__mv) $(DEPDIR)/diskless_exec-bios.Tpo $(DEPDIR)/diskless_exec-bios.Po
#	source='bios.c' object='diskless_exec-bios.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-bios.o `test -f 'bios.c' || echo '$(srcdir)/'`bios.c

diskless_exec-bios.obj: bios.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-bios.obj -MD -MP -MF $(DEPDIR)/diskless_exec-bios.Tpo -c -o diskless_exec-bios.obj `if test -f 'bios.c'; then $(CYGPATH_W) 'bios.c'; else $(CYGPATH_W) '$(srcdir)/bios.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-bios.Tpo $(DEPDIR)/diskless_exec-bios.Po
#	source='bios.c' object='diskless_exec-bios.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-bios.obj `if test -f 'bios.c'; then $(CYGPATH_W) 'bios.c'; else $(CYGPATH_W) '$(srcdir)/bios.c'; fi`

diskless_exec-boot.o: boot.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-boot.o -MD -MP -MF $(DEPDIR)/diskless_exec-boot.Tpo -c -o diskless_exec-boot.o `test -f 'boot.c' || echo '$(srcdir)/'`boot.c
#	$(am__mv) $(DEPDIR)/diskless_exec-boot.Tpo $(DEPDIR)/diskless_exec-boot.Po
#	source='boot.c' object='diskless_exec-boot.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-boot.o `test -f 'boot.c' || echo '$(srcdir)/'`boot.c

diskless_exec-boot.obj: boot.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-boot.obj -MD -MP -MF $(DEPDIR)/diskless_exec-boot.Tpo -c -o diskless_exec-boot.obj `if test -f 'boot.c'; then $(CYGPATH_W) 'boot.c'; else $(CYGPATH_W) '$(srcdir)/boot.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-boot.Tpo $(DEPDIR)/diskless_exec-boot.Po
#	source='boot.c' object='diskless_exec-boot.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-boot.obj `if test -f 'boot.c'; then $(CYGPATH_W) 'boot.c'; else $(CYGPATH_W) '$(srcdir)/boot.c'; fi`

diskless_exec-builtins.o: builtins.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-builtins.o -MD -MP -MF $(DEPDIR)/diskless_exec-builtins.Tpo -c -o diskless_exec-builtins.o `test -f 'builtins.c' || echo '$(srcdir)/'`builtins.c
#	$(am__mv) $(DEPDIR)/diskless_exec-builtins.Tpo $(DEPDIR)/diskless_exec-builtins.Po
#	source='builtins.c' object='diskless_exec-builtins.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-builtins.o `test -f 'builtins.c' || echo '$(srcdir)/'`builtins.c

diskless_exec-builtins.obj: builtins.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-builtins.obj -MD -MP -MF $(DEPDIR)/diskless_exec-builtins.Tpo -c -o diskless_exec-builtins.obj `if test -f 'builtins.c'; then $(CYGPATH_W) 'builtins.c'; else $(CYGPATH_W) '$(srcdir)/builtins.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-builtins.Tpo $(DEPDIR)/diskless_exec-builtins.Po
#	source='builtins.c' object='diskless_exec-builtins.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-builtins.obj `if test -f 'builtins.c'; then $(CYGPATH_W) 'builtins.c'; else $(CYGPATH_W) '$(srcdir)/builtins.c'; fi`

diskless_exec-char_io.o: char_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-char_io.o -MD -MP -MF $(DEPDIR)/diskless_exec-char_io.Tpo -c -o diskless_exec-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c
#	$(am__mv) $(DEPDIR)/diskless_exec-char_io.Tpo $(DEPDIR)/diskless_exec-char_io.Po
#	source='char_io.c' object='diskless_exec-char_io.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c

diskless_exec-char_io.obj: char_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-char_io.obj -MD -MP -MF $(DEPDIR)/diskless_exec-char_io.Tpo -c -o diskless_exec-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-char_io.Tpo $(DEPDIR)/diskless_exec-char_io.Po
#	source='char_io.c' object='diskless_exec-char_io.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`

diskless_exec-cmdline.o: cmdline.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-cmdline.o -MD -MP -MF $(DEPDIR)/diskless_exec-cmdline.Tpo -c -o diskless_exec-cmdline.o `test -f 'cmdline.c' || echo '$(srcdir)/'`cmdline.c
#	$(am__mv) $(DEPDIR)/diskless_exec-cmdline.Tpo $(DEPDIR)/diskless_exec-cmdline.Po
#	source='cmdline.c' object='diskless_exec-cmdline.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-cmdline.o `test -f 'cmdline.c' || echo '$(srcdir)/'`cmdline.c

diskless_exec-cmdline.obj: cmdline.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-cmdline.obj -MD -MP -MF $(DEPDIR)/diskless_exec-cmdline.Tpo -c -o diskless_exec-cmdline.obj `if test -f 'cmdline.c'; then $(CYGPATH_W) 'cmdline.c'; else $(CYGPATH_W) '$(srcdir)/cmdline.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-cmdline.Tpo $(DEPDIR)/diskless_exec-cmdline.Po
#	source='cmdline.c' object='diskless_exec-cmdline.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-cmdline.obj `if test -f 'cmdline.c'; then $(CYGPATH_W) 'cmdline.c'; else $(CYGPATH_W) '$(srcdir)/cmdline.c'; fi`

diskless_exec-common.o: common.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-common.o -MD -MP -MF $(DEPDIR)/diskless_exec-common.Tpo -c -o diskless_exec-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c
#	$(am__mv) $(DEPDIR)/diskless_exec-common.Tpo $(DEPDIR)/diskless_exec-common.Po
#	source='common.c' object='diskless_exec-common.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c

diskless_exec-common.obj: common.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-common.obj -MD -MP -MF $(DEPDIR)/diskless_exec-common.Tpo -c -o diskless_exec-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-common.Tpo $(DEPDIR)/diskless_exec-common.Po
#	source='common.c' object='diskless_exec-common.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`

diskless_exec-console.o: console.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-console.o -MD -MP -MF $(DEPDIR)/diskless_exec-console.Tpo -c -o diskless_exec-console.o `test -f 'console.c' || echo '$(srcdir)/'`console.c
#	$(am__mv) $(DEPDIR)/diskless_exec-console.Tpo $(DEPDIR)/diskless_exec-console.Po
#	source='console.c' object='diskless_exec-console.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-console.o `test -f 'console.c' || echo '$(srcdir)/'`console.c

diskless_exec-console.obj: console.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-console.obj -MD -MP -MF $(DEPDIR)/diskless_exec-console.Tpo -c -o diskless_exec-console.obj `if test -f 'console.c'; then $(CYGPATH_W) 'console.c'; else $(CYGPATH_W) '$(srcdir)/console.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-console.Tpo $(DEPDIR)/diskless_exec-console.Po
#	source='console.c' object='diskless_exec-console.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-console.obj `if test -f 'console.c'; then $(CYGPATH_W) 'console.c'; else $(CYGPATH_W) '$(srcdir)/console.c'; fi`

diskless_exec-disk_io.o: disk_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-disk_io.o -MD -MP -MF $(DEPDIR)/diskless_exec-disk_io.Tpo -c -o diskless_exec-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c
#	$(am__mv) $(DEPDIR)/diskless_exec-disk_io.Tpo $(DEPDIR)/diskless_exec-disk_io.Po
#	source='disk_io.c' object='diskless_exec-disk_io.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c

diskless_exec-disk_io.obj: disk_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-disk_io.obj -MD -MP -MF $(DEPDIR)/diskless_exec-disk_io.Tpo -c -o diskless_exec-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-disk_io.Tpo $(DEPDIR)/diskless_exec-disk_io.Po
#	source='disk_io.c' object='diskless_exec-disk_io.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`

diskless_exec-fsys_ext2fs.o: fsys_ext2fs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-fsys_ext2fs.o -MD -MP -MF $(DEPDIR)/diskless_exec-fsys_ext2fs.Tpo -c -o diskless_exec-fsys_ext2fs.o `test -f 'fsys_ext2fs.c' || echo '$(srcdir)/'`fsys_ext2fs.c
#	$(am__mv) $(DEPDIR)/diskless_exec-fsys_ext2fs.Tpo $(DEPDIR)/diskless_exec-fsys_ext2fs.Po
#	source='fsys_ext2fs.c' object='diskless_exec-fsys_ext2fs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-fsys_ext2fs.o `test -f 'fsys_ext2fs.c' || echo '$(srcdir)/'`fsys_ext2fs.c

diskless_exec-fsys_ext2fs.obj: fsys_ext2fs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-fsys_ext2fs.obj -MD -MP -MF $(DEPDIR)/diskless_exec-fsys_ext2fs.Tpo -c -o diskless_exec-fsys_ext2fs.obj `if test -f 'fsys_ext2fs.c'; then $(CYGPATH_W) 'fsys_ext2fs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ext2fs.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-fsys_ext2fs.Tpo $(DEPDIR)/diskless_exec-fsys_ext2fs.Po
#	source='fsys_ext2fs.c' object='diskless_exec-fsys_ext2fs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-fsys_ext2fs.obj `if test -f 'fsys_ext2fs.c'; then $(CYGPATH_W) 'fsys_ext2fs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ext2fs.c'; fi`

diskless_exec-fsys_fat.o: fsys_fat.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-fsys_fat.o -MD -MP -MF $(DEPDIR)/diskless_exec-fsys_fat.Tpo -c -o diskless_exec-fsys_fat.o `test -f 'fsys_fat.c' || echo '$(srcdir)/'`fsys_fat.c
#	$(am__mv) $(DEPDIR)/diskless_exec-fsys_fat.Tpo $(DEPDIR)/diskless_exec-fsys_fat.Po
#	source='fsys_fat.c' object='diskless_exec-fsys_fat.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-fsys_fat.o `test -f 'fsys_fat.c' || echo '$(srcdir)/'`fsys_fat.c

diskless_exec-fsys_fat.obj: fsys_fat.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-fsys_fat.obj -MD -MP -MF $(DEPDIR)/diskless_exec-fsys_fat.Tpo -c -o diskless_exec-fsys_fat.obj `if test -f 'fsys_fat.c'; then $(CYGPATH_W) 'fsys_fat.c'; else $(CYGPATH_W) '$(srcdir)/fsys_fat.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-fsys_fat.Tpo $(DEPDIR)/diskless_exec-fsys_fat.Po
#	source='fsys_fat.c' object='diskless_exec-fsys_fat.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-fsys_fat.obj `if test -f 'fsys_fat.c'; then $(CYGPATH_W) 'fsys_fat.c'; else $(CYGPATH_W) '$(srcdir)/fsys_fat.c'; fi`

diskless_exec-fsys_ffs.o: fsys_ffs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-fsys_ffs.o -MD -MP -MF $(DEPDIR)/diskless_exec-fsys_ffs.Tpo -c -o diskless_exec-fsys_ffs.o `test -f 'fsys_ffs.c' || echo '$(srcdir)/'`fsys_ffs.c
#	$(am__mv) $(DEPDIR)/diskless_exec-fsys_ffs.Tpo $(DEPDIR)/diskless_exec-fsys_ffs.Po
#	source='fsys_ffs.c' object='diskless_exec-fsys_ffs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-fsys_ffs.o `test -f 'fsys_ffs.c' || echo '$(srcdir)/'`fsys_ffs.c

diskless_exec-fsys_ffs.obj: fsys_ffs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-fsys_ffs.obj -MD -MP -MF $(DEPDIR)/diskless_exec-fsys_ffs.Tpo -c -o diskless_exec-fsys_ffs.obj `if test -f 'fsys_ffs.c'; then $(CYGPATH_W) 'fsys_ffs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ffs.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-fsys_ffs.Tpo $(DEPDIR)/diskless_exec-fsys_ffs.Po
#	source='fsys_ffs.c' object='diskless_exec-fsys_ffs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-fsys_ffs.obj `if test -f 'fsys_ffs.c'; then $(CYGPATH_W) 'fsys_ffs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ffs.c'; fi`

diskless_exec-fsys_iso9660.o: fsys_iso9660.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-fsys_iso9660.o -MD -MP -MF $(DEPDIR)/diskless_exec-fsys_iso9660.Tpo -c -o diskless_exec-fsys_iso9660.o `test -f 'fsys_iso9660.c' || echo '$(srcdir)/'`fsys_iso9660.c
#	$(am__mv) $(DEPDIR)/diskless_exec-fsys_iso9660.Tpo $(DEPDIR)/diskless_exec-fsys_iso9660.Po
#	source='fsys_iso9660.c' object='diskless_exec-fsys_iso9660.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-fsys_iso9660.o `test -f 'fsys_iso9660.c' || echo '$(srcdir)/'`fsys_iso9660.c

diskless_exec-fsys_iso9660.obj: fsys_iso9660.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-fsys_iso9660.obj -MD -MP -MF $(DEPDIR)/diskless_exec-fsys_iso9660.Tpo -c -o diskless_exec-fsys_iso9660.obj `if test -f 'fsys_iso9660.c'; then $(CYGPATH_W) 'fsys_iso9660.c'; else $(CYGPATH_W) '$(srcdir)/fsys_iso9660.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-fsys_iso9660.Tpo $(DEPDIR)/diskless_exec-fsys_iso9660.Po
#	source='fsys_iso9660.c' object='diskless_exec-fsys_iso9660.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-fsys_iso9660.obj `if test -f 'fsys_iso9660.c'; then $(CYGPATH_W) 'fsys_iso9660.c'; else $(CYGPATH_W) '$(srcdir)/fsys_iso9660.c'; fi`

diskless_exec-fsys_jfs.o: fsys_jfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-fsys_jfs.o -MD -MP -MF $(DEPDIR)/diskless_exec-fsys_jfs.Tpo -c -o diskless_exec-fsys_jfs.o `test -f 'fsys_jfs.c' || echo '$(srcdir)/'`fsys_jfs.c
#	$(am__mv) $(DEPDIR)/diskless_exec-fsys_jfs.Tpo $(DEPDIR)/diskless_exec-fsys_jfs.Po
#	source='fsys_jfs.c' object='diskless_exec-fsys_jfs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-fsys_jfs.o `test -f 'fsys_jfs.c' || echo '$(srcdir)/'`fsys_jfs.c

diskless_exec-fsys_jfs.obj: fsys_jfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-fsys_jfs.obj -MD -MP -MF $(DEPDIR)/diskless_exec-fsys_jfs.Tpo -c -o diskless_exec-fsys_jfs.obj `if test -f 'fsys_jfs.c'; then $(CYGPATH_W) 'fsys_jfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_jfs.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-fsys_jfs.Tpo $(DEPDIR)/diskless_exec-fsys_jfs.Po
#	source='fsys_jfs.c' object='diskless_exec-fsys_jfs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-fsys_jfs.obj `if test -f 'fsys_jfs.c'; then $(CYGPATH_W) 'fsys_jfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_jfs.c'; fi`

diskless_exec-fsys_minix.o: fsys_minix.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-fsys_minix.o -MD -MP -MF $(DEPDIR)/diskless_exec-fsys_minix.Tpo -c -o diskless_exec-fsys_minix.o `test -f 'fsys_minix.c' || echo '$(srcdir)/'`fsys_minix.c
#	$(am__mv) $(DEPDIR)/diskless_exec-fsys_minix.Tpo $(DEPDIR)/diskless_exec-fsys_minix.Po
#	source='fsys_minix.c' object='diskless_exec-fsys_minix.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-fsys_minix.o `test -f 'fsys_minix.c' || echo '$(srcdir)/'`fsys_minix.c

diskless_exec-fsys_minix.obj: fsys_minix.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-fsys_minix.obj -MD -MP -MF $(DEPDIR)/diskless_exec-fsys_minix.Tpo -c -o diskless_exec-fsys_minix.obj `if test -f 'fsys_minix.c'; then $(CYGPATH_W) 'fsys_minix.c'; else $(CYGPATH_W) '$(srcdir)/fsys_minix.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-fsys_minix.Tpo $(DEPDIR)/diskless_exec-fsys_minix.Po
#	source='fsys_minix.c' object='diskless_exec-fsys_minix.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-fsys_minix.obj `if test -f 'fsys_minix.c'; then $(CYGPATH_W) 'fsys_minix.c'; else $(CYGPATH_W) '$(srcdir)/fsys_minix.c'; fi`

diskless_exec-fsys_reiserfs.o: fsys_reiserfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-fsys_reiserfs.o -MD -MP -MF $(DEPDIR)/diskless_exec-fsys_reiserfs.Tpo -c -o diskless_exec-fsys_reiserfs.o `test -f 'fsys_reiserfs.c' || echo '$(srcdir)/'`fsys_reiserfs.c
#	$(am__mv) $(DEPDIR)/diskless_exec-fsys_reiserfs.Tpo $(DEPDIR)/diskless_exec-fsys_reiserfs.Po
#	source='fsys_reiserfs.c' object='diskless_exec-fsys_reiserfs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-fsys_reiserfs.o `test -f 'fsys_reiserfs.c' || echo '$(srcdir)/'`fsys_reiserfs.c

diskless_exec-fsys_reiserfs.obj: fsys_reiserfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-fsys_reiserfs.obj -MD -MP -MF $(DEPDIR)/diskless_exec-fsys_reiserfs.Tpo -c -o diskless_exec-fsys_reiserfs.obj `if test -f 'fsys_reiserfs.c'; then $(CYGPATH_W) 'fsys_reiserfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_reiserfs.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-fsys_reiserfs.Tpo $(DEPDIR)/diskless_exec-fsys_reiserfs.Po
#	source='fsys_reiserfs.c' object='diskless_exec-fsys_reiserfs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-fsys_reiserfs.obj `if test -f 'fsys_reiserfs.c'; then $(CYGPATH_W) 'fsys_reiserfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_reiserfs.c'; fi`

diskless_exec-fsys_ufs2.o: fsys_ufs2.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-fsys_ufs2.o -MD -MP -MF $(DEPDIR)/diskless_exec-fsys_ufs2.Tpo -c -o diskless_exec-fsys_ufs2.o `test -f 'fsys_ufs2.c' || echo '$(srcdir)/'`fsys_ufs2.c
#	$(am__mv) $(DEPDIR)/diskless_exec-fsys_ufs2.Tpo $(DEPDIR)/diskless_exec-fsys_ufs2.Po
#	source='fsys_ufs2.c' object='diskless_exec-fsys_ufs2.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-fsys_ufs2.o `test -f 'fsys_ufs2.c' || echo '$(srcdir)/'`fsys_ufs2.c

diskless_exec-fsys_ufs2.obj: fsys_ufs2.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-fsys_ufs2.obj -MD -MP -MF $(DEPDIR)/diskless_exec-fsys_ufs2.Tpo -c -o diskless_exec-fsys_ufs2.obj `if test -f 'fsys_ufs2.c'; then $(CYGPATH_W) 'fsys_ufs2.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ufs2.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-fsys_ufs2.Tpo $(DEPDIR)/diskless_exec-fsys_ufs2.Po
#	source='fsys_ufs2.c' object='diskless_exec-fsys_ufs2.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-fsys_ufs2.obj `if test -f 'fsys_ufs2.c'; then $(CYGPATH_W) 'fsys_ufs2.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ufs2.c'; fi`

diskless_exec-fsys_vstafs.o: fsys_vstafs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-fsys_vstafs.o -MD -MP -MF $(DEPDIR)/diskless_exec-fsys_vstafs.Tpo -c -o diskless_exec-fsys_vstafs.o `test -f 'fsys_vstafs.c' || echo '$(srcdir)/'`fsys_vstafs.c
#	$(am__mv) $(DEPDIR)/diskless_exec-fsys_vstafs.Tpo $(DEPDIR)/diskless_exec-fsys_vstafs.Po
#	source='fsys_vstafs.c' object='diskless_exec-fsys_vstafs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-fsys_vstafs.o `test -f 'fsys_vstafs.c' || echo '$(srcdir)/'`fsys_vstafs.c

diskless_exec-fsys_vstafs.obj: fsys_vstafs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-fsys_vstafs.obj -MD -MP -MF $(DEPDIR)/diskless_exec-fsys_vstafs.Tpo -c -o diskless_exec-fsys_vstafs.obj `if test -f 'fsys_vstafs.c'; then $(CYGPATH_W) 'fsys_vstafs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_vstafs.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-fsys_vstafs.Tpo $(DEPDIR)/diskless_exec-fsys_vstafs.Po
#	source='fsys_vstafs.c' object='diskless_exec-fsys_vstafs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-fsys_vstafs.obj `if test -f 'fsys_vstafs.c'; then $(CYGPATH_W) 'fsys_vstafs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_vstafs.c'; fi`

diskless_exec-fsys_xfs.o: fsys_xfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-fsys_xfs.o -MD -MP -MF $(DEPDIR)/diskless_exec-fsys_xfs.Tpo -c -o diskless_exec-fsys_xfs.o `test -f 'fsys_xfs.c' || echo '$(srcdir)/'`fsys_xfs.c
#	$(am__mv) $(DEPDIR)/diskless_exec-fsys_xfs.Tpo $(DEPDIR)/diskless_exec-fsys_xfs.Po
#	source='fsys_xfs.c' object='diskless_exec-fsys_xfs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-fsys_xfs.o `test -f 'fsys_xfs.c' || echo '$(srcdir)/'`fsys_xfs.c

diskless_exec-fsys_xfs.obj: fsys_xfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-fsys_xfs.obj -MD -MP -MF $(DEPDIR)/diskless_exec-fsys_xfs.Tpo -c -o diskless_exec-fsys_xfs.obj `if test -f 'fsys_xfs.c'; then $(CYGPATH_W) 'fsys_xfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_xfs.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-fsys_xfs.Tpo $(DEPDIR)/diskless_exec-fsys_xfs.Po
#	source='fsys_xfs.c' object='diskless_exec-fsys_xfs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-fsys_xfs.obj `if test -f 'fsys_xfs.c'; then $(CYGPATH_W) 'fsys_xfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_xfs.c'; fi`

diskless_exec-gunzip.o: gunzip.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-gunzip.o -MD -MP -MF $(DEPDIR)/diskless_exec-gunzip.Tpo -c -o diskless_exec-gunzip.o `test -f 'gunzip.c' || echo '$(srcdir)/'`gunzip.c
#	$(am__mv) $(DEPDIR)/diskless_exec-gunzip.Tpo $(DEPDIR)/diskless_exec-gunzip.Po
#	source='gunzip.c' object='diskless_exec-gunzip.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-gunzip.o `test -f 'gunzip.c' || echo '$(srcdir)/'`gunzip.c

diskless_exec-gunzip.obj: gunzip.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-gunzip.obj -MD -MP -MF $(DEPDIR)/diskless_exec-gunzip.Tpo -c -o diskless_exec-gunzip.obj `if test -f 'gunzip.c'; then $(CYGPATH_W) 'gunzip.c'; else $(CYGPATH_W) '$(srcdir)/gunzip.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-gunzip.Tpo $(DEPDIR)/diskless_exec-gunzip.Po
#	source='gunzip.c' object='diskless_exec-gunzip.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-gunzip.obj `if test -f 'gunzip.c'; then $(CYGPATH_W) 'gunzip.c'; else $(CYGPATH_W) '$(srcdir)/gunzip.c'; fi`

diskless_exec-hercules.o: hercules.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-hercules.o -MD -MP -MF $(DEPDIR)/diskless_exec-hercules.Tpo -c -o diskless_exec-hercules.o `test -f 'hercules.c' || echo '$(srcdir)/'`hercules.c
#	$(am__mv) $(DEPDIR)/diskless_exec-hercules.Tpo $(DEPDIR)/diskless_exec-hercules.Po
#	source='hercules.c' object='diskless_exec-hercules.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-hercules.o `test -f 'hercules.c' || echo '$(srcdir)/'`hercules.c

diskless_exec-hercules.obj: hercules.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-hercules.obj -MD -MP -MF $(DEPDIR)/diskless_exec-hercules.Tpo -c -o diskless_exec-hercules.obj `if test -f 'hercules.c'; then $(CYGPATH_W) 'hercules.c'; else $(CYGPATH_W) '$(srcdir)/hercules.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-hercules.Tpo $(DEPDIR)/diskless_exec-hercules.Po
#	source='hercules.c' object='diskless_exec-hercules.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-hercules.obj `if test -f 'hercules.c'; then $(CYGPATH_W) 'hercules.c'; else $(CYGPATH_W) '$(srcdir)/hercules.c'; fi`

diskless_exec-md5.o: md5.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-md5.o -MD -MP -MF $(DEPDIR)/diskless_exec-md5.Tpo -c -o diskless_exec-md5.o `test -f 'md5.c' || echo '$(srcdir)/'`md5.c
#	$(am__mv) $(DEPDIR)/diskless_exec-md5.Tpo $(DEPDIR)/diskless_exec-md5.Po
#	source='md5.c' object='diskless_exec-md5.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-md5.o `test -f 'md5.c' || echo '$(srcdir)/'`md5.c

diskless_exec-md5.obj: md5.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-md5.obj -MD -MP -MF $(DEPDIR)/diskless_exec-md5.Tpo -c -o diskless_exec-md5.obj `if test -f 'md5.c'; then $(CYGPATH_W) 'md5.c'; else $(CYGPATH_W) '$(srcdir)/md5.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-md5.Tpo $(DEPDIR)/diskless_exec-md5.Po
#	source='md5.c' object='diskless_exec-md5.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-md5.obj `if test -f 'md5.c'; then $(CYGPATH_W) 'md5.c'; else $(CYGPATH_W) '$(srcdir)/md5.c'; fi`

diskless_exec-serial.o: serial.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-serial.o -MD -MP -MF $(DEPDIR)/diskless_exec-serial.Tpo -c -o diskless_exec-serial.o `test -f 'serial.c' || echo '$(srcdir)/'`serial.c
#	$(am__mv) $(DEPDIR)/diskless_exec-serial.Tpo $(DEPDIR)/diskless_exec-serial.Po
#	source='serial.c' object='diskless_exec-serial.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-serial.o `test -f 'serial.c' || echo '$(srcdir)/'`serial.c

diskless_exec-serial.obj: serial.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-serial.obj -MD -MP -MF $(DEPDIR)/diskless_exec-serial.Tpo -c -o diskless_exec-serial.obj `if test -f 'serial.c'; then $(CYGPATH_W) 'serial.c'; else $(CYGPATH_W) '$(srcdir)/serial.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-serial.Tpo $(DEPDIR)/diskless_exec-serial.Po
#	source='serial.c' object='diskless_exec-serial.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-serial.obj `if test -f 'serial.c'; then $(CYGPATH_W) 'serial.c'; else $(CYGPATH_W) '$(srcdir)/serial.c'; fi`

diskless_exec-smp-imps.o: smp-imps.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-smp-imps.o -MD -MP -MF $(DEPDIR)/diskless_exec-smp-imps.Tpo -c -o diskless_exec-smp-imps.o `test -f 'smp-imps.c' || echo '$(srcdir)/'`smp-imps.c
#	$(am__mv) $(DEPDIR)/diskless_exec-smp-imps.Tpo $(DEPDIR)/diskless_exec-smp-imps.Po
#	source='smp-imps.c' object='diskless_exec-smp-imps.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-smp-imps.o `test -f 'smp-imps.c' || echo '$(srcdir)/'`smp-imps.c

diskless_exec-smp-imps.obj: smp-imps.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-smp-imps.obj -MD -MP -MF $(DEPDIR)/diskless_exec-smp-imps.Tpo -c -o diskless_exec-smp-imps.obj `if test -f 'smp-imps.c'; then $(CYGPATH_W) 'smp-imps.c'; else $(CYGPATH_W) '$(srcdir)/smp-imps.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-smp-imps.Tpo $(DEPDIR)/diskless_exec-smp-imps.Po
#	source='smp-imps.c' object='diskless_exec-smp-imps.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-smp-imps.obj `if test -f 'smp-imps.c'; then $(CYGPATH_W) 'smp-imps.c'; else $(CYGPATH_W) '$(srcdir)/smp-imps.c'; fi`

diskless_exec-sha256crypt.o: sha256crypt.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-sha256crypt.o -MD -MP -MF $(DEPDIR)/diskless_exec-sha256crypt.Tpo -c -o diskless_exec-sha256crypt.o `test -f 'sha256crypt.c' || echo '$(srcdir)/'`sha256crypt.c
#	$(am__mv) $(DEPDIR)/diskless_exec-sha256crypt.Tpo $(DEPDIR)/diskless_exec-sha256crypt.Po
#	source='sha256crypt.c' object='diskless_exec-sha256crypt.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-sha256crypt.o `test -f 'sha256crypt.c' || echo '$(srcdir)/'`sha256crypt.c

diskless_exec-sha256crypt.obj: sha256crypt.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-sha256crypt.obj -MD -MP -MF $(DEPDIR)/diskless_exec-sha256crypt.Tpo -c -o diskless_exec-sha256crypt.obj `if test -f 'sha256crypt.c'; then $(CYGPATH_W) 'sha256crypt.c'; else $(CYGPATH_W) '$(srcdir)/sha256crypt.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-sha256crypt.Tpo $(DEPDIR)/diskless_exec-sha256crypt.Po
#	source='sha256crypt.c' object='diskless_exec-sha256crypt.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-sha256crypt.obj `if test -f 'sha256crypt.c'; then $(CYGPATH_W) 'sha256crypt.c'; else $(CYGPATH_W) '$(srcdir)/sha256crypt.c'; fi`

diskless_exec-sha512crypt.o: sha512crypt.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-sha512crypt.o -MD -MP -MF $(DEPDIR)/diskless_exec-sha512crypt.Tpo -c -o diskless_exec-sha512crypt.o `test -f 'sha512crypt.c' || echo '$(srcdir)/'`sha512crypt.c
#	$(am__mv) $(DEPDIR)/diskless_exec-sha512crypt.Tpo $(DEPDIR)/diskless_exec-sha512crypt.Po
#	source='sha512crypt.c' object='diskless_exec-sha512crypt.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-sha512crypt.o `test -f 'sha512crypt.c' || echo '$(srcdir)/'`sha512crypt.c

diskless_exec-sha512crypt.obj: sha512crypt.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-sha512crypt.obj -MD -MP -MF $(DEPDIR)/diskless_exec-sha512crypt.Tpo -c -o diskless_exec-sha512crypt.obj `if test -f 'sha512crypt.c'; then $(CYGPATH_W) 'sha512crypt.c'; else $(CYGPATH_W) '$(srcdir)/sha512crypt.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-sha512crypt.Tpo $(DEPDIR)/diskless_exec-sha512crypt.Po
#	source='sha512crypt.c' object='diskless_exec-sha512crypt.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-sha512crypt.obj `if test -f 'sha512crypt.c'; then $(CYGPATH_W) 'sha512crypt.c'; else $(CYGPATH_W) '$(srcdir)/sha512crypt.c'; fi`

diskless_exec-stage2.o: stage2.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-stage2.o -MD -MP -MF $(DEPDIR)/diskless_exec-stage2.Tpo -c -o diskless_exec-stage2.o `test -f 'stage2.c' || echo '$(srcdir)/'`stage2.c
#	$(am__mv) $(DEPDIR)/diskless_exec-stage2.Tpo $(DEPDIR)/diskless_exec-stage2.Po
#	source='stage2.c' object='diskless_exec-stage2.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-stage2.o `test -f 'stage2.c' || echo '$(srcdir)/'`stage2.c

diskless_exec-stage2.obj: stage2.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-stage2.obj -MD -MP -MF $(DEPDIR)/diskless_exec-stage2.Tpo -c -o diskless_exec-stage2.obj `if test -f 'stage2.c'; then $(CYGPATH_W) 'stage2.c'; else $(CYGPATH_W) '$(srcdir)/stage2.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-stage2.Tpo $(DEPDIR)/diskless_exec-stage2.Po
#	source='stage2.c' object='diskless_exec-stage2.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-stage2.obj `if test -f 'stage2.c'; then $(CYGPATH_W) 'stage2.c'; else $(CYGPATH_W) '$(srcdir)/stage2.c'; fi`

diskless_exec-terminfo.o: terminfo.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-terminfo.o -MD -MP -MF $(DEPDIR)/diskless_exec-terminfo.Tpo -c -o diskless_exec-terminfo.o `test -f 'terminfo.c' || echo '$(srcdir)/'`terminfo.c
#	$(am__mv) $(DEPDIR)/diskless_exec-terminfo.Tpo $(DEPDIR)/diskless_exec-terminfo.Po
#	source='terminfo.c' object='diskless_exec-terminfo.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-terminfo.o `test -f 'terminfo.c' || echo '$(srcdir)/'`terminfo.c

diskless_exec-terminfo.obj: terminfo.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-terminfo.obj -MD -MP -MF $(DEPDIR)/diskless_exec-terminfo.Tpo -c -o diskless_exec-terminfo.obj `if test -f 'terminfo.c'; then $(CYGPATH_W) 'terminfo.c'; else $(CYGPATH_W) '$(srcdir)/terminfo.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-terminfo.Tpo $(DEPDIR)/diskless_exec-terminfo.Po
#	source='terminfo.c' object='diskless_exec-terminfo.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-terminfo.obj `if test -f 'terminfo.c'; then $(CYGPATH_W) 'terminfo.c'; else $(CYGPATH_W) '$(srcdir)/terminfo.c'; fi`

diskless_exec-tparm.o: tparm.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-tparm.o -MD -MP -MF $(DEPDIR)/diskless_exec-tparm.Tpo -c -o diskless_exec-tparm.o `test -f 'tparm.c' || echo '$(srcdir)/'`tparm.c
#	$(am__mv) $(DEPDIR)/diskless_exec-tparm.Tpo $(DEPDIR)/diskless_exec-tparm.Po
#	source='tparm.c' object='diskless_exec-tparm.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-tparm.o `test -f 'tparm.c' || echo '$(srcdir)/'`tparm.c

diskless_exec-tparm.obj: tparm.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-tparm.obj -MD -MP -MF $(DEPDIR)/diskless_exec-tparm.Tpo -c -o diskless_exec-tparm.obj `if test -f 'tparm.c'; then $(CYGPATH_W) 'tparm.c'; else $(CYGPATH_W) '$(srcdir)/tparm.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-tparm.Tpo $(DEPDIR)/diskless_exec-tparm.Po
#	source='tparm.c' object='diskless_exec-tparm.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-tparm.obj `if test -f 'tparm.c'; then $(CYGPATH_W) 'tparm.c'; else $(CYGPATH_W) '$(srcdir)/tparm.c'; fi`

diskless_exec-graphics.o: graphics.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-graphics.o -MD -MP -MF $(DEPDIR)/diskless_exec-graphics.Tpo -c -o diskless_exec-graphics.o `test -f 'graphics.c' || echo '$(srcdir)/'`graphics.c
#	$(am__mv) $(DEPDIR)/diskless_exec-graphics.Tpo $(DEPDIR)/diskless_exec-graphics.Po
#	source='graphics.c' object='diskless_exec-graphics.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-graphics.o `test -f 'graphics.c' || echo '$(srcdir)/'`graphics.c

diskless_exec-graphics.obj: graphics.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -MT diskless_exec-graphics.obj -MD -MP -MF $(DEPDIR)/diskless_exec-graphics.Tpo -c -o diskless_exec-graphics.obj `if test -f 'graphics.c'; then $(CYGPATH_W) 'graphics.c'; else $(CYGPATH_W) '$(srcdir)/graphics.c'; fi`
#	$(am__mv) $(DEPDIR)/diskless_exec-graphics.Tpo $(DEPDIR)/diskless_exec-graphics.Po
#	source='graphics.c' object='diskless_exec-graphics.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(diskless_exec_CFLAGS) $(CFLAGS) -c -o diskless_exec-graphics.obj `if test -f 'graphics.c'; then $(CYGPATH_W) 'graphics.c'; else $(CYGPATH_W) '$(srcdir)/graphics.c'; fi`

e2fs_stage1_5_exec-common.o: common.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT e2fs_stage1_5_exec-common.o -MD -MP -MF $(DEPDIR)/e2fs_stage1_5_exec-common.Tpo -c -o e2fs_stage1_5_exec-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c
#	$(am__mv) $(DEPDIR)/e2fs_stage1_5_exec-common.Tpo $(DEPDIR)/e2fs_stage1_5_exec-common.Po
#	source='common.c' object='e2fs_stage1_5_exec-common.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o e2fs_stage1_5_exec-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c

e2fs_stage1_5_exec-common.obj: common.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT e2fs_stage1_5_exec-common.obj -MD -MP -MF $(DEPDIR)/e2fs_stage1_5_exec-common.Tpo -c -o e2fs_stage1_5_exec-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`
#	$(am__mv) $(DEPDIR)/e2fs_stage1_5_exec-common.Tpo $(DEPDIR)/e2fs_stage1_5_exec-common.Po
#	source='common.c' object='e2fs_stage1_5_exec-common.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o e2fs_stage1_5_exec-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`

e2fs_stage1_5_exec-char_io.o: char_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT e2fs_stage1_5_exec-char_io.o -MD -MP -MF $(DEPDIR)/e2fs_stage1_5_exec-char_io.Tpo -c -o e2fs_stage1_5_exec-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c
#	$(am__mv) $(DEPDIR)/e2fs_stage1_5_exec-char_io.Tpo $(DEPDIR)/e2fs_stage1_5_exec-char_io.Po
#	source='char_io.c' object='e2fs_stage1_5_exec-char_io.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o e2fs_stage1_5_exec-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c

e2fs_stage1_5_exec-char_io.obj: char_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT e2fs_stage1_5_exec-char_io.obj -MD -MP -MF $(DEPDIR)/e2fs_stage1_5_exec-char_io.Tpo -c -o e2fs_stage1_5_exec-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`
#	$(am__mv) $(DEPDIR)/e2fs_stage1_5_exec-char_io.Tpo $(DEPDIR)/e2fs_stage1_5_exec-char_io.Po
#	source='char_io.c' object='e2fs_stage1_5_exec-char_io.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o e2fs_stage1_5_exec-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`

e2fs_stage1_5_exec-disk_io.o: disk_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT e2fs_stage1_5_exec-disk_io.o -MD -MP -MF $(DEPDIR)/e2fs_stage1_5_exec-disk_io.Tpo -c -o e2fs_stage1_5_exec-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c
#	$(am__mv) $(DEPDIR)/e2fs_stage1_5_exec-disk_io.Tpo $(DEPDIR)/e2fs_stage1_5_exec-disk_io.Po
#	source='disk_io.c' object='e2fs_stage1_5_exec-disk_io.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o e2fs_stage1_5_exec-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c

e2fs_stage1_5_exec-disk_io.obj: disk_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT e2fs_stage1_5_exec-disk_io.obj -MD -MP -MF $(DEPDIR)/e2fs_stage1_5_exec-disk_io.Tpo -c -o e2fs_stage1_5_exec-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`
#	$(am__mv) $(DEPDIR)/e2fs_stage1_5_exec-disk_io.Tpo $(DEPDIR)/e2fs_stage1_5_exec-disk_io.Po
#	source='disk_io.c' object='e2fs_stage1_5_exec-disk_io.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o e2fs_stage1_5_exec-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`

e2fs_stage1_5_exec-stage1_5.o: stage1_5.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT e2fs_stage1_5_exec-stage1_5.o -MD -MP -MF $(DEPDIR)/e2fs_stage1_5_exec-stage1_5.Tpo -c -o e2fs_stage1_5_exec-stage1_5.o `test -f 'stage1_5.c' || echo '$(srcdir)/'`stage1_5.c
#	$(am__mv) $(DEPDIR)/e2fs_stage1_5_exec-stage1_5.Tpo $(DEPDIR)/e2fs_stage1_5_exec-stage1_5.Po
#	source='stage1_5.c' object='e2fs_stage1_5_exec-stage1_5.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o e2fs_stage1_5_exec-stage1_5.o `test -f 'stage1_5.c' || echo '$(srcdir)/'`stage1_5.c

e2fs_stage1_5_exec-stage1_5.obj: stage1_5.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT e2fs_stage1_5_exec-stage1_5.obj -MD -MP -MF $(DEPDIR)/e2fs_stage1_5_exec-stage1_5.Tpo -c -o e2fs_stage1_5_exec-stage1_5.obj `if test -f 'stage1_5.c'; then $(CYGPATH_W) 'stage1_5.c'; else $(CYGPATH_W) '$(srcdir)/stage1_5.c'; fi`
#	$(am__mv) $(DEPDIR)/e2fs_stage1_5_exec-stage1_5.Tpo $(DEPDIR)/e2fs_stage1_5_exec-stage1_5.Po
#	source='stage1_5.c' object='e2fs_stage1_5_exec-stage1_5.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o e2fs_stage1_5_exec-stage1_5.obj `if test -f 'stage1_5.c'; then $(CYGPATH_W) 'stage1_5.c'; else $(CYGPATH_W) '$(srcdir)/stage1_5.c'; fi`

e2fs_stage1_5_exec-fsys_ext2fs.o: fsys_ext2fs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT e2fs_stage1_5_exec-fsys_ext2fs.o -MD -MP -MF $(DEPDIR)/e2fs_stage1_5_exec-fsys_ext2fs.Tpo -c -o e2fs_stage1_5_exec-fsys_ext2fs.o `test -f 'fsys_ext2fs.c' || echo '$(srcdir)/'`fsys_ext2fs.c
#	$(am__mv) $(DEPDIR)/e2fs_stage1_5_exec-fsys_ext2fs.Tpo $(DEPDIR)/e2fs_stage1_5_exec-fsys_ext2fs.Po
#	source='fsys_ext2fs.c' object='e2fs_stage1_5_exec-fsys_ext2fs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o e2fs_stage1_5_exec-fsys_ext2fs.o `test -f 'fsys_ext2fs.c' || echo '$(srcdir)/'`fsys_ext2fs.c

e2fs_stage1_5_exec-fsys_ext2fs.obj: fsys_ext2fs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT e2fs_stage1_5_exec-fsys_ext2fs.obj -MD -MP -MF $(DEPDIR)/e2fs_stage1_5_exec-fsys_ext2fs.Tpo -c -o e2fs_stage1_5_exec-fsys_ext2fs.obj `if test -f 'fsys_ext2fs.c'; then $(CYGPATH_W) 'fsys_ext2fs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ext2fs.c'; fi`
#	$(am__mv) $(DEPDIR)/e2fs_stage1_5_exec-fsys_ext2fs.Tpo $(DEPDIR)/e2fs_stage1_5_exec-fsys_ext2fs.Po
#	source='fsys_ext2fs.c' object='e2fs_stage1_5_exec-fsys_ext2fs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o e2fs_stage1_5_exec-fsys_ext2fs.obj `if test -f 'fsys_ext2fs.c'; then $(CYGPATH_W) 'fsys_ext2fs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ext2fs.c'; fi`

e2fs_stage1_5_exec-bios.o: bios.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT e2fs_stage1_5_exec-bios.o -MD -MP -MF $(DEPDIR)/e2fs_stage1_5_exec-bios.Tpo -c -o e2fs_stage1_5_exec-bios.o `test -f 'bios.c' || echo '$(srcdir)/'`bios.c
#	$(am__mv) $(DEPDIR)/e2fs_stage1_5_exec-bios.Tpo $(DEPDIR)/e2fs_stage1_5_exec-bios.Po
#	source='bios.c' object='e2fs_stage1_5_exec-bios.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o e2fs_stage1_5_exec-bios.o `test -f 'bios.c' || echo '$(srcdir)/'`bios.c

e2fs_stage1_5_exec-bios.obj: bios.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT e2fs_stage1_5_exec-bios.obj -MD -MP -MF $(DEPDIR)/e2fs_stage1_5_exec-bios.Tpo -c -o e2fs_stage1_5_exec-bios.obj `if test -f 'bios.c'; then $(CYGPATH_W) 'bios.c'; else $(CYGPATH_W) '$(srcdir)/bios.c'; fi`
#	$(am__mv) $(DEPDIR)/e2fs_stage1_5_exec-bios.Tpo $(DEPDIR)/e2fs_stage1_5_exec-bios.Po
#	source='bios.c' object='e2fs_stage1_5_exec-bios.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(e2fs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o e2fs_stage1_5_exec-bios.obj `if test -f 'bios.c'; then $(CYGPATH_W) 'bios.c'; else $(CYGPATH_W) '$(srcdir)/bios.c'; fi`

fat_stage1_5_exec-common.o: common.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CFLAGS) $(CFLAGS) -MT fat_stage1_5_exec-common.o -MD -MP -MF $(DEPDIR)/fat_stage1_5_exec-common.Tpo -c -o fat_stage1_5_exec-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c
#	$(am__mv) $(DEPDIR)/fat_stage1_5_exec-common.Tpo $(DEPDIR)/fat_stage1_5_exec-common.Po
#	source='common.c' object='fat_stage1_5_exec-common.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o fat_stage1_5_exec-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c

fat_stage1_5_exec-common.obj: common.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CFLAGS) $(CFLAGS) -MT fat_stage1_5_exec-common.obj -MD -MP -MF $(DEPDIR)/fat_stage1_5_exec-common.Tpo -c -o fat_stage1_5_exec-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`
#	$(am__mv) $(DEPDIR)/fat_stage1_5_exec-common.Tpo $(DEPDIR)/fat_stage1_5_exec-common.Po
#	source='common.c' object='fat_stage1_5_exec-common.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o fat_stage1_5_exec-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`

fat_stage1_5_exec-char_io.o: char_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CFLAGS) $(CFLAGS) -MT fat_stage1_5_exec-char_io.o -MD -MP -MF $(DEPDIR)/fat_stage1_5_exec-char_io.Tpo -c -o fat_stage1_5_exec-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c
#	$(am__mv) $(DEPDIR)/fat_stage1_5_exec-char_io.Tpo $(DEPDIR)/fat_stage1_5_exec-char_io.Po
#	source='char_io.c' object='fat_stage1_5_exec-char_io.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o fat_stage1_5_exec-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c

fat_stage1_5_exec-char_io.obj: char_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CFLAGS) $(CFLAGS) -MT fat_stage1_5_exec-char_io.obj -MD -MP -MF $(DEPDIR)/fat_stage1_5_exec-char_io.Tpo -c -o fat_stage1_5_exec-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`
#	$(am__mv) $(DEPDIR)/fat_stage1_5_exec-char_io.Tpo $(DEPDIR)/fat_stage1_5_exec-char_io.Po
#	source='char_io.c' object='fat_stage1_5_exec-char_io.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o fat_stage1_5_exec-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`

fat_stage1_5_exec-disk_io.o: disk_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CFLAGS) $(CFLAGS) -MT fat_stage1_5_exec-disk_io.o -MD -MP -MF $(DEPDIR)/fat_stage1_5_exec-disk_io.Tpo -c -o fat_stage1_5_exec-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c
#	$(am__mv) $(DEPDIR)/fat_stage1_5_exec-disk_io.Tpo $(DEPDIR)/fat_stage1_5_exec-disk_io.Po
#	source='disk_io.c' object='fat_stage1_5_exec-disk_io.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o fat_stage1_5_exec-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c

fat_stage1_5_exec-disk_io.obj: disk_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CFLAGS) $(CFLAGS) -MT fat_stage1_5_exec-disk_io.obj -MD -MP -MF $(DEPDIR)/fat_stage1_5_exec-disk_io.Tpo -c -o fat_stage1_5_exec-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`
#	$(am__mv) $(DEPDIR)/fat_stage1_5_exec-disk_io.Tpo $(DEPDIR)/fat_stage1_5_exec-disk_io.Po
#	source='disk_io.c' object='fat_stage1_5_exec-disk_io.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o fat_stage1_5_exec-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`

fat_stage1_5_exec-stage1_5.o: stage1_5.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CFLAGS) $(CFLAGS) -MT fat_stage1_5_exec-stage1_5.o -MD -MP -MF $(DEPDIR)/fat_stage1_5_exec-stage1_5.Tpo -c -o fat_stage1_5_exec-stage1_5.o `test -f 'stage1_5.c' || echo '$(srcdir)/'`stage1_5.c
#	$(am__mv) $(DEPDIR)/fat_stage1_5_exec-stage1_5.Tpo $(DEPDIR)/fat_stage1_5_exec-stage1_5.Po
#	source='stage1_5.c' object='fat_stage1_5_exec-stage1_5.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o fat_stage1_5_exec-stage1_5.o `test -f 'stage1_5.c' || echo '$(srcdir)/'`stage1_5.c

fat_stage1_5_exec-stage1_5.obj: stage1_5.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CFLAGS) $(CFLAGS) -MT fat_stage1_5_exec-stage1_5.obj -MD -MP -MF $(DEPDIR)/fat_stage1_5_exec-stage1_5.Tpo -c -o fat_stage1_5_exec-stage1_5.obj `if test -f 'stage1_5.c'; then $(CYGPATH_W) 'stage1_5.c'; else $(CYGPATH_W) '$(srcdir)/stage1_5.c'; fi`
#	$(am__mv) $(DEPDIR)/fat_stage1_5_exec-stage1_5.Tpo $(DEPDIR)/fat_stage1_5_exec-stage1_5.Po
#	source='stage1_5.c' object='fat_stage1_5_exec-stage1_5.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o fat_stage1_5_exec-stage1_5.obj `if test -f 'stage1_5.c'; then $(CYGPATH_W) 'stage1_5.c'; else $(CYGPATH_W) '$(srcdir)/stage1_5.c'; fi`

fat_stage1_5_exec-fsys_fat.o: fsys_fat.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CFLAGS) $(CFLAGS) -MT fat_stage1_5_exec-fsys_fat.o -MD -MP -MF $(DEPDIR)/fat_stage1_5_exec-fsys_fat.Tpo -c -o fat_stage1_5_exec-fsys_fat.o `test -f 'fsys_fat.c' || echo '$(srcdir)/'`fsys_fat.c
#	$(am__mv) $(DEPDIR)/fat_stage1_5_exec-fsys_fat.Tpo $(DEPDIR)/fat_stage1_5_exec-fsys_fat.Po
#	source='fsys_fat.c' object='fat_stage1_5_exec-fsys_fat.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o fat_stage1_5_exec-fsys_fat.o `test -f 'fsys_fat.c' || echo '$(srcdir)/'`fsys_fat.c

fat_stage1_5_exec-fsys_fat.obj: fsys_fat.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CFLAGS) $(CFLAGS) -MT fat_stage1_5_exec-fsys_fat.obj -MD -MP -MF $(DEPDIR)/fat_stage1_5_exec-fsys_fat.Tpo -c -o fat_stage1_5_exec-fsys_fat.obj `if test -f 'fsys_fat.c'; then $(CYGPATH_W) 'fsys_fat.c'; else $(CYGPATH_W) '$(srcdir)/fsys_fat.c'; fi`
#	$(am__mv) $(DEPDIR)/fat_stage1_5_exec-fsys_fat.Tpo $(DEPDIR)/fat_stage1_5_exec-fsys_fat.Po
#	source='fsys_fat.c' object='fat_stage1_5_exec-fsys_fat.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o fat_stage1_5_exec-fsys_fat.obj `if test -f 'fsys_fat.c'; then $(CYGPATH_W) 'fsys_fat.c'; else $(CYGPATH_W) '$(srcdir)/fsys_fat.c'; fi`

fat_stage1_5_exec-bios.o: bios.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CFLAGS) $(CFLAGS) -MT fat_stage1_5_exec-bios.o -MD -MP -MF $(DEPDIR)/fat_stage1_5_exec-bios.Tpo -c -o fat_stage1_5_exec-bios.o `test -f 'bios.c' || echo '$(srcdir)/'`bios.c
#	$(am__mv) $(DEPDIR)/fat_stage1_5_exec-bios.Tpo $(DEPDIR)/fat_stage1_5_exec-bios.Po
#	source='bios.c' object='fat_stage1_5_exec-bios.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o fat_stage1_5_exec-bios.o `test -f 'bios.c' || echo '$(srcdir)/'`bios.c

fat_stage1_5_exec-bios.obj: bios.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CFLAGS) $(CFLAGS) -MT fat_stage1_5_exec-bios.obj -MD -MP -MF $(DEPDIR)/fat_stage1_5_exec-bios.Tpo -c -o fat_stage1_5_exec-bios.obj `if test -f 'bios.c'; then $(CYGPATH_W) 'bios.c'; else $(CYGPATH_W) '$(srcdir)/bios.c'; fi`
#	$(am__mv) $(DEPDIR)/fat_stage1_5_exec-bios.Tpo $(DEPDIR)/fat_stage1_5_exec-bios.Po
#	source='bios.c' object='fat_stage1_5_exec-bios.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fat_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o fat_stage1_5_exec-bios.obj `if test -f 'bios.c'; then $(CYGPATH_W) 'bios.c'; else $(CYGPATH_W) '$(srcdir)/bios.c'; fi`

ffs_stage1_5_exec-common.o: common.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT ffs_stage1_5_exec-common.o -MD -MP -MF $(DEPDIR)/ffs_stage1_5_exec-common.Tpo -c -o ffs_stage1_5_exec-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c
#	$(am__mv) $(DEPDIR)/ffs_stage1_5_exec-common.Tpo $(DEPDIR)/ffs_stage1_5_exec-common.Po
#	source='common.c' object='ffs_stage1_5_exec-common.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o ffs_stage1_5_exec-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c

ffs_stage1_5_exec-common.obj: common.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT ffs_stage1_5_exec-common.obj -MD -MP -MF $(DEPDIR)/ffs_stage1_5_exec-common.Tpo -c -o ffs_stage1_5_exec-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`
#	$(am__mv) $(DEPDIR)/ffs_stage1_5_exec-common.Tpo $(DEPDIR)/ffs_stage1_5_exec-common.Po
#	source='common.c' object='ffs_stage1_5_exec-common.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o ffs_stage1_5_exec-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`

ffs_stage1_5_exec-char_io.o: char_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT ffs_stage1_5_exec-char_io.o -MD -MP -MF $(DEPDIR)/ffs_stage1_5_exec-char_io.Tpo -c -o ffs_stage1_5_exec-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c
#	$(am__mv) $(DEPDIR)/ffs_stage1_5_exec-char_io.Tpo $(DEPDIR)/ffs_stage1_5_exec-char_io.Po
#	source='char_io.c' object='ffs_stage1_5_exec-char_io.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o ffs_stage1_5_exec-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c

ffs_stage1_5_exec-char_io.obj: char_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT ffs_stage1_5_exec-char_io.obj -MD -MP -MF $(DEPDIR)/ffs_stage1_5_exec-char_io.Tpo -c -o ffs_stage1_5_exec-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`
#	$(am__mv) $(DEPDIR)/ffs_stage1_5_exec-char_io.Tpo $(DEPDIR)/ffs_stage1_5_exec-char_io.Po
#	source='char_io.c' object='ffs_stage1_5_exec-char_io.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o ffs_stage1_5_exec-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`

ffs_stage1_5_exec-disk_io.o: disk_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT ffs_stage1_5_exec-disk_io.o -MD -MP -MF $(DEPDIR)/ffs_stage1_5_exec-disk_io.Tpo -c -o ffs_stage1_5_exec-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c
#	$(am__mv) $(DEPDIR)/ffs_stage1_5_exec-disk_io.Tpo $(DEPDIR)/ffs_stage1_5_exec-disk_io.Po
#	source='disk_io.c' object='ffs_stage1_5_exec-disk_io.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o ffs_stage1_5_exec-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c

ffs_stage1_5_exec-disk_io.obj: disk_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT ffs_stage1_5_exec-disk_io.obj -MD -MP -MF $(DEPDIR)/ffs_stage1_5_exec-disk_io.Tpo -c -o ffs_stage1_5_exec-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`
#	$(am__mv) $(DEPDIR)/ffs_stage1_5_exec-disk_io.Tpo $(DEPDIR)/ffs_stage1_5_exec-disk_io.Po
#	source='disk_io.c' object='ffs_stage1_5_exec-disk_io.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o ffs_stage1_5_exec-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`

ffs_stage1_5_exec-stage1_5.o: stage1_5.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT ffs_stage1_5_exec-stage1_5.o -MD -MP -MF $(DEPDIR)/ffs_stage1_5_exec-stage1_5.Tpo -c -o ffs_stage1_5_exec-stage1_5.o `test -f 'stage1_5.c' || echo '$(srcdir)/'`stage1_5.c
#	$(am__mv) $(DEPDIR)/ffs_stage1_5_exec-stage1_5.Tpo $(DEPDIR)/ffs_stage1_5_exec-stage1_5.Po
#	source='stage1_5.c' object='ffs_stage1_5_exec-stage1_5.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o ffs_stage1_5_exec-stage1_5.o `test -f 'stage1_5.c' || echo '$(srcdir)/'`stage1_5.c

ffs_stage1_5_exec-stage1_5.obj: stage1_5.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT ffs_stage1_5_exec-stage1_5.obj -MD -MP -MF $(DEPDIR)/ffs_stage1_5_exec-stage1_5.Tpo -c -o ffs_stage1_5_exec-stage1_5.obj `if test -f 'stage1_5.c'; then $(CYGPATH_W) 'stage1_5.c'; else $(CYGPATH_W) '$(srcdir)/stage1_5.c'; fi`
#	$(am__mv) $(DEPDIR)/ffs_stage1_5_exec-stage1_5.Tpo $(DEPDIR)/ffs_stage1_5_exec-stage1_5.Po
#	source='stage1_5.c' object='ffs_stage1_5_exec-stage1_5.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o ffs_stage1_5_exec-stage1_5.obj `if test -f 'stage1_5.c'; then $(CYGPATH_W) 'stage1_5.c'; else $(CYGPATH_W) '$(srcdir)/stage1_5.c'; fi`

ffs_stage1_5_exec-fsys_ffs.o: fsys_ffs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT ffs_stage1_5_exec-fsys_ffs.o -MD -MP -MF $(DEPDIR)/ffs_stage1_5_exec-fsys_ffs.Tpo -c -o ffs_stage1_5_exec-fsys_ffs.o `test -f 'fsys_ffs.c' || echo '$(srcdir)/'`fsys_ffs.c
#	$(am__mv) $(DEPDIR)/ffs_stage1_5_exec-fsys_ffs.Tpo $(DEPDIR)/ffs_stage1_5_exec-fsys_ffs.Po
#	source='fsys_ffs.c' object='ffs_stage1_5_exec-fsys_ffs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o ffs_stage1_5_exec-fsys_ffs.o `test -f 'fsys_ffs.c' || echo '$(srcdir)/'`fsys_ffs.c

ffs_stage1_5_exec-fsys_ffs.obj: fsys_ffs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT ffs_stage1_5_exec-fsys_ffs.obj -MD -MP -MF $(DEPDIR)/ffs_stage1_5_exec-fsys_ffs.Tpo -c -o ffs_stage1_5_exec-fsys_ffs.obj `if test -f 'fsys_ffs.c'; then $(CYGPATH_W) 'fsys_ffs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ffs.c'; fi`
#	$(am__mv) $(DEPDIR)/ffs_stage1_5_exec-fsys_ffs.Tpo $(DEPDIR)/ffs_stage1_5_exec-fsys_ffs.Po
#	source='fsys_ffs.c' object='ffs_stage1_5_exec-fsys_ffs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o ffs_stage1_5_exec-fsys_ffs.obj `if test -f 'fsys_ffs.c'; then $(CYGPATH_W) 'fsys_ffs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ffs.c'; fi`

ffs_stage1_5_exec-bios.o: bios.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT ffs_stage1_5_exec-bios.o -MD -MP -MF $(DEPDIR)/ffs_stage1_5_exec-bios.Tpo -c -o ffs_stage1_5_exec-bios.o `test -f 'bios.c' || echo '$(srcdir)/'`bios.c
#	$(am__mv) $(DEPDIR)/ffs_stage1_5_exec-bios.Tpo $(DEPDIR)/ffs_stage1_5_exec-bios.Po
#	source='bios.c' object='ffs_stage1_5_exec-bios.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o ffs_stage1_5_exec-bios.o `test -f 'bios.c' || echo '$(srcdir)/'`bios.c

ffs_stage1_5_exec-bios.obj: bios.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT ffs_stage1_5_exec-bios.obj -MD -MP -MF $(DEPDIR)/ffs_stage1_5_exec-bios.Tpo -c -o ffs_stage1_5_exec-bios.obj `if test -f 'bios.c'; then $(CYGPATH_W) 'bios.c'; else $(CYGPATH_W) '$(srcdir)/bios.c'; fi`
#	$(am__mv) $(DEPDIR)/ffs_stage1_5_exec-bios.Tpo $(DEPDIR)/ffs_stage1_5_exec-bios.Po
#	source='bios.c' object='ffs_stage1_5_exec-bios.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ffs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o ffs_stage1_5_exec-bios.obj `if test -f 'bios.c'; then $(CYGPATH_W) 'bios.c'; else $(CYGPATH_W) '$(srcdir)/bios.c'; fi`

iso9660_stage1_5_exec-common.o: common.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CFLAGS) $(CFLAGS) -MT iso9660_stage1_5_exec-common.o -MD -MP -MF $(DEPDIR)/iso9660_stage1_5_exec-common.Tpo -c -o iso9660_stage1_5_exec-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c
#	$(am__mv) $(DEPDIR)/iso9660_stage1_5_exec-common.Tpo $(DEPDIR)/iso9660_stage1_5_exec-common.Po
#	source='common.c' object='iso9660_stage1_5_exec-common.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o iso9660_stage1_5_exec-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c

iso9660_stage1_5_exec-common.obj: common.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CFLAGS) $(CFLAGS) -MT iso9660_stage1_5_exec-common.obj -MD -MP -MF $(DEPDIR)/iso9660_stage1_5_exec-common.Tpo -c -o iso9660_stage1_5_exec-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`
#	$(am__mv) $(DEPDIR)/iso9660_stage1_5_exec-common.Tpo $(DEPDIR)/iso9660_stage1_5_exec-common.Po
#	source='common.c' object='iso9660_stage1_5_exec-common.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o iso9660_stage1_5_exec-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`

iso9660_stage1_5_exec-char_io.o: char_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CFLAGS) $(CFLAGS) -MT iso9660_stage1_5_exec-char_io.o -MD -MP -MF $(DEPDIR)/iso9660_stage1_5_exec-char_io.Tpo -c -o iso9660_stage1_5_exec-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c
#	$(am__mv) $(DEPDIR)/iso9660_stage1_5_exec-char_io.Tpo $(DEPDIR)/iso9660_stage1_5_exec-char_io.Po
#	source='char_io.c' object='iso9660_stage1_5_exec-char_io.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o iso9660_stage1_5_exec-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c

iso9660_stage1_5_exec-char_io.obj: char_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CFLAGS) $(CFLAGS) -MT iso9660_stage1_5_exec-char_io.obj -MD -MP -MF $(DEPDIR)/iso9660_stage1_5_exec-char_io.Tpo -c -o iso9660_stage1_5_exec-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`
#	$(am__mv) $(DEPDIR)/iso9660_stage1_5_exec-char_io.Tpo $(DEPDIR)/iso9660_stage1_5_exec-char_io.Po
#	source='char_io.c' object='iso9660_stage1_5_exec-char_io.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o iso9660_stage1_5_exec-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`

iso9660_stage1_5_exec-disk_io.o: disk_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CFLAGS) $(CFLAGS) -MT iso9660_stage1_5_exec-disk_io.o -MD -MP -MF $(DEPDIR)/iso9660_stage1_5_exec-disk_io.Tpo -c -o iso9660_stage1_5_exec-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c
#	$(am__mv) $(DEPDIR)/iso9660_stage1_5_exec-disk_io.Tpo $(DEPDIR)/iso9660_stage1_5_exec-disk_io.Po
#	source='disk_io.c' object='iso9660_stage1_5_exec-disk_io.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o iso9660_stage1_5_exec-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c

iso9660_stage1_5_exec-disk_io.obj: disk_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CFLAGS) $(CFLAGS) -MT iso9660_stage1_5_exec-disk_io.obj -MD -MP -MF $(DEPDIR)/iso9660_stage1_5_exec-disk_io.Tpo -c -o iso9660_stage1_5_exec-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`
#	$(am__mv) $(DEPDIR)/iso9660_stage1_5_exec-disk_io.Tpo $(DEPDIR)/iso9660_stage1_5_exec-disk_io.Po
#	source='disk_io.c' object='iso9660_stage1_5_exec-disk_io.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o iso9660_stage1_5_exec-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`

iso9660_stage1_5_exec-stage1_5.o: stage1_5.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CFLAGS) $(CFLAGS) -MT iso9660_stage1_5_exec-stage1_5.o -MD -MP -MF $(DEPDIR)/iso9660_stage1_5_exec-stage1_5.Tpo -c -o iso9660_stage1_5_exec-stage1_5.o `test -f 'stage1_5.c' || echo '$(srcdir)/'`stage1_5.c
#	$(am__mv) $(DEPDIR)/iso9660_stage1_5_exec-stage1_5.Tpo $(DEPDIR)/iso9660_stage1_5_exec-stage1_5.Po
#	source='stage1_5.c' object='iso9660_stage1_5_exec-stage1_5.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o iso9660_stage1_5_exec-stage1_5.o `test -f 'stage1_5.c' || echo '$(srcdir)/'`stage1_5.c

iso9660_stage1_5_exec-stage1_5.obj: stage1_5.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CFLAGS) $(CFLAGS) -MT iso9660_stage1_5_exec-stage1_5.obj -MD -MP -MF $(DEPDIR)/iso9660_stage1_5_exec-stage1_5.Tpo -c -o iso9660_stage1_5_exec-stage1_5.obj `if test -f 'stage1_5.c'; then $(CYGPATH_W) 'stage1_5.c'; else $(CYGPATH_W) '$(srcdir)/stage1_5.c'; fi`
#	$(am__mv) $(DEPDIR)/iso9660_stage1_5_exec-stage1_5.Tpo $(DEPDIR)/iso9660_stage1_5_exec-stage1_5.Po
#	source='stage1_5.c' object='iso9660_stage1_5_exec-stage1_5.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o iso9660_stage1_5_exec-stage1_5.obj `if test -f 'stage1_5.c'; then $(CYGPATH_W) 'stage1_5.c'; else $(CYGPATH_W) '$(srcdir)/stage1_5.c'; fi`

iso9660_stage1_5_exec-fsys_iso9660.o: fsys_iso9660.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CFLAGS) $(CFLAGS) -MT iso9660_stage1_5_exec-fsys_iso9660.o -MD -MP -MF $(DEPDIR)/iso9660_stage1_5_exec-fsys_iso9660.Tpo -c -o iso9660_stage1_5_exec-fsys_iso9660.o `test -f 'fsys_iso9660.c' || echo '$(srcdir)/'`fsys_iso9660.c
#	$(am__mv) $(DEPDIR)/iso9660_stage1_5_exec-fsys_iso9660.Tpo $(DEPDIR)/iso9660_stage1_5_exec-fsys_iso9660.Po
#	source='fsys_iso9660.c' object='iso9660_stage1_5_exec-fsys_iso9660.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o iso9660_stage1_5_exec-fsys_iso9660.o `test -f 'fsys_iso9660.c' || echo '$(srcdir)/'`fsys_iso9660.c

iso9660_stage1_5_exec-fsys_iso9660.obj: fsys_iso9660.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CFLAGS) $(CFLAGS) -MT iso9660_stage1_5_exec-fsys_iso9660.obj -MD -MP -MF $(DEPDIR)/iso9660_stage1_5_exec-fsys_iso9660.Tpo -c -o iso9660_stage1_5_exec-fsys_iso9660.obj `if test -f 'fsys_iso9660.c'; then $(CYGPATH_W) 'fsys_iso9660.c'; else $(CYGPATH_W) '$(srcdir)/fsys_iso9660.c'; fi`
#	$(am__mv) $(DEPDIR)/iso9660_stage1_5_exec-fsys_iso9660.Tpo $(DEPDIR)/iso9660_stage1_5_exec-fsys_iso9660.Po
#	source='fsys_iso9660.c' object='iso9660_stage1_5_exec-fsys_iso9660.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o iso9660_stage1_5_exec-fsys_iso9660.obj `if test -f 'fsys_iso9660.c'; then $(CYGPATH_W) 'fsys_iso9660.c'; else $(CYGPATH_W) '$(srcdir)/fsys_iso9660.c'; fi`

iso9660_stage1_5_exec-bios.o: bios.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CFLAGS) $(CFLAGS) -MT iso9660_stage1_5_exec-bios.o -MD -MP -MF $(DEPDIR)/iso9660_stage1_5_exec-bios.Tpo -c -o iso9660_stage1_5_exec-bios.o `test -f 'bios.c' || echo '$(srcdir)/'`bios.c
#	$(am__mv) $(DEPDIR)/iso9660_stage1_5_exec-bios.Tpo $(DEPDIR)/iso9660_stage1_5_exec-bios.Po
#	source='bios.c' object='iso9660_stage1_5_exec-bios.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o iso9660_stage1_5_exec-bios.o `test -f 'bios.c' || echo '$(srcdir)/'`bios.c

iso9660_stage1_5_exec-bios.obj: bios.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CFLAGS) $(CFLAGS) -MT iso9660_stage1_5_exec-bios.obj -MD -MP -MF $(DEPDIR)/iso9660_stage1_5_exec-bios.Tpo -c -o iso9660_stage1_5_exec-bios.obj `if test -f 'bios.c'; then $(CYGPATH_W) 'bios.c'; else $(CYGPATH_W) '$(srcdir)/bios.c'; fi`
#	$(am__mv) $(DEPDIR)/iso9660_stage1_5_exec-bios.Tpo $(DEPDIR)/iso9660_stage1_5_exec-bios.Po
#	source='bios.c' object='iso9660_stage1_5_exec-bios.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso9660_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o iso9660_stage1_5_exec-bios.obj `if test -f 'bios.c'; then $(CYGPATH_W) 'bios.c'; else $(CYGPATH_W) '$(srcdir)/bios.c'; fi`

jfs_stage1_5_exec-common.o: common.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT jfs_stage1_5_exec-common.o -MD -MP -MF $(DEPDIR)/jfs_stage1_5_exec-common.Tpo -c -o jfs_stage1_5_exec-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c
#	$(am__mv) $(DEPDIR)/jfs_stage1_5_exec-common.Tpo $(DEPDIR)/jfs_stage1_5_exec-common.Po
#	source='common.c' object='jfs_stage1_5_exec-common.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o jfs_stage1_5_exec-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c

jfs_stage1_5_exec-common.obj: common.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT jfs_stage1_5_exec-common.obj -MD -MP -MF $(DEPDIR)/jfs_stage1_5_exec-common.Tpo -c -o jfs_stage1_5_exec-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`
#	$(am__mv) $(DEPDIR)/jfs_stage1_5_exec-common.Tpo $(DEPDIR)/jfs_stage1_5_exec-common.Po
#	source='common.c' object='jfs_stage1_5_exec-common.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o jfs_stage1_5_exec-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`

jfs_stage1_5_exec-char_io.o: char_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT jfs_stage1_5_exec-char_io.o -MD -MP -MF $(DEPDIR)/jfs_stage1_5_exec-char_io.Tpo -c -o jfs_stage1_5_exec-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c
#	$(am__mv) $(DEPDIR)/jfs_stage1_5_exec-char_io.Tpo $(DEPDIR)/jfs_stage1_5_exec-char_io.Po
#	source='char_io.c' object='jfs_stage1_5_exec-char_io.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o jfs_stage1_5_exec-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c

jfs_stage1_5_exec-char_io.obj: char_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT jfs_stage1_5_exec-char_io.obj -MD -MP -MF $(DEPDIR)/jfs_stage1_5_exec-char_io.Tpo -c -o jfs_stage1_5_exec-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`
#	$(am__mv) $(DEPDIR)/jfs_stage1_5_exec-char_io.Tpo $(DEPDIR)/jfs_stage1_5_exec-char_io.Po
#	source='char_io.c' object='jfs_stage1_5_exec-char_io.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o jfs_stage1_5_exec-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`

jfs_stage1_5_exec-disk_io.o: disk_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT jfs_stage1_5_exec-disk_io.o -MD -MP -MF $(DEPDIR)/jfs_stage1_5_exec-disk_io.Tpo -c -o jfs_stage1_5_exec-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c
#	$(am__mv) $(DEPDIR)/jfs_stage1_5_exec-disk_io.Tpo $(DEPDIR)/jfs_stage1_5_exec-disk_io.Po
#	source='disk_io.c' object='jfs_stage1_5_exec-disk_io.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o jfs_stage1_5_exec-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c

jfs_stage1_5_exec-disk_io.obj: disk_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT jfs_stage1_5_exec-disk_io.obj -MD -MP -MF $(DEPDIR)/jfs_stage1_5_exec-disk_io.Tpo -c -o jfs_stage1_5_exec-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`
#	$(am__mv) $(DEPDIR)/jfs_stage1_5_exec-disk_io.Tpo $(DEPDIR)/jfs_stage1_5_exec-disk_io.Po
#	source='disk_io.c' object='jfs_stage1_5_exec-disk_io.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o jfs_stage1_5_exec-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`

jfs_stage1_5_exec-stage1_5.o: stage1_5.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT jfs_stage1_5_exec-stage1_5.o -MD -MP -MF $(DEPDIR)/jfs_stage1_5_exec-stage1_5.Tpo -c -o jfs_stage1_5_exec-stage1_5.o `test -f 'stage1_5.c' || echo '$(srcdir)/'`stage1_5.c
#	$(am__mv) $(DEPDIR)/jfs_stage1_5_exec-stage1_5.Tpo $(DEPDIR)/jfs_stage1_5_exec-stage1_5.Po
#	source='stage1_5.c' object='jfs_stage1_5_exec-stage1_5.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o jfs_stage1_5_exec-stage1_5.o `test -f 'stage1_5.c' || echo '$(srcdir)/'`stage1_5.c

jfs_stage1_5_exec-stage1_5.obj: stage1_5.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT jfs_stage1_5_exec-stage1_5.obj -MD -MP -MF $(DEPDIR)/jfs_stage1_5_exec-stage1_5.Tpo -c -o jfs_stage1_5_exec-stage1_5.obj `if test -f 'stage1_5.c'; then $(CYGPATH_W) 'stage1_5.c'; else $(CYGPATH_W) '$(srcdir)/stage1_5.c'; fi`
#	$(am__mv) $(DEPDIR)/jfs_stage1_5_exec-stage1_5.Tpo $(DEPDIR)/jfs_stage1_5_exec-stage1_5.Po
#	source='stage1_5.c' object='jfs_stage1_5_exec-stage1_5.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o jfs_stage1_5_exec-stage1_5.obj `if test -f 'stage1_5.c'; then $(CYGPATH_W) 'stage1_5.c'; else $(CYGPATH_W) '$(srcdir)/stage1_5.c'; fi`

jfs_stage1_5_exec-fsys_jfs.o: fsys_jfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT jfs_stage1_5_exec-fsys_jfs.o -MD -MP -MF $(DEPDIR)/jfs_stage1_5_exec-fsys_jfs.Tpo -c -o jfs_stage1_5_exec-fsys_jfs.o `test -f 'fsys_jfs.c' || echo '$(srcdir)/'`fsys_jfs.c
#	$(am__mv) $(DEPDIR)/jfs_stage1_5_exec-fsys_jfs.Tpo $(DEPDIR)/jfs_stage1_5_exec-fsys_jfs.Po
#	source='fsys_jfs.c' object='jfs_stage1_5_exec-fsys_jfs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o jfs_stage1_5_exec-fsys_jfs.o `test -f 'fsys_jfs.c' || echo '$(srcdir)/'`fsys_jfs.c

jfs_stage1_5_exec-fsys_jfs.obj: fsys_jfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT jfs_stage1_5_exec-fsys_jfs.obj -MD -MP -MF $(DEPDIR)/jfs_stage1_5_exec-fsys_jfs.Tpo -c -o jfs_stage1_5_exec-fsys_jfs.obj `if test -f 'fsys_jfs.c'; then $(CYGPATH_W) 'fsys_jfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_jfs.c'; fi`
#	$(am__mv) $(DEPDIR)/jfs_stage1_5_exec-fsys_jfs.Tpo $(DEPDIR)/jfs_stage1_5_exec-fsys_jfs.Po
#	source='fsys_jfs.c' object='jfs_stage1_5_exec-fsys_jfs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o jfs_stage1_5_exec-fsys_jfs.obj `if test -f 'fsys_jfs.c'; then $(CYGPATH_W) 'fsys_jfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_jfs.c'; fi`

jfs_stage1_5_exec-bios.o: bios.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT jfs_stage1_5_exec-bios.o -MD -MP -MF $(DEPDIR)/jfs_stage1_5_exec-bios.Tpo -c -o jfs_stage1_5_exec-bios.o `test -f 'bios.c' || echo '$(srcdir)/'`bios.c
#	$(am__mv) $(DEPDIR)/jfs_stage1_5_exec-bios.Tpo $(DEPDIR)/jfs_stage1_5_exec-bios.Po
#	source='bios.c' object='jfs_stage1_5_exec-bios.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o jfs_stage1_5_exec-bios.o `test -f 'bios.c' || echo '$(srcdir)/'`bios.c

jfs_stage1_5_exec-bios.obj: bios.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT jfs_stage1_5_exec-bios.obj -MD -MP -MF $(DEPDIR)/jfs_stage1_5_exec-bios.Tpo -c -o jfs_stage1_5_exec-bios.obj `if test -f 'bios.c'; then $(CYGPATH_W) 'bios.c'; else $(CYGPATH_W) '$(srcdir)/bios.c'; fi`
#	$(am__mv) $(DEPDIR)/jfs_stage1_5_exec-bios.Tpo $(DEPDIR)/jfs_stage1_5_exec-bios.Po
#	source='bios.c' object='jfs_stage1_5_exec-bios.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o jfs_stage1_5_exec-bios.obj `if test -f 'bios.c'; then $(CYGPATH_W) 'bios.c'; else $(CYGPATH_W) '$(srcdir)/bios.c'; fi`

minix_stage1_5_exec-common.o: common.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CFLAGS) $(CFLAGS) -MT minix_stage1_5_exec-common.o -MD -MP -MF $(DEPDIR)/minix_stage1_5_exec-common.Tpo -c -o minix_stage1_5_exec-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c
#	$(am__mv) $(DEPDIR)/minix_stage1_5_exec-common.Tpo $(DEPDIR)/minix_stage1_5_exec-common.Po
#	source='common.c' object='minix_stage1_5_exec-common.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o minix_stage1_5_exec-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c

minix_stage1_5_exec-common.obj: common.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CFLAGS) $(CFLAGS) -MT minix_stage1_5_exec-common.obj -MD -MP -MF $(DEPDIR)/minix_stage1_5_exec-common.Tpo -c -o minix_stage1_5_exec-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`
#	$(am__mv) $(DEPDIR)/minix_stage1_5_exec-common.Tpo $(DEPDIR)/minix_stage1_5_exec-common.Po
#	source='common.c' object='minix_stage1_5_exec-common.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o minix_stage1_5_exec-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`

minix_stage1_5_exec-char_io.o: char_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CFLAGS) $(CFLAGS) -MT minix_stage1_5_exec-char_io.o -MD -MP -MF $(DEPDIR)/minix_stage1_5_exec-char_io.Tpo -c -o minix_stage1_5_exec-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c
#	$(am__mv) $(DEPDIR)/minix_stage1_5_exec-char_io.Tpo $(DEPDIR)/minix_stage1_5_exec-char_io.Po
#	source='char_io.c' object='minix_stage1_5_exec-char_io.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o minix_stage1_5_exec-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c

minix_stage1_5_exec-char_io.obj: char_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CFLAGS) $(CFLAGS) -MT minix_stage1_5_exec-char_io.obj -MD -MP -MF $(DEPDIR)/minix_stage1_5_exec-char_io.Tpo -c -o minix_stage1_5_exec-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`
#	$(am__mv) $(DEPDIR)/minix_stage1_5_exec-char_io.Tpo $(DEPDIR)/minix_stage1_5_exec-char_io.Po
#	source='char_io.c' object='minix_stage1_5_exec-char_io.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o minix_stage1_5_exec-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`

minix_stage1_5_exec-disk_io.o: disk_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CFLAGS) $(CFLAGS) -MT minix_stage1_5_exec-disk_io.o -MD -MP -MF $(DEPDIR)/minix_stage1_5_exec-disk_io.Tpo -c -o minix_stage1_5_exec-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c
#	$(am__mv) $(DEPDIR)/minix_stage1_5_exec-disk_io.Tpo $(DEPDIR)/minix_stage1_5_exec-disk_io.Po
#	source='disk_io.c' object='minix_stage1_5_exec-disk_io.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o minix_stage1_5_exec-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c

minix_stage1_5_exec-disk_io.obj: disk_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CFLAGS) $(CFLAGS) -MT minix_stage1_5_exec-disk_io.obj -MD -MP -MF $(DEPDIR)/minix_stage1_5_exec-disk_io.Tpo -c -o minix_stage1_5_exec-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`
#	$(am__mv) $(DEPDIR)/minix_stage1_5_exec-disk_io.Tpo $(DEPDIR)/minix_stage1_5_exec-disk_io.Po
#	source='disk_io.c' object='minix_stage1_5_exec-disk_io.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o minix_stage1_5_exec-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`

minix_stage1_5_exec-stage1_5.o: stage1_5.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CFLAGS) $(CFLAGS) -MT minix_stage1_5_exec-stage1_5.o -MD -MP -MF $(DEPDIR)/minix_stage1_5_exec-stage1_5.Tpo -c -o minix_stage1_5_exec-stage1_5.o `test -f 'stage1_5.c' || echo '$(srcdir)/'`stage1_5.c
#	$(am__mv) $(DEPDIR)/minix_stage1_5_exec-stage1_5.Tpo $(DEPDIR)/minix_stage1_5_exec-stage1_5.Po
#	source='stage1_5.c' object='minix_stage1_5_exec-stage1_5.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o minix_stage1_5_exec-stage1_5.o `test -f 'stage1_5.c' || echo '$(srcdir)/'`stage1_5.c

minix_stage1_5_exec-stage1_5.obj: stage1_5.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CFLAGS) $(CFLAGS) -MT minix_stage1_5_exec-stage1_5.obj -MD -MP -MF $(DEPDIR)/minix_stage1_5_exec-stage1_5.Tpo -c -o minix_stage1_5_exec-stage1_5.obj `if test -f 'stage1_5.c'; then $(CYGPATH_W) 'stage1_5.c'; else $(CYGPATH_W) '$(srcdir)/stage1_5.c'; fi`
#	$(am__mv) $(DEPDIR)/minix_stage1_5_exec-stage1_5.Tpo $(DEPDIR)/minix_stage1_5_exec-stage1_5.Po
#	source='stage1_5.c' object='minix_stage1_5_exec-stage1_5.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o minix_stage1_5_exec-stage1_5.obj `if test -f 'stage1_5.c'; then $(CYGPATH_W) 'stage1_5.c'; else $(CYGPATH_W) '$(srcdir)/stage1_5.c'; fi`

minix_stage1_5_exec-fsys_minix.o: fsys_minix.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CFLAGS) $(CFLAGS) -MT minix_stage1_5_exec-fsys_minix.o -MD -MP -MF $(DEPDIR)/minix_stage1_5_exec-fsys_minix.Tpo -c -o minix_stage1_5_exec-fsys_minix.o `test -f 'fsys_minix.c' || echo '$(srcdir)/'`fsys_minix.c
#	$(am__mv) $(DEPDIR)/minix_stage1_5_exec-fsys_minix.Tpo $(DEPDIR)/minix_stage1_5_exec-fsys_minix.Po
#	source='fsys_minix.c' object='minix_stage1_5_exec-fsys_minix.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o minix_stage1_5_exec-fsys_minix.o `test -f 'fsys_minix.c' || echo '$(srcdir)/'`fsys_minix.c

minix_stage1_5_exec-fsys_minix.obj: fsys_minix.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CFLAGS) $(CFLAGS) -MT minix_stage1_5_exec-fsys_minix.obj -MD -MP -MF $(DEPDIR)/minix_stage1_5_exec-fsys_minix.Tpo -c -o minix_stage1_5_exec-fsys_minix.obj `if test -f 'fsys_minix.c'; then $(CYGPATH_W) 'fsys_minix.c'; else $(CYGPATH_W) '$(srcdir)/fsys_minix.c'; fi`
#	$(am__mv) $(DEPDIR)/minix_stage1_5_exec-fsys_minix.Tpo $(DEPDIR)/minix_stage1_5_exec-fsys_minix.Po
#	source='fsys_minix.c' object='minix_stage1_5_exec-fsys_minix.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o minix_stage1_5_exec-fsys_minix.obj `if test -f 'fsys_minix.c'; then $(CYGPATH_W) 'fsys_minix.c'; else $(CYGPATH_W) '$(srcdir)/fsys_minix.c'; fi`

minix_stage1_5_exec-bios.o: bios.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CFLAGS) $(CFLAGS) -MT minix_stage1_5_exec-bios.o -MD -MP -MF $(DEPDIR)/minix_stage1_5_exec-bios.Tpo -c -o minix_stage1_5_exec-bios.o `test -f 'bios.c' || echo '$(srcdir)/'`bios.c
#	$(am__mv) $(DEPDIR)/minix_stage1_5_exec-bios.Tpo $(DEPDIR)/minix_stage1_5_exec-bios.Po
#	source='bios.c' object='minix_stage1_5_exec-bios.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o minix_stage1_5_exec-bios.o `test -f 'bios.c' || echo '$(srcdir)/'`bios.c

minix_stage1_5_exec-bios.obj: bios.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CFLAGS) $(CFLAGS) -MT minix_stage1_5_exec-bios.obj -MD -MP -MF $(DEPDIR)/minix_stage1_5_exec-bios.Tpo -c -o minix_stage1_5_exec-bios.obj `if test -f 'bios.c'; then $(CYGPATH_W) 'bios.c'; else $(CYGPATH_W) '$(srcdir)/bios.c'; fi`
#	$(am__mv) $(DEPDIR)/minix_stage1_5_exec-bios.Tpo $(DEPDIR)/minix_stage1_5_exec-bios.Po
#	source='bios.c' object='minix_stage1_5_exec-bios.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(minix_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o minix_stage1_5_exec-bios.obj `if test -f 'bios.c'; then $(CYGPATH_W) 'bios.c'; else $(CYGPATH_W) '$(srcdir)/bios.c'; fi`

pre_stage2_exec-bios.o: bios.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-bios.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-bios.Tpo -c -o pre_stage2_exec-bios.o `test -f 'bios.c' || echo '$(srcdir)/'`bios.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-bios.Tpo $(DEPDIR)/pre_stage2_exec-bios.Po
#	source='bios.c' object='pre_stage2_exec-bios.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-bios.o `test -f 'bios.c' || echo '$(srcdir)/'`bios.c

pre_stage2_exec-bios.obj: bios.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-bios.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-bios.Tpo -c -o pre_stage2_exec-bios.obj `if test -f 'bios.c'; then $(CYGPATH_W) 'bios.c'; else $(CYGPATH_W) '$(srcdir)/bios.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-bios.Tpo $(DEPDIR)/pre_stage2_exec-bios.Po
#	source='bios.c' object='pre_stage2_exec-bios.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-bios.obj `if test -f 'bios.c'; then $(CYGPATH_W) 'bios.c'; else $(CYGPATH_W) '$(srcdir)/bios.c'; fi`

pre_stage2_exec-boot.o: boot.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-boot.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-boot.Tpo -c -o pre_stage2_exec-boot.o `test -f 'boot.c' || echo '$(srcdir)/'`boot.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-boot.Tpo $(DEPDIR)/pre_stage2_exec-boot.Po
#	source='boot.c' object='pre_stage2_exec-boot.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-boot.o `test -f 'boot.c' || echo '$(srcdir)/'`boot.c

pre_stage2_exec-boot.obj: boot.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-boot.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-boot.Tpo -c -o pre_stage2_exec-boot.obj `if test -f 'boot.c'; then $(CYGPATH_W) 'boot.c'; else $(CYGPATH_W) '$(srcdir)/boot.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-boot.Tpo $(DEPDIR)/pre_stage2_exec-boot.Po
#	source='boot.c' object='pre_stage2_exec-boot.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-boot.obj `if test -f 'boot.c'; then $(CYGPATH_W) 'boot.c'; else $(CYGPATH_W) '$(srcdir)/boot.c'; fi`

pre_stage2_exec-builtins.o: builtins.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-builtins.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-builtins.Tpo -c -o pre_stage2_exec-builtins.o `test -f 'builtins.c' || echo '$(srcdir)/'`builtins.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-builtins.Tpo $(DEPDIR)/pre_stage2_exec-builtins.Po
#	source='builtins.c' object='pre_stage2_exec-builtins.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-builtins.o `test -f 'builtins.c' || echo '$(srcdir)/'`builtins.c

pre_stage2_exec-builtins.obj: builtins.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-builtins.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-builtins.Tpo -c -o pre_stage2_exec-builtins.obj `if test -f 'builtins.c'; then $(CYGPATH_W) 'builtins.c'; else $(CYGPATH_W) '$(srcdir)/builtins.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-builtins.Tpo $(DEPDIR)/pre_stage2_exec-builtins.Po
#	source='builtins.c' object='pre_stage2_exec-builtins.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-builtins.obj `if test -f 'builtins.c'; then $(CYGPATH_W) 'builtins.c'; else $(CYGPATH_W) '$(srcdir)/builtins.c'; fi`

pre_stage2_exec-char_io.o: char_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-char_io.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-char_io.Tpo -c -o pre_stage2_exec-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-char_io.Tpo $(DEPDIR)/pre_stage2_exec-char_io.Po
#	source='char_io.c' object='pre_stage2_exec-char_io.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c

pre_stage2_exec-char_io.obj: char_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-char_io.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-char_io.Tpo -c -o pre_stage2_exec-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-char_io.Tpo $(DEPDIR)/pre_stage2_exec-char_io.Po
#	source='char_io.c' object='pre_stage2_exec-char_io.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`

pre_stage2_exec-cmdline.o: cmdline.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-cmdline.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-cmdline.Tpo -c -o pre_stage2_exec-cmdline.o `test -f 'cmdline.c' || echo '$(srcdir)/'`cmdline.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-cmdline.Tpo $(DEPDIR)/pre_stage2_exec-cmdline.Po
#	source='cmdline.c' object='pre_stage2_exec-cmdline.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-cmdline.o `test -f 'cmdline.c' || echo '$(srcdir)/'`cmdline.c

pre_stage2_exec-cmdline.obj: cmdline.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-cmdline.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-cmdline.Tpo -c -o pre_stage2_exec-cmdline.obj `if test -f 'cmdline.c'; then $(CYGPATH_W) 'cmdline.c'; else $(CYGPATH_W) '$(srcdir)/cmdline.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-cmdline.Tpo $(DEPDIR)/pre_stage2_exec-cmdline.Po
#	source='cmdline.c' object='pre_stage2_exec-cmdline.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-cmdline.obj `if test -f 'cmdline.c'; then $(CYGPATH_W) 'cmdline.c'; else $(CYGPATH_W) '$(srcdir)/cmdline.c'; fi`

pre_stage2_exec-common.o: common.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-common.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-common.Tpo -c -o pre_stage2_exec-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-common.Tpo $(DEPDIR)/pre_stage2_exec-common.Po
#	source='common.c' object='pre_stage2_exec-common.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c

pre_stage2_exec-common.obj: common.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-common.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-common.Tpo -c -o pre_stage2_exec-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-common.Tpo $(DEPDIR)/pre_stage2_exec-common.Po
#	source='common.c' object='pre_stage2_exec-common.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`

pre_stage2_exec-console.o: console.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-console.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-console.Tpo -c -o pre_stage2_exec-console.o `test -f 'console.c' || echo '$(srcdir)/'`console.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-console.Tpo $(DEPDIR)/pre_stage2_exec-console.Po
#	source='console.c' object='pre_stage2_exec-console.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-console.o `test -f 'console.c' || echo '$(srcdir)/'`console.c

pre_stage2_exec-console.obj: console.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-console.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-console.Tpo -c -o pre_stage2_exec-console.obj `if test -f 'console.c'; then $(CYGPATH_W) 'console.c'; else $(CYGPATH_W) '$(srcdir)/console.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-console.Tpo $(DEPDIR)/pre_stage2_exec-console.Po
#	source='console.c' object='pre_stage2_exec-console.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-console.obj `if test -f 'console.c'; then $(CYGPATH_W) 'console.c'; else $(CYGPATH_W) '$(srcdir)/console.c'; fi`

pre_stage2_exec-disk_io.o: disk_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-disk_io.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-disk_io.Tpo -c -o pre_stage2_exec-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-disk_io.Tpo $(DEPDIR)/pre_stage2_exec-disk_io.Po
#	source='disk_io.c' object='pre_stage2_exec-disk_io.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c

pre_stage2_exec-disk_io.obj: disk_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-disk_io.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-disk_io.Tpo -c -o pre_stage2_exec-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-disk_io.Tpo $(DEPDIR)/pre_stage2_exec-disk_io.Po
#	source='disk_io.c' object='pre_stage2_exec-disk_io.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`

pre_stage2_exec-fsys_ext2fs.o: fsys_ext2fs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-fsys_ext2fs.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-fsys_ext2fs.Tpo -c -o pre_stage2_exec-fsys_ext2fs.o `test -f 'fsys_ext2fs.c' || echo '$(srcdir)/'`fsys_ext2fs.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-fsys_ext2fs.Tpo $(DEPDIR)/pre_stage2_exec-fsys_ext2fs.Po
#	source='fsys_ext2fs.c' object='pre_stage2_exec-fsys_ext2fs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-fsys_ext2fs.o `test -f 'fsys_ext2fs.c' || echo '$(srcdir)/'`fsys_ext2fs.c

pre_stage2_exec-fsys_ext2fs.obj: fsys_ext2fs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-fsys_ext2fs.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-fsys_ext2fs.Tpo -c -o pre_stage2_exec-fsys_ext2fs.obj `if test -f 'fsys_ext2fs.c'; then $(CYGPATH_W) 'fsys_ext2fs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ext2fs.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-fsys_ext2fs.Tpo $(DEPDIR)/pre_stage2_exec-fsys_ext2fs.Po
#	source='fsys_ext2fs.c' object='pre_stage2_exec-fsys_ext2fs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-fsys_ext2fs.obj `if test -f 'fsys_ext2fs.c'; then $(CYGPATH_W) 'fsys_ext2fs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ext2fs.c'; fi`

pre_stage2_exec-fsys_fat.o: fsys_fat.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-fsys_fat.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-fsys_fat.Tpo -c -o pre_stage2_exec-fsys_fat.o `test -f 'fsys_fat.c' || echo '$(srcdir)/'`fsys_fat.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-fsys_fat.Tpo $(DEPDIR)/pre_stage2_exec-fsys_fat.Po
#	source='fsys_fat.c' object='pre_stage2_exec-fsys_fat.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-fsys_fat.o `test -f 'fsys_fat.c' || echo '$(srcdir)/'`fsys_fat.c

pre_stage2_exec-fsys_fat.obj: fsys_fat.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-fsys_fat.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-fsys_fat.Tpo -c -o pre_stage2_exec-fsys_fat.obj `if test -f 'fsys_fat.c'; then $(CYGPATH_W) 'fsys_fat.c'; else $(CYGPATH_W) '$(srcdir)/fsys_fat.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-fsys_fat.Tpo $(DEPDIR)/pre_stage2_exec-fsys_fat.Po
#	source='fsys_fat.c' object='pre_stage2_exec-fsys_fat.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-fsys_fat.obj `if test -f 'fsys_fat.c'; then $(CYGPATH_W) 'fsys_fat.c'; else $(CYGPATH_W) '$(srcdir)/fsys_fat.c'; fi`

pre_stage2_exec-fsys_ffs.o: fsys_ffs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-fsys_ffs.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-fsys_ffs.Tpo -c -o pre_stage2_exec-fsys_ffs.o `test -f 'fsys_ffs.c' || echo '$(srcdir)/'`fsys_ffs.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-fsys_ffs.Tpo $(DEPDIR)/pre_stage2_exec-fsys_ffs.Po
#	source='fsys_ffs.c' object='pre_stage2_exec-fsys_ffs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-fsys_ffs.o `test -f 'fsys_ffs.c' || echo '$(srcdir)/'`fsys_ffs.c

pre_stage2_exec-fsys_ffs.obj: fsys_ffs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-fsys_ffs.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-fsys_ffs.Tpo -c -o pre_stage2_exec-fsys_ffs.obj `if test -f 'fsys_ffs.c'; then $(CYGPATH_W) 'fsys_ffs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ffs.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-fsys_ffs.Tpo $(DEPDIR)/pre_stage2_exec-fsys_ffs.Po
#	source='fsys_ffs.c' object='pre_stage2_exec-fsys_ffs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-fsys_ffs.obj `if test -f 'fsys_ffs.c'; then $(CYGPATH_W) 'fsys_ffs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ffs.c'; fi`

pre_stage2_exec-fsys_iso9660.o: fsys_iso9660.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-fsys_iso9660.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-fsys_iso9660.Tpo -c -o pre_stage2_exec-fsys_iso9660.o `test -f 'fsys_iso9660.c' || echo '$(srcdir)/'`fsys_iso9660.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-fsys_iso9660.Tpo $(DEPDIR)/pre_stage2_exec-fsys_iso9660.Po
#	source='fsys_iso9660.c' object='pre_stage2_exec-fsys_iso9660.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-fsys_iso9660.o `test -f 'fsys_iso9660.c' || echo '$(srcdir)/'`fsys_iso9660.c

pre_stage2_exec-fsys_iso9660.obj: fsys_iso9660.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-fsys_iso9660.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-fsys_iso9660.Tpo -c -o pre_stage2_exec-fsys_iso9660.obj `if test -f 'fsys_iso9660.c'; then $(CYGPATH_W) 'fsys_iso9660.c'; else $(CYGPATH_W) '$(srcdir)/fsys_iso9660.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-fsys_iso9660.Tpo $(DEPDIR)/pre_stage2_exec-fsys_iso9660.Po
#	source='fsys_iso9660.c' object='pre_stage2_exec-fsys_iso9660.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-fsys_iso9660.obj `if test -f 'fsys_iso9660.c'; then $(CYGPATH_W) 'fsys_iso9660.c'; else $(CYGPATH_W) '$(srcdir)/fsys_iso9660.c'; fi`

pre_stage2_exec-fsys_jfs.o: fsys_jfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-fsys_jfs.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-fsys_jfs.Tpo -c -o pre_stage2_exec-fsys_jfs.o `test -f 'fsys_jfs.c' || echo '$(srcdir)/'`fsys_jfs.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-fsys_jfs.Tpo $(DEPDIR)/pre_stage2_exec-fsys_jfs.Po
#	source='fsys_jfs.c' object='pre_stage2_exec-fsys_jfs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-fsys_jfs.o `test -f 'fsys_jfs.c' || echo '$(srcdir)/'`fsys_jfs.c

pre_stage2_exec-fsys_jfs.obj: fsys_jfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-fsys_jfs.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-fsys_jfs.Tpo -c -o pre_stage2_exec-fsys_jfs.obj `if test -f 'fsys_jfs.c'; then $(CYGPATH_W) 'fsys_jfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_jfs.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-fsys_jfs.Tpo $(DEPDIR)/pre_stage2_exec-fsys_jfs.Po
#	source='fsys_jfs.c' object='pre_stage2_exec-fsys_jfs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-fsys_jfs.obj `if test -f 'fsys_jfs.c'; then $(CYGPATH_W) 'fsys_jfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_jfs.c'; fi`

pre_stage2_exec-fsys_minix.o: fsys_minix.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-fsys_minix.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-fsys_minix.Tpo -c -o pre_stage2_exec-fsys_minix.o `test -f 'fsys_minix.c' || echo '$(srcdir)/'`fsys_minix.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-fsys_minix.Tpo $(DEPDIR)/pre_stage2_exec-fsys_minix.Po
#	source='fsys_minix.c' object='pre_stage2_exec-fsys_minix.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-fsys_minix.o `test -f 'fsys_minix.c' || echo '$(srcdir)/'`fsys_minix.c

pre_stage2_exec-fsys_minix.obj: fsys_minix.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-fsys_minix.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-fsys_minix.Tpo -c -o pre_stage2_exec-fsys_minix.obj `if test -f 'fsys_minix.c'; then $(CYGPATH_W) 'fsys_minix.c'; else $(CYGPATH_W) '$(srcdir)/fsys_minix.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-fsys_minix.Tpo $(DEPDIR)/pre_stage2_exec-fsys_minix.Po
#	source='fsys_minix.c' object='pre_stage2_exec-fsys_minix.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-fsys_minix.obj `if test -f 'fsys_minix.c'; then $(CYGPATH_W) 'fsys_minix.c'; else $(CYGPATH_W) '$(srcdir)/fsys_minix.c'; fi`

pre_stage2_exec-fsys_reiserfs.o: fsys_reiserfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-fsys_reiserfs.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-fsys_reiserfs.Tpo -c -o pre_stage2_exec-fsys_reiserfs.o `test -f 'fsys_reiserfs.c' || echo '$(srcdir)/'`fsys_reiserfs.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-fsys_reiserfs.Tpo $(DEPDIR)/pre_stage2_exec-fsys_reiserfs.Po
#	source='fsys_reiserfs.c' object='pre_stage2_exec-fsys_reiserfs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-fsys_reiserfs.o `test -f 'fsys_reiserfs.c' || echo '$(srcdir)/'`fsys_reiserfs.c

pre_stage2_exec-fsys_reiserfs.obj: fsys_reiserfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-fsys_reiserfs.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-fsys_reiserfs.Tpo -c -o pre_stage2_exec-fsys_reiserfs.obj `if test -f 'fsys_reiserfs.c'; then $(CYGPATH_W) 'fsys_reiserfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_reiserfs.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-fsys_reiserfs.Tpo $(DEPDIR)/pre_stage2_exec-fsys_reiserfs.Po
#	source='fsys_reiserfs.c' object='pre_stage2_exec-fsys_reiserfs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-fsys_reiserfs.obj `if test -f 'fsys_reiserfs.c'; then $(CYGPATH_W) 'fsys_reiserfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_reiserfs.c'; fi`

pre_stage2_exec-fsys_ufs2.o: fsys_ufs2.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-fsys_ufs2.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-fsys_ufs2.Tpo -c -o pre_stage2_exec-fsys_ufs2.o `test -f 'fsys_ufs2.c' || echo '$(srcdir)/'`fsys_ufs2.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-fsys_ufs2.Tpo $(DEPDIR)/pre_stage2_exec-fsys_ufs2.Po
#	source='fsys_ufs2.c' object='pre_stage2_exec-fsys_ufs2.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-fsys_ufs2.o `test -f 'fsys_ufs2.c' || echo '$(srcdir)/'`fsys_ufs2.c

pre_stage2_exec-fsys_ufs2.obj: fsys_ufs2.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-fsys_ufs2.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-fsys_ufs2.Tpo -c -o pre_stage2_exec-fsys_ufs2.obj `if test -f 'fsys_ufs2.c'; then $(CYGPATH_W) 'fsys_ufs2.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ufs2.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-fsys_ufs2.Tpo $(DEPDIR)/pre_stage2_exec-fsys_ufs2.Po
#	source='fsys_ufs2.c' object='pre_stage2_exec-fsys_ufs2.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-fsys_ufs2.obj `if test -f 'fsys_ufs2.c'; then $(CYGPATH_W) 'fsys_ufs2.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ufs2.c'; fi`

pre_stage2_exec-fsys_vstafs.o: fsys_vstafs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-fsys_vstafs.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-fsys_vstafs.Tpo -c -o pre_stage2_exec-fsys_vstafs.o `test -f 'fsys_vstafs.c' || echo '$(srcdir)/'`fsys_vstafs.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-fsys_vstafs.Tpo $(DEPDIR)/pre_stage2_exec-fsys_vstafs.Po
#	source='fsys_vstafs.c' object='pre_stage2_exec-fsys_vstafs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-fsys_vstafs.o `test -f 'fsys_vstafs.c' || echo '$(srcdir)/'`fsys_vstafs.c

pre_stage2_exec-fsys_vstafs.obj: fsys_vstafs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-fsys_vstafs.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-fsys_vstafs.Tpo -c -o pre_stage2_exec-fsys_vstafs.obj `if test -f 'fsys_vstafs.c'; then $(CYGPATH_W) 'fsys_vstafs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_vstafs.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-fsys_vstafs.Tpo $(DEPDIR)/pre_stage2_exec-fsys_vstafs.Po
#	source='fsys_vstafs.c' object='pre_stage2_exec-fsys_vstafs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-fsys_vstafs.obj `if test -f 'fsys_vstafs.c'; then $(CYGPATH_W) 'fsys_vstafs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_vstafs.c'; fi`

pre_stage2_exec-fsys_xfs.o: fsys_xfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-fsys_xfs.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-fsys_xfs.Tpo -c -o pre_stage2_exec-fsys_xfs.o `test -f 'fsys_xfs.c' || echo '$(srcdir)/'`fsys_xfs.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-fsys_xfs.Tpo $(DEPDIR)/pre_stage2_exec-fsys_xfs.Po
#	source='fsys_xfs.c' object='pre_stage2_exec-fsys_xfs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-fsys_xfs.o `test -f 'fsys_xfs.c' || echo '$(srcdir)/'`fsys_xfs.c

pre_stage2_exec-fsys_xfs.obj: fsys_xfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-fsys_xfs.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-fsys_xfs.Tpo -c -o pre_stage2_exec-fsys_xfs.obj `if test -f 'fsys_xfs.c'; then $(CYGPATH_W) 'fsys_xfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_xfs.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-fsys_xfs.Tpo $(DEPDIR)/pre_stage2_exec-fsys_xfs.Po
#	source='fsys_xfs.c' object='pre_stage2_exec-fsys_xfs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-fsys_xfs.obj `if test -f 'fsys_xfs.c'; then $(CYGPATH_W) 'fsys_xfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_xfs.c'; fi`

pre_stage2_exec-gunzip.o: gunzip.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-gunzip.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-gunzip.Tpo -c -o pre_stage2_exec-gunzip.o `test -f 'gunzip.c' || echo '$(srcdir)/'`gunzip.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-gunzip.Tpo $(DEPDIR)/pre_stage2_exec-gunzip.Po
#	source='gunzip.c' object='pre_stage2_exec-gunzip.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-gunzip.o `test -f 'gunzip.c' || echo '$(srcdir)/'`gunzip.c

pre_stage2_exec-gunzip.obj: gunzip.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-gunzip.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-gunzip.Tpo -c -o pre_stage2_exec-gunzip.obj `if test -f 'gunzip.c'; then $(CYGPATH_W) 'gunzip.c'; else $(CYGPATH_W) '$(srcdir)/gunzip.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-gunzip.Tpo $(DEPDIR)/pre_stage2_exec-gunzip.Po
#	source='gunzip.c' object='pre_stage2_exec-gunzip.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-gunzip.obj `if test -f 'gunzip.c'; then $(CYGPATH_W) 'gunzip.c'; else $(CYGPATH_W) '$(srcdir)/gunzip.c'; fi`

pre_stage2_exec-hercules.o: hercules.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-hercules.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-hercules.Tpo -c -o pre_stage2_exec-hercules.o `test -f 'hercules.c' || echo '$(srcdir)/'`hercules.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-hercules.Tpo $(DEPDIR)/pre_stage2_exec-hercules.Po
#	source='hercules.c' object='pre_stage2_exec-hercules.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-hercules.o `test -f 'hercules.c' || echo '$(srcdir)/'`hercules.c

pre_stage2_exec-hercules.obj: hercules.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-hercules.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-hercules.Tpo -c -o pre_stage2_exec-hercules.obj `if test -f 'hercules.c'; then $(CYGPATH_W) 'hercules.c'; else $(CYGPATH_W) '$(srcdir)/hercules.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-hercules.Tpo $(DEPDIR)/pre_stage2_exec-hercules.Po
#	source='hercules.c' object='pre_stage2_exec-hercules.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-hercules.obj `if test -f 'hercules.c'; then $(CYGPATH_W) 'hercules.c'; else $(CYGPATH_W) '$(srcdir)/hercules.c'; fi`

pre_stage2_exec-md5.o: md5.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-md5.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-md5.Tpo -c -o pre_stage2_exec-md5.o `test -f 'md5.c' || echo '$(srcdir)/'`md5.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-md5.Tpo $(DEPDIR)/pre_stage2_exec-md5.Po
#	source='md5.c' object='pre_stage2_exec-md5.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-md5.o `test -f 'md5.c' || echo '$(srcdir)/'`md5.c

pre_stage2_exec-md5.obj: md5.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-md5.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-md5.Tpo -c -o pre_stage2_exec-md5.obj `if test -f 'md5.c'; then $(CYGPATH_W) 'md5.c'; else $(CYGPATH_W) '$(srcdir)/md5.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-md5.Tpo $(DEPDIR)/pre_stage2_exec-md5.Po
#	source='md5.c' object='pre_stage2_exec-md5.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-md5.obj `if test -f 'md5.c'; then $(CYGPATH_W) 'md5.c'; else $(CYGPATH_W) '$(srcdir)/md5.c'; fi`

pre_stage2_exec-serial.o: serial.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-serial.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-serial.Tpo -c -o pre_stage2_exec-serial.o `test -f 'serial.c' || echo '$(srcdir)/'`serial.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-serial.Tpo $(DEPDIR)/pre_stage2_exec-serial.Po
#	source='serial.c' object='pre_stage2_exec-serial.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-serial.o `test -f 'serial.c' || echo '$(srcdir)/'`serial.c

pre_stage2_exec-serial.obj: serial.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-serial.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-serial.Tpo -c -o pre_stage2_exec-serial.obj `if test -f 'serial.c'; then $(CYGPATH_W) 'serial.c'; else $(CYGPATH_W) '$(srcdir)/serial.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-serial.Tpo $(DEPDIR)/pre_stage2_exec-serial.Po
#	source='serial.c' object='pre_stage2_exec-serial.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-serial.obj `if test -f 'serial.c'; then $(CYGPATH_W) 'serial.c'; else $(CYGPATH_W) '$(srcdir)/serial.c'; fi`

pre_stage2_exec-smp-imps.o: smp-imps.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-smp-imps.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-smp-imps.Tpo -c -o pre_stage2_exec-smp-imps.o `test -f 'smp-imps.c' || echo '$(srcdir)/'`smp-imps.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-smp-imps.Tpo $(DEPDIR)/pre_stage2_exec-smp-imps.Po
#	source='smp-imps.c' object='pre_stage2_exec-smp-imps.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-smp-imps.o `test -f 'smp-imps.c' || echo '$(srcdir)/'`smp-imps.c

pre_stage2_exec-smp-imps.obj: smp-imps.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-smp-imps.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-smp-imps.Tpo -c -o pre_stage2_exec-smp-imps.obj `if test -f 'smp-imps.c'; then $(CYGPATH_W) 'smp-imps.c'; else $(CYGPATH_W) '$(srcdir)/smp-imps.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-smp-imps.Tpo $(DEPDIR)/pre_stage2_exec-smp-imps.Po
#	source='smp-imps.c' object='pre_stage2_exec-smp-imps.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-smp-imps.obj `if test -f 'smp-imps.c'; then $(CYGPATH_W) 'smp-imps.c'; else $(CYGPATH_W) '$(srcdir)/smp-imps.c'; fi`

pre_stage2_exec-sha256crypt.o: sha256crypt.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-sha256crypt.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-sha256crypt.Tpo -c -o pre_stage2_exec-sha256crypt.o `test -f 'sha256crypt.c' || echo '$(srcdir)/'`sha256crypt.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-sha256crypt.Tpo $(DEPDIR)/pre_stage2_exec-sha256crypt.Po
#	source='sha256crypt.c' object='pre_stage2_exec-sha256crypt.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-sha256crypt.o `test -f 'sha256crypt.c' || echo '$(srcdir)/'`sha256crypt.c

pre_stage2_exec-sha256crypt.obj: sha256crypt.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-sha256crypt.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-sha256crypt.Tpo -c -o pre_stage2_exec-sha256crypt.obj `if test -f 'sha256crypt.c'; then $(CYGPATH_W) 'sha256crypt.c'; else $(CYGPATH_W) '$(srcdir)/sha256crypt.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-sha256crypt.Tpo $(DEPDIR)/pre_stage2_exec-sha256crypt.Po
#	source='sha256crypt.c' object='pre_stage2_exec-sha256crypt.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-sha256crypt.obj `if test -f 'sha256crypt.c'; then $(CYGPATH_W) 'sha256crypt.c'; else $(CYGPATH_W) '$(srcdir)/sha256crypt.c'; fi`

pre_stage2_exec-sha512crypt.o: sha512crypt.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-sha512crypt.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-sha512crypt.Tpo -c -o pre_stage2_exec-sha512crypt.o `test -f 'sha512crypt.c' || echo '$(srcdir)/'`sha512crypt.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-sha512crypt.Tpo $(DEPDIR)/pre_stage2_exec-sha512crypt.Po
#	source='sha512crypt.c' object='pre_stage2_exec-sha512crypt.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-sha512crypt.o `test -f 'sha512crypt.c' || echo '$(srcdir)/'`sha512crypt.c

pre_stage2_exec-sha512crypt.obj: sha512crypt.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-sha512crypt.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-sha512crypt.Tpo -c -o pre_stage2_exec-sha512crypt.obj `if test -f 'sha512crypt.c'; then $(CYGPATH_W) 'sha512crypt.c'; else $(CYGPATH_W) '$(srcdir)/sha512crypt.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-sha512crypt.Tpo $(DEPDIR)/pre_stage2_exec-sha512crypt.Po
#	source='sha512crypt.c' object='pre_stage2_exec-sha512crypt.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-sha512crypt.obj `if test -f 'sha512crypt.c'; then $(CYGPATH_W) 'sha512crypt.c'; else $(CYGPATH_W) '$(srcdir)/sha512crypt.c'; fi`

pre_stage2_exec-stage2.o: stage2.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-stage2.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-stage2.Tpo -c -o pre_stage2_exec-stage2.o `test -f 'stage2.c' || echo '$(srcdir)/'`stage2.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-stage2.Tpo $(DEPDIR)/pre_stage2_exec-stage2.Po
#	source='stage2.c' object='pre_stage2_exec-stage2.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-stage2.o `test -f 'stage2.c' || echo '$(srcdir)/'`stage2.c

pre_stage2_exec-stage2.obj: stage2.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-stage2.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-stage2.Tpo -c -o pre_stage2_exec-stage2.obj `if test -f 'stage2.c'; then $(CYGPATH_W) 'stage2.c'; else $(CYGPATH_W) '$(srcdir)/stage2.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-stage2.Tpo $(DEPDIR)/pre_stage2_exec-stage2.Po
#	source='stage2.c' object='pre_stage2_exec-stage2.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-stage2.obj `if test -f 'stage2.c'; then $(CYGPATH_W) 'stage2.c'; else $(CYGPATH_W) '$(srcdir)/stage2.c'; fi`

pre_stage2_exec-terminfo.o: terminfo.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-terminfo.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-terminfo.Tpo -c -o pre_stage2_exec-terminfo.o `test -f 'terminfo.c' || echo '$(srcdir)/'`terminfo.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-terminfo.Tpo $(DEPDIR)/pre_stage2_exec-terminfo.Po
#	source='terminfo.c' object='pre_stage2_exec-terminfo.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-terminfo.o `test -f 'terminfo.c' || echo '$(srcdir)/'`terminfo.c

pre_stage2_exec-terminfo.obj: terminfo.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-terminfo.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-terminfo.Tpo -c -o pre_stage2_exec-terminfo.obj `if test -f 'terminfo.c'; then $(CYGPATH_W) 'terminfo.c'; else $(CYGPATH_W) '$(srcdir)/terminfo.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-terminfo.Tpo $(DEPDIR)/pre_stage2_exec-terminfo.Po
#	source='terminfo.c' object='pre_stage2_exec-terminfo.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-terminfo.obj `if test -f 'terminfo.c'; then $(CYGPATH_W) 'terminfo.c'; else $(CYGPATH_W) '$(srcdir)/terminfo.c'; fi`

pre_stage2_exec-tparm.o: tparm.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-tparm.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-tparm.Tpo -c -o pre_stage2_exec-tparm.o `test -f 'tparm.c' || echo '$(srcdir)/'`tparm.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-tparm.Tpo $(DEPDIR)/pre_stage2_exec-tparm.Po
#	source='tparm.c' object='pre_stage2_exec-tparm.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-tparm.o `test -f 'tparm.c' || echo '$(srcdir)/'`tparm.c

pre_stage2_exec-tparm.obj: tparm.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-tparm.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-tparm.Tpo -c -o pre_stage2_exec-tparm.obj `if test -f 'tparm.c'; then $(CYGPATH_W) 'tparm.c'; else $(CYGPATH_W) '$(srcdir)/tparm.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-tparm.Tpo $(DEPDIR)/pre_stage2_exec-tparm.Po
#	source='tparm.c' object='pre_stage2_exec-tparm.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-tparm.obj `if test -f 'tparm.c'; then $(CYGPATH_W) 'tparm.c'; else $(CYGPATH_W) '$(srcdir)/tparm.c'; fi`

pre_stage2_exec-graphics.o: graphics.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-graphics.o -MD -MP -MF $(DEPDIR)/pre_stage2_exec-graphics.Tpo -c -o pre_stage2_exec-graphics.o `test -f 'graphics.c' || echo '$(srcdir)/'`graphics.c
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-graphics.Tpo $(DEPDIR)/pre_stage2_exec-graphics.Po
#	source='graphics.c' object='pre_stage2_exec-graphics.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-graphics.o `test -f 'graphics.c' || echo '$(srcdir)/'`graphics.c

pre_stage2_exec-graphics.obj: graphics.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -MT pre_stage2_exec-graphics.obj -MD -MP -MF $(DEPDIR)/pre_stage2_exec-graphics.Tpo -c -o pre_stage2_exec-graphics.obj `if test -f 'graphics.c'; then $(CYGPATH_W) 'graphics.c'; else $(CYGPATH_W) '$(srcdir)/graphics.c'; fi`
#	$(am__mv) $(DEPDIR)/pre_stage2_exec-graphics.Tpo $(DEPDIR)/pre_stage2_exec-graphics.Po
#	source='graphics.c' object='pre_stage2_exec-graphics.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pre_stage2_exec_CFLAGS) $(CFLAGS) -c -o pre_stage2_exec-graphics.obj `if test -f 'graphics.c'; then $(CYGPATH_W) 'graphics.c'; else $(CYGPATH_W) '$(srcdir)/graphics.c'; fi`

reiserfs_stage1_5_exec-common.o: common.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT reiserfs_stage1_5_exec-common.o -MD -MP -MF $(DEPDIR)/reiserfs_stage1_5_exec-common.Tpo -c -o reiserfs_stage1_5_exec-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c
#	$(am__mv) $(DEPDIR)/reiserfs_stage1_5_exec-common.Tpo $(DEPDIR)/reiserfs_stage1_5_exec-common.Po
#	source='common.c' object='reiserfs_stage1_5_exec-common.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o reiserfs_stage1_5_exec-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c

reiserfs_stage1_5_exec-common.obj: common.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT reiserfs_stage1_5_exec-common.obj -MD -MP -MF $(DEPDIR)/reiserfs_stage1_5_exec-common.Tpo -c -o reiserfs_stage1_5_exec-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`
#	$(am__mv) $(DEPDIR)/reiserfs_stage1_5_exec-common.Tpo $(DEPDIR)/reiserfs_stage1_5_exec-common.Po
#	source='common.c' object='reiserfs_stage1_5_exec-common.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o reiserfs_stage1_5_exec-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`

reiserfs_stage1_5_exec-char_io.o: char_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT reiserfs_stage1_5_exec-char_io.o -MD -MP -MF $(DEPDIR)/reiserfs_stage1_5_exec-char_io.Tpo -c -o reiserfs_stage1_5_exec-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c
#	$(am__mv) $(DEPDIR)/reiserfs_stage1_5_exec-char_io.Tpo $(DEPDIR)/reiserfs_stage1_5_exec-char_io.Po
#	source='char_io.c' object='reiserfs_stage1_5_exec-char_io.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o reiserfs_stage1_5_exec-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c

reiserfs_stage1_5_exec-char_io.obj: char_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT reiserfs_stage1_5_exec-char_io.obj -MD -MP -MF $(DEPDIR)/reiserfs_stage1_5_exec-char_io.Tpo -c -o reiserfs_stage1_5_exec-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`
#	$(am__mv) $(DEPDIR)/reiserfs_stage1_5_exec-char_io.Tpo $(DEPDIR)/reiserfs_stage1_5_exec-char_io.Po
#	source='char_io.c' object='reiserfs_stage1_5_exec-char_io.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o reiserfs_stage1_5_exec-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`

reiserfs_stage1_5_exec-disk_io.o: disk_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT reiserfs_stage1_5_exec-disk_io.o -MD -MP -MF $(DEPDIR)/reiserfs_stage1_5_exec-disk_io.Tpo -c -o reiserfs_stage1_5_exec-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c
#	$(am__mv) $(DEPDIR)/reiserfs_stage1_5_exec-disk_io.Tpo $(DEPDIR)/reiserfs_stage1_5_exec-disk_io.Po
#	source='disk_io.c' object='reiserfs_stage1_5_exec-disk_io.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o reiserfs_stage1_5_exec-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c

reiserfs_stage1_5_exec-disk_io.obj: disk_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT reiserfs_stage1_5_exec-disk_io.obj -MD -MP -MF $(DEPDIR)/reiserfs_stage1_5_exec-disk_io.Tpo -c -o reiserfs_stage1_5_exec-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`
#	$(am__mv) $(DEPDIR)/reiserfs_stage1_5_exec-disk_io.Tpo $(DEPDIR)/reiserfs_stage1_5_exec-disk_io.Po
#	source='disk_io.c' object='reiserfs_stage1_5_exec-disk_io.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o reiserfs_stage1_5_exec-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`

reiserfs_stage1_5_exec-stage1_5.o: stage1_5.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT reiserfs_stage1_5_exec-stage1_5.o -MD -MP -MF $(DEPDIR)/reiserfs_stage1_5_exec-stage1_5.Tpo -c -o reiserfs_stage1_5_exec-stage1_5.o `test -f 'stage1_5.c' || echo '$(srcdir)/'`stage1_5.c
#	$(am__mv) $(DEPDIR)/reiserfs_stage1_5_exec-stage1_5.Tpo $(DEPDIR)/reiserfs_stage1_5_exec-stage1_5.Po
#	source='stage1_5.c' object='reiserfs_stage1_5_exec-stage1_5.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o reiserfs_stage1_5_exec-stage1_5.o `test -f 'stage1_5.c' || echo '$(srcdir)/'`stage1_5.c

reiserfs_stage1_5_exec-stage1_5.obj: stage1_5.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT reiserfs_stage1_5_exec-stage1_5.obj -MD -MP -MF $(DEPDIR)/reiserfs_stage1_5_exec-stage1_5.Tpo -c -o reiserfs_stage1_5_exec-stage1_5.obj `if test -f 'stage1_5.c'; then $(CYGPATH_W) 'stage1_5.c'; else $(CYGPATH_W) '$(srcdir)/stage1_5.c'; fi`
#	$(am__mv) $(DEPDIR)/reiserfs_stage1_5_exec-stage1_5.Tpo $(DEPDIR)/reiserfs_stage1_5_exec-stage1_5.Po
#	source='stage1_5.c' object='reiserfs_stage1_5_exec-stage1_5.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o reiserfs_stage1_5_exec-stage1_5.obj `if test -f 'stage1_5.c'; then $(CYGPATH_W) 'stage1_5.c'; else $(CYGPATH_W) '$(srcdir)/stage1_5.c'; fi`

reiserfs_stage1_5_exec-fsys_reiserfs.o: fsys_reiserfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT reiserfs_stage1_5_exec-fsys_reiserfs.o -MD -MP -MF $(DEPDIR)/reiserfs_stage1_5_exec-fsys_reiserfs.Tpo -c -o reiserfs_stage1_5_exec-fsys_reiserfs.o `test -f 'fsys_reiserfs.c' || echo '$(srcdir)/'`fsys_reiserfs.c
#	$(am__mv) $(DEPDIR)/reiserfs_stage1_5_exec-fsys_reiserfs.Tpo $(DEPDIR)/reiserfs_stage1_5_exec-fsys_reiserfs.Po
#	source='fsys_reiserfs.c' object='reiserfs_stage1_5_exec-fsys_reiserfs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o reiserfs_stage1_5_exec-fsys_reiserfs.o `test -f 'fsys_reiserfs.c' || echo '$(srcdir)/'`fsys_reiserfs.c

reiserfs_stage1_5_exec-fsys_reiserfs.obj: fsys_reiserfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT reiserfs_stage1_5_exec-fsys_reiserfs.obj -MD -MP -MF $(DEPDIR)/reiserfs_stage1_5_exec-fsys_reiserfs.Tpo -c -o reiserfs_stage1_5_exec-fsys_reiserfs.obj `if test -f 'fsys_reiserfs.c'; then $(CYGPATH_W) 'fsys_reiserfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_reiserfs.c'; fi`
#	$(am__mv) $(DEPDIR)/reiserfs_stage1_5_exec-fsys_reiserfs.Tpo $(DEPDIR)/reiserfs_stage1_5_exec-fsys_reiserfs.Po
#	source='fsys_reiserfs.c' object='reiserfs_stage1_5_exec-fsys_reiserfs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o reiserfs_stage1_5_exec-fsys_reiserfs.obj `if test -f 'fsys_reiserfs.c'; then $(CYGPATH_W) 'fsys_reiserfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_reiserfs.c'; fi`

reiserfs_stage1_5_exec-bios.o: bios.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT reiserfs_stage1_5_exec-bios.o -MD -MP -MF $(DEPDIR)/reiserfs_stage1_5_exec-bios.Tpo -c -o reiserfs_stage1_5_exec-bios.o `test -f 'bios.c' || echo '$(srcdir)/'`bios.c
#	$(am__mv) $(DEPDIR)/reiserfs_stage1_5_exec-bios.Tpo $(DEPDIR)/reiserfs_stage1_5_exec-bios.Po
#	source='bios.c' object='reiserfs_stage1_5_exec-bios.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o reiserfs_stage1_5_exec-bios.o `test -f 'bios.c' || echo '$(srcdir)/'`bios.c

reiserfs_stage1_5_exec-bios.obj: bios.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT reiserfs_stage1_5_exec-bios.obj -MD -MP -MF $(DEPDIR)/reiserfs_stage1_5_exec-bios.Tpo -c -o reiserfs_stage1_5_exec-bios.obj `if test -f 'bios.c'; then $(CYGPATH_W) 'bios.c'; else $(CYGPATH_W) '$(srcdir)/bios.c'; fi`
#	$(am__mv) $(DEPDIR)/reiserfs_stage1_5_exec-bios.Tpo $(DEPDIR)/reiserfs_stage1_5_exec-bios.Po
#	source='bios.c' object='reiserfs_stage1_5_exec-bios.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reiserfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o reiserfs_stage1_5_exec-bios.obj `if test -f 'bios.c'; then $(CYGPATH_W) 'bios.c'; else $(CYGPATH_W) '$(srcdir)/bios.c'; fi`

ufs2_stage1_5_exec-common.o: common.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CFLAGS) $(CFLAGS) -MT ufs2_stage1_5_exec-common.o -MD -MP -MF $(DEPDIR)/ufs2_stage1_5_exec-common.Tpo -c -o ufs2_stage1_5_exec-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c
#	$(am__mv) $(DEPDIR)/ufs2_stage1_5_exec-common.Tpo $(DEPDIR)/ufs2_stage1_5_exec-common.Po
#	source='common.c' object='ufs2_stage1_5_exec-common.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o ufs2_stage1_5_exec-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c

ufs2_stage1_5_exec-common.obj: common.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CFLAGS) $(CFLAGS) -MT ufs2_stage1_5_exec-common.obj -MD -MP -MF $(DEPDIR)/ufs2_stage1_5_exec-common.Tpo -c -o ufs2_stage1_5_exec-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`
#	$(am__mv) $(DEPDIR)/ufs2_stage1_5_exec-common.Tpo $(DEPDIR)/ufs2_stage1_5_exec-common.Po
#	source='common.c' object='ufs2_stage1_5_exec-common.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o ufs2_stage1_5_exec-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`

ufs2_stage1_5_exec-char_io.o: char_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CFLAGS) $(CFLAGS) -MT ufs2_stage1_5_exec-char_io.o -MD -MP -MF $(DEPDIR)/ufs2_stage1_5_exec-char_io.Tpo -c -o ufs2_stage1_5_exec-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c
#	$(am__mv) $(DEPDIR)/ufs2_stage1_5_exec-char_io.Tpo $(DEPDIR)/ufs2_stage1_5_exec-char_io.Po
#	source='char_io.c' object='ufs2_stage1_5_exec-char_io.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o ufs2_stage1_5_exec-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c

ufs2_stage1_5_exec-char_io.obj: char_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CFLAGS) $(CFLAGS) -MT ufs2_stage1_5_exec-char_io.obj -MD -MP -MF $(DEPDIR)/ufs2_stage1_5_exec-char_io.Tpo -c -o ufs2_stage1_5_exec-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`
#	$(am__mv) $(DEPDIR)/ufs2_stage1_5_exec-char_io.Tpo $(DEPDIR)/ufs2_stage1_5_exec-char_io.Po
#	source='char_io.c' object='ufs2_stage1_5_exec-char_io.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o ufs2_stage1_5_exec-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`

ufs2_stage1_5_exec-disk_io.o: disk_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CFLAGS) $(CFLAGS) -MT ufs2_stage1_5_exec-disk_io.o -MD -MP -MF $(DEPDIR)/ufs2_stage1_5_exec-disk_io.Tpo -c -o ufs2_stage1_5_exec-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c
#	$(am__mv) $(DEPDIR)/ufs2_stage1_5_exec-disk_io.Tpo $(DEPDIR)/ufs2_stage1_5_exec-disk_io.Po
#	source='disk_io.c' object='ufs2_stage1_5_exec-disk_io.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o ufs2_stage1_5_exec-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c

ufs2_stage1_5_exec-disk_io.obj: disk_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CFLAGS) $(CFLAGS) -MT ufs2_stage1_5_exec-disk_io.obj -MD -MP -MF $(DEPDIR)/ufs2_stage1_5_exec-disk_io.Tpo -c -o ufs2_stage1_5_exec-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`
#	$(am__mv) $(DEPDIR)/ufs2_stage1_5_exec-disk_io.Tpo $(DEPDIR)/ufs2_stage1_5_exec-disk_io.Po
#	source='disk_io.c' object='ufs2_stage1_5_exec-disk_io.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o ufs2_stage1_5_exec-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`

ufs2_stage1_5_exec-stage1_5.o: stage1_5.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CFLAGS) $(CFLAGS) -MT ufs2_stage1_5_exec-stage1_5.o -MD -MP -MF $(DEPDIR)/ufs2_stage1_5_exec-stage1_5.Tpo -c -o ufs2_stage1_5_exec-stage1_5.o `test -f 'stage1_5.c' || echo '$(srcdir)/'`stage1_5.c
#	$(am__mv) $(DEPDIR)/ufs2_stage1_5_exec-stage1_5.Tpo $(DEPDIR)/ufs2_stage1_5_exec-stage1_5.Po
#	source='stage1_5.c' object='ufs2_stage1_5_exec-stage1_5.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o ufs2_stage1_5_exec-stage1_5.o `test -f 'stage1_5.c' || echo '$(srcdir)/'`stage1_5.c

ufs2_stage1_5_exec-stage1_5.obj: stage1_5.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CFLAGS) $(CFLAGS) -MT ufs2_stage1_5_exec-stage1_5.obj -MD -MP -MF $(DEPDIR)/ufs2_stage1_5_exec-stage1_5.Tpo -c -o ufs2_stage1_5_exec-stage1_5.obj `if test -f 'stage1_5.c'; then $(CYGPATH_W) 'stage1_5.c'; else $(CYGPATH_W) '$(srcdir)/stage1_5.c'; fi`
#	$(am__mv) $(DEPDIR)/ufs2_stage1_5_exec-stage1_5.Tpo $(DEPDIR)/ufs2_stage1_5_exec-stage1_5.Po
#	source='stage1_5.c' object='ufs2_stage1_5_exec-stage1_5.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o ufs2_stage1_5_exec-stage1_5.obj `if test -f 'stage1_5.c'; then $(CYGPATH_W) 'stage1_5.c'; else $(CYGPATH_W) '$(srcdir)/stage1_5.c'; fi`

ufs2_stage1_5_exec-fsys_ufs2.o: fsys_ufs2.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CFLAGS) $(CFLAGS) -MT ufs2_stage1_5_exec-fsys_ufs2.o -MD -MP -MF $(DEPDIR)/ufs2_stage1_5_exec-fsys_ufs2.Tpo -c -o ufs2_stage1_5_exec-fsys_ufs2.o `test -f 'fsys_ufs2.c' || echo '$(srcdir)/'`fsys_ufs2.c
#	$(am__mv) $(DEPDIR)/ufs2_stage1_5_exec-fsys_ufs2.Tpo $(DEPDIR)/ufs2_stage1_5_exec-fsys_ufs2.Po
#	source='fsys_ufs2.c' object='ufs2_stage1_5_exec-fsys_ufs2.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o ufs2_stage1_5_exec-fsys_ufs2.o `test -f 'fsys_ufs2.c' || echo '$(srcdir)/'`fsys_ufs2.c

ufs2_stage1_5_exec-fsys_ufs2.obj: fsys_ufs2.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CFLAGS) $(CFLAGS) -MT ufs2_stage1_5_exec-fsys_ufs2.obj -MD -MP -MF $(DEPDIR)/ufs2_stage1_5_exec-fsys_ufs2.Tpo -c -o ufs2_stage1_5_exec-fsys_ufs2.obj `if test -f 'fsys_ufs2.c'; then $(CYGPATH_W) 'fsys_ufs2.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ufs2.c'; fi`
#	$(am__mv) $(DEPDIR)/ufs2_stage1_5_exec-fsys_ufs2.Tpo $(DEPDIR)/ufs2_stage1_5_exec-fsys_ufs2.Po
#	source='fsys_ufs2.c' object='ufs2_stage1_5_exec-fsys_ufs2.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o ufs2_stage1_5_exec-fsys_ufs2.obj `if test -f 'fsys_ufs2.c'; then $(CYGPATH_W) 'fsys_ufs2.c'; else $(CYGPATH_W) '$(srcdir)/fsys_ufs2.c'; fi`

ufs2_stage1_5_exec-bios.o: bios.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CFLAGS) $(CFLAGS) -MT ufs2_stage1_5_exec-bios.o -MD -MP -MF $(DEPDIR)/ufs2_stage1_5_exec-bios.Tpo -c -o ufs2_stage1_5_exec-bios.o `test -f 'bios.c' || echo '$(srcdir)/'`bios.c
#	$(am__mv) $(DEPDIR)/ufs2_stage1_5_exec-bios.Tpo $(DEPDIR)/ufs2_stage1_5_exec-bios.Po
#	source='bios.c' object='ufs2_stage1_5_exec-bios.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o ufs2_stage1_5_exec-bios.o `test -f 'bios.c' || echo '$(srcdir)/'`bios.c

ufs2_stage1_5_exec-bios.obj: bios.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CFLAGS) $(CFLAGS) -MT ufs2_stage1_5_exec-bios.obj -MD -MP -MF $(DEPDIR)/ufs2_stage1_5_exec-bios.Tpo -c -o ufs2_stage1_5_exec-bios.obj `if test -f 'bios.c'; then $(CYGPATH_W) 'bios.c'; else $(CYGPATH_W) '$(srcdir)/bios.c'; fi`
#	$(am__mv) $(DEPDIR)/ufs2_stage1_5_exec-bios.Tpo $(DEPDIR)/ufs2_stage1_5_exec-bios.Po
#	source='bios.c' object='ufs2_stage1_5_exec-bios.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ufs2_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o ufs2_stage1_5_exec-bios.obj `if test -f 'bios.c'; then $(CYGPATH_W) 'bios.c'; else $(CYGPATH_W) '$(srcdir)/bios.c'; fi`

vstafs_stage1_5_exec-common.o: common.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT vstafs_stage1_5_exec-common.o -MD -MP -MF $(DEPDIR)/vstafs_stage1_5_exec-common.Tpo -c -o vstafs_stage1_5_exec-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c
#	$(am__mv) $(DEPDIR)/vstafs_stage1_5_exec-common.Tpo $(DEPDIR)/vstafs_stage1_5_exec-common.Po
#	source='common.c' object='vstafs_stage1_5_exec-common.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o vstafs_stage1_5_exec-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c

vstafs_stage1_5_exec-common.obj: common.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT vstafs_stage1_5_exec-common.obj -MD -MP -MF $(DEPDIR)/vstafs_stage1_5_exec-common.Tpo -c -o vstafs_stage1_5_exec-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`
#	$(am__mv) $(DEPDIR)/vstafs_stage1_5_exec-common.Tpo $(DEPDIR)/vstafs_stage1_5_exec-common.Po
#	source='common.c' object='vstafs_stage1_5_exec-common.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o vstafs_stage1_5_exec-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`

vstafs_stage1_5_exec-char_io.o: char_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT vstafs_stage1_5_exec-char_io.o -MD -MP -MF $(DEPDIR)/vstafs_stage1_5_exec-char_io.Tpo -c -o vstafs_stage1_5_exec-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c
#	$(am__mv) $(DEPDIR)/vstafs_stage1_5_exec-char_io.Tpo $(DEPDIR)/vstafs_stage1_5_exec-char_io.Po
#	source='char_io.c' object='vstafs_stage1_5_exec-char_io.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o vstafs_stage1_5_exec-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c

vstafs_stage1_5_exec-char_io.obj: char_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT vstafs_stage1_5_exec-char_io.obj -MD -MP -MF $(DEPDIR)/vstafs_stage1_5_exec-char_io.Tpo -c -o vstafs_stage1_5_exec-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`
#	$(am__mv) $(DEPDIR)/vstafs_stage1_5_exec-char_io.Tpo $(DEPDIR)/vstafs_stage1_5_exec-char_io.Po
#	source='char_io.c' object='vstafs_stage1_5_exec-char_io.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o vstafs_stage1_5_exec-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`

vstafs_stage1_5_exec-disk_io.o: disk_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT vstafs_stage1_5_exec-disk_io.o -MD -MP -MF $(DEPDIR)/vstafs_stage1_5_exec-disk_io.Tpo -c -o vstafs_stage1_5_exec-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c
#	$(am__mv) $(DEPDIR)/vstafs_stage1_5_exec-disk_io.Tpo $(DEPDIR)/vstafs_stage1_5_exec-disk_io.Po
#	source='disk_io.c' object='vstafs_stage1_5_exec-disk_io.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o vstafs_stage1_5_exec-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c

vstafs_stage1_5_exec-disk_io.obj: disk_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT vstafs_stage1_5_exec-disk_io.obj -MD -MP -MF $(DEPDIR)/vstafs_stage1_5_exec-disk_io.Tpo -c -o vstafs_stage1_5_exec-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`
#	$(am__mv) $(DEPDIR)/vstafs_stage1_5_exec-disk_io.Tpo $(DEPDIR)/vstafs_stage1_5_exec-disk_io.Po
#	source='disk_io.c' object='vstafs_stage1_5_exec-disk_io.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o vstafs_stage1_5_exec-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`

vstafs_stage1_5_exec-stage1_5.o: stage1_5.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT vstafs_stage1_5_exec-stage1_5.o -MD -MP -MF $(DEPDIR)/vstafs_stage1_5_exec-stage1_5.Tpo -c -o vstafs_stage1_5_exec-stage1_5.o `test -f 'stage1_5.c' || echo '$(srcdir)/'`stage1_5.c
#	$(am__mv) $(DEPDIR)/vstafs_stage1_5_exec-stage1_5.Tpo $(DEPDIR)/vstafs_stage1_5_exec-stage1_5.Po
#	source='stage1_5.c' object='vstafs_stage1_5_exec-stage1_5.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o vstafs_stage1_5_exec-stage1_5.o `test -f 'stage1_5.c' || echo '$(srcdir)/'`stage1_5.c

vstafs_stage1_5_exec-stage1_5.obj: stage1_5.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT vstafs_stage1_5_exec-stage1_5.obj -MD -MP -MF $(DEPDIR)/vstafs_stage1_5_exec-stage1_5.Tpo -c -o vstafs_stage1_5_exec-stage1_5.obj `if test -f 'stage1_5.c'; then $(CYGPATH_W) 'stage1_5.c'; else $(CYGPATH_W) '$(srcdir)/stage1_5.c'; fi`
#	$(am__mv) $(DEPDIR)/vstafs_stage1_5_exec-stage1_5.Tpo $(DEPDIR)/vstafs_stage1_5_exec-stage1_5.Po
#	source='stage1_5.c' object='vstafs_stage1_5_exec-stage1_5.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o vstafs_stage1_5_exec-stage1_5.obj `if test -f 'stage1_5.c'; then $(CYGPATH_W) 'stage1_5.c'; else $(CYGPATH_W) '$(srcdir)/stage1_5.c'; fi`

vstafs_stage1_5_exec-fsys_vstafs.o: fsys_vstafs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT vstafs_stage1_5_exec-fsys_vstafs.o -MD -MP -MF $(DEPDIR)/vstafs_stage1_5_exec-fsys_vstafs.Tpo -c -o vstafs_stage1_5_exec-fsys_vstafs.o `test -f 'fsys_vstafs.c' || echo '$(srcdir)/'`fsys_vstafs.c
#	$(am__mv) $(DEPDIR)/vstafs_stage1_5_exec-fsys_vstafs.Tpo $(DEPDIR)/vstafs_stage1_5_exec-fsys_vstafs.Po
#	source='fsys_vstafs.c' object='vstafs_stage1_5_exec-fsys_vstafs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o vstafs_stage1_5_exec-fsys_vstafs.o `test -f 'fsys_vstafs.c' || echo '$(srcdir)/'`fsys_vstafs.c

vstafs_stage1_5_exec-fsys_vstafs.obj: fsys_vstafs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT vstafs_stage1_5_exec-fsys_vstafs.obj -MD -MP -MF $(DEPDIR)/vstafs_stage1_5_exec-fsys_vstafs.Tpo -c -o vstafs_stage1_5_exec-fsys_vstafs.obj `if test -f 'fsys_vstafs.c'; then $(CYGPATH_W) 'fsys_vstafs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_vstafs.c'; fi`
#	$(am__mv) $(DEPDIR)/vstafs_stage1_5_exec-fsys_vstafs.Tpo $(DEPDIR)/vstafs_stage1_5_exec-fsys_vstafs.Po
#	source='fsys_vstafs.c' object='vstafs_stage1_5_exec-fsys_vstafs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o vstafs_stage1_5_exec-fsys_vstafs.obj `if test -f 'fsys_vstafs.c'; then $(CYGPATH_W) 'fsys_vstafs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_vstafs.c'; fi`

vstafs_stage1_5_exec-bios.o: bios.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT vstafs_stage1_5_exec-bios.o -MD -MP -MF $(DEPDIR)/vstafs_stage1_5_exec-bios.Tpo -c -o vstafs_stage1_5_exec-bios.o `test -f 'bios.c' || echo '$(srcdir)/'`bios.c
#	$(am__mv) $(DEPDIR)/vstafs_stage1_5_exec-bios.Tpo $(DEPDIR)/vstafs_stage1_5_exec-bios.Po
#	source='bios.c' object='vstafs_stage1_5_exec-bios.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o vstafs_stage1_5_exec-bios.o `test -f 'bios.c' || echo '$(srcdir)/'`bios.c

vstafs_stage1_5_exec-bios.obj: bios.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT vstafs_stage1_5_exec-bios.obj -MD -MP -MF $(DEPDIR)/vstafs_stage1_5_exec-bios.Tpo -c -o vstafs_stage1_5_exec-bios.obj `if test -f 'bios.c'; then $(CYGPATH_W) 'bios.c'; else $(CYGPATH_W) '$(srcdir)/bios.c'; fi`
#	$(am__mv) $(DEPDIR)/vstafs_stage1_5_exec-bios.Tpo $(DEPDIR)/vstafs_stage1_5_exec-bios.Po
#	source='bios.c' object='vstafs_stage1_5_exec-bios.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vstafs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o vstafs_stage1_5_exec-bios.obj `if test -f 'bios.c'; then $(CYGPATH_W) 'bios.c'; else $(CYGPATH_W) '$(srcdir)/bios.c'; fi`

xfs_stage1_5_exec-common.o: common.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT xfs_stage1_5_exec-common.o -MD -MP -MF $(DEPDIR)/xfs_stage1_5_exec-common.Tpo -c -o xfs_stage1_5_exec-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c
#	$(am__mv) $(DEPDIR)/xfs_stage1_5_exec-common.Tpo $(DEPDIR)/xfs_stage1_5_exec-common.Po
#	source='common.c' object='xfs_stage1_5_exec-common.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o xfs_stage1_5_exec-common.o `test -f 'common.c' || echo '$(srcdir)/'`common.c

xfs_stage1_5_exec-common.obj: common.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT xfs_stage1_5_exec-common.obj -MD -MP -MF $(DEPDIR)/xfs_stage1_5_exec-common.Tpo -c -o xfs_stage1_5_exec-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`
#	$(am__mv) $(DEPDIR)/xfs_stage1_5_exec-common.Tpo $(DEPDIR)/xfs_stage1_5_exec-common.Po
#	source='common.c' object='xfs_stage1_5_exec-common.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o xfs_stage1_5_exec-common.obj `if test -f 'common.c'; then $(CYGPATH_W) 'common.c'; else $(CYGPATH_W) '$(srcdir)/common.c'; fi`

xfs_stage1_5_exec-char_io.o: char_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT xfs_stage1_5_exec-char_io.o -MD -MP -MF $(DEPDIR)/xfs_stage1_5_exec-char_io.Tpo -c -o xfs_stage1_5_exec-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c
#	$(am__mv) $(DEPDIR)/xfs_stage1_5_exec-char_io.Tpo $(DEPDIR)/xfs_stage1_5_exec-char_io.Po
#	source='char_io.c' object='xfs_stage1_5_exec-char_io.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o xfs_stage1_5_exec-char_io.o `test -f 'char_io.c' || echo '$(srcdir)/'`char_io.c

xfs_stage1_5_exec-char_io.obj: char_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT xfs_stage1_5_exec-char_io.obj -MD -MP -MF $(DEPDIR)/xfs_stage1_5_exec-char_io.Tpo -c -o xfs_stage1_5_exec-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`
#	$(am__mv) $(DEPDIR)/xfs_stage1_5_exec-char_io.Tpo $(DEPDIR)/xfs_stage1_5_exec-char_io.Po
#	source='char_io.c' object='xfs_stage1_5_exec-char_io.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o xfs_stage1_5_exec-char_io.obj `if test -f 'char_io.c'; then $(CYGPATH_W) 'char_io.c'; else $(CYGPATH_W) '$(srcdir)/char_io.c'; fi`

xfs_stage1_5_exec-disk_io.o: disk_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT xfs_stage1_5_exec-disk_io.o -MD -MP -MF $(DEPDIR)/xfs_stage1_5_exec-disk_io.Tpo -c -o xfs_stage1_5_exec-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c
#	$(am__mv) $(DEPDIR)/xfs_stage1_5_exec-disk_io.Tpo $(DEPDIR)/xfs_stage1_5_exec-disk_io.Po
#	source='disk_io.c' object='xfs_stage1_5_exec-disk_io.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o xfs_stage1_5_exec-disk_io.o `test -f 'disk_io.c' || echo '$(srcdir)/'`disk_io.c

xfs_stage1_5_exec-disk_io.obj: disk_io.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT xfs_stage1_5_exec-disk_io.obj -MD -MP -MF $(DEPDIR)/xfs_stage1_5_exec-disk_io.Tpo -c -o xfs_stage1_5_exec-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`
#	$(am__mv) $(DEPDIR)/xfs_stage1_5_exec-disk_io.Tpo $(DEPDIR)/xfs_stage1_5_exec-disk_io.Po
#	source='disk_io.c' object='xfs_stage1_5_exec-disk_io.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o xfs_stage1_5_exec-disk_io.obj `if test -f 'disk_io.c'; then $(CYGPATH_W) 'disk_io.c'; else $(CYGPATH_W) '$(srcdir)/disk_io.c'; fi`

xfs_stage1_5_exec-stage1_5.o: stage1_5.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT xfs_stage1_5_exec-stage1_5.o -MD -MP -MF $(DEPDIR)/xfs_stage1_5_exec-stage1_5.Tpo -c -o xfs_stage1_5_exec-stage1_5.o `test -f 'stage1_5.c' || echo '$(srcdir)/'`stage1_5.c
#	$(am__mv) $(DEPDIR)/xfs_stage1_5_exec-stage1_5.Tpo $(DEPDIR)/xfs_stage1_5_exec-stage1_5.Po
#	source='stage1_5.c' object='xfs_stage1_5_exec-stage1_5.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o xfs_stage1_5_exec-stage1_5.o `test -f 'stage1_5.c' || echo '$(srcdir)/'`stage1_5.c

xfs_stage1_5_exec-stage1_5.obj: stage1_5.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT xfs_stage1_5_exec-stage1_5.obj -MD -MP -MF $(DEPDIR)/xfs_stage1_5_exec-stage1_5.Tpo -c -o xfs_stage1_5_exec-stage1_5.obj `if test -f 'stage1_5.c'; then $(CYGPATH_W) 'stage1_5.c'; else $(CYGPATH_W) '$(srcdir)/stage1_5.c'; fi`
#	$(am__mv) $(DEPDIR)/xfs_stage1_5_exec-stage1_5.Tpo $(DEPDIR)/xfs_stage1_5_exec-stage1_5.Po
#	source='stage1_5.c' object='xfs_stage1_5_exec-stage1_5.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o xfs_stage1_5_exec-stage1_5.obj `if test -f 'stage1_5.c'; then $(CYGPATH_W) 'stage1_5.c'; else $(CYGPATH_W) '$(srcdir)/stage1_5.c'; fi`

xfs_stage1_5_exec-fsys_xfs.o: fsys_xfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT xfs_stage1_5_exec-fsys_xfs.o -MD -MP -MF $(DEPDIR)/xfs_stage1_5_exec-fsys_xfs.Tpo -c -o xfs_stage1_5_exec-fsys_xfs.o `test -f 'fsys_xfs.c' || echo '$(srcdir)/'`fsys_xfs.c
#	$(am__mv) $(DEPDIR)/xfs_stage1_5_exec-fsys_xfs.Tpo $(DEPDIR)/xfs_stage1_5_exec-fsys_xfs.Po
#	source='fsys_xfs.c' object='xfs_stage1_5_exec-fsys_xfs.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o xfs_stage1_5_exec-fsys_xfs.o `test -f 'fsys_xfs.c' || echo '$(srcdir)/'`fsys_xfs.c

xfs_stage1_5_exec-fsys_xfs.obj: fsys_xfs.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT xfs_stage1_5_exec-fsys_xfs.obj -MD -MP -MF $(DEPDIR)/xfs_stage1_5_exec-fsys_xfs.Tpo -c -o xfs_stage1_5_exec-fsys_xfs.obj `if test -f 'fsys_xfs.c'; then $(CYGPATH_W) 'fsys_xfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_xfs.c'; fi`
#	$(am__mv) $(DEPDIR)/xfs_stage1_5_exec-fsys_xfs.Tpo $(DEPDIR)/xfs_stage1_5_exec-fsys_xfs.Po
#	source='fsys_xfs.c' object='xfs_stage1_5_exec-fsys_xfs.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o xfs_stage1_5_exec-fsys_xfs.obj `if test -f 'fsys_xfs.c'; then $(CYGPATH_W) 'fsys_xfs.c'; else $(CYGPATH_W) '$(srcdir)/fsys_xfs.c'; fi`

xfs_stage1_5_exec-bios.o: bios.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT xfs_stage1_5_exec-bios.o -MD -MP -MF $(DEPDIR)/xfs_stage1_5_exec-bios.Tpo -c -o xfs_stage1_5_exec-bios.o `test -f 'bios.c' || echo '$(srcdir)/'`bios.c
#	$(am__mv) $(DEPDIR)/xfs_stage1_5_exec-bios.Tpo $(DEPDIR)/xfs_stage1_5_exec-bios.Po
#	source='bios.c' object='xfs_stage1_5_exec-bios.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o xfs_stage1_5_exec-bios.o `test -f 'bios.c' || echo '$(srcdir)/'`bios.c

xfs_stage1_5_exec-bios.obj: bios.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CFLAGS) $(CFLAGS) -MT xfs_stage1_5_exec-bios.obj -MD -MP -MF $(DEPDIR)/xfs_stage1_5_exec-bios.Tpo -c -o xfs_stage1_5_exec-bios.obj `if test -f 'bios.c'; then $(CYGPATH_W) 'bios.c'; else $(CYGPATH_W) '$(srcdir)/bios.c'; fi`
#	$(am__mv) $(DEPDIR)/xfs_stage1_5_exec-bios.Tpo $(DEPDIR)/xfs_stage1_5_exec-bios.Po
#	source='bios.c' object='xfs_stage1_5_exec-bios.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xfs_stage1_5_exec_CFLAGS) $(CFLAGS) -c -o xfs_stage1_5_exec-bios.obj `if test -f 'bios.c'; then $(CYGPATH_W) 'bios.c'; else $(CYGPATH_W) '$(srcdir)/bios.c'; fi`
install-pkgdataDATA: $(pkgdata_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgdatadir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgdatadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgdatadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgdatadir)" || exit $$?; \
	done

uninstall-pkgdataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgdatadir)'; $(am__uninstall_files_from_dir)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

cscopelist:  $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS) $(LISP)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

buildtest-TESTS: $(TESTS)

check-TESTS: buildtest-TESTS
	$(MAKE) $(AM_MAKEFLAGS) runtest-TESTS

runtest-TESTS:
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst $(AM_TESTS_FD_REDIRECT); then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(SCRIPTS) $(DATA) \
		$(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(pkgdatadir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-pkgdataDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-pkgdataDATA

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS all all-am buildtest-TESTS check check-TESTS \
	check-am clean clean-generic clean-noinstLIBRARIES \
	clean-noinstPROGRAMS cscopelist ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-pkgdataDATA install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	runtest-TESTS tags uninstall uninstall-am \
	uninstall-pkgdataDATA


#stage2_size.h: pre_stage2
#	-rm -f stage2_size.h
#	set dummy `ls -l pre_stage2`; \
#	echo "#define STAGE2_SIZE $$6" > stage2_size.h

# XXX: automake doesn't provide a way to specify dependencies for object
# files explicitly, so we must write this by a general Makefile scheme.
# If automake change the naming scheme for per-executable objects, this
# will be broken.
#start_exec-start.$(OBJEXT): stage2_size.h

#stage2: pre_stage2 start
#	-rm -f stage2
#	cat start pre_stage2 > stage2

#start_eltorito_exec-start.$(OBJEXT): stage2_size.h

#stage2_eltorito: pre_stage2 start_eltorito
#	-rm -f stage2_eltorito
#	cat start_eltorito pre_stage2 > stage2_eltorito

#diskless_size.h: diskless
#	-rm -f $@
#	set dummy `ls -l $^`; \
#	echo "#define DISKLESS_SIZE $$6" > $@

# XXX: See the comment for start_exec-start.o.
#nbloader_exec-nbloader.$(OBJEXT): diskless_size.h

# For nbgrub target.
#nbgrub: nbloader diskless
#	-rm -f $@
#	cat $^ > $@

# XXX: See the comment for start_exec-start.o.
#pxeloader_exec-pxeloader.$(OBJEXT): diskless_size.h

# For pxegrub target.
#pxegrub: pxeloader diskless
#	-rm -f $@
#	cat $^ > $@
#.exec:
#	$(OBJCOPY) -O binary $< $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
